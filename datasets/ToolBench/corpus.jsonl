{"_id": "0", "title": "", "text": "category_name:Food, tool_name:The Cocktail DB, api_name:List of Cocktails, api_description:This endpoint responds with a list of cocktails that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Cocktail Recipe by ID\" endpoint to receive the detailed cocktail recipe., required_params: [], optional_params: [], return_schema: {\"id\": \"str\", \"title\": \"str\", \"difficulty\": \"str\", \"image\": \"str\"}", "metadata": {}}
{"_id": "1", "title": "", "text": "category_name:Food, tool_name:The Cocktail DB, api_name:Detailed Cocktail Recipe by ID, api_description:Get Cocktail by ID, required_params: [{\"name\": \"id\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"id\": \"str\", \"title\": \"str\", \"difficulty\": \"str\", \"portion\": \"str\", \"time\": \"str\", \"description\": \"str\", \"ingredients\": [\"list of str with length 5\"], \"method\": [{\"Step 1\": \"str\", \"_list_length\": 3}], \"image\": \"str\"}", "metadata": {}}
{"_id": "2", "title": "", "text": "category_name:Data, tool_name:Web Search, api_name:newsSearch, api_description:Get news articles relevant for a given query., required_params: [{\"name\": \"pageSize\", \"type\": \"NUMBER\", \"description\": \"The number of items per page. The maximum value is 50.\"}, {\"name\": \"autoCorrect\", \"type\": \"BOOLEAN\", \"description\": \"Automatically correct spelling.\"}, {\"name\": \"q\", \"type\": \"STRING\", \"description\": \"The user's search query string.\"}, {\"name\": \"pageNumber\", \"type\": \"NUMBER\", \"description\": \"The page to view.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "3", "title": "", "text": "category_name:Finance, tool_name:Investors Exchange (IEX) Trading, api_name:IEX Regulation SHO Threshold Securities List, api_description:IEX-listed securities that have an aggregate fail to deliver position for five consecutive settlement days at a registered clearing agency, totaling 10,000 shares or more and equal to at least 0.5% of the issuer’s total shares outstanding (i.e., “threshold securities”). , required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "4", "title": "", "text": "category_name:Finance, tool_name:Investors Exchange (IEX) Trading, api_name:OHLC, api_description:Returns the official open and close for a give symbol., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Specify stock symbol or use \\\"market\\\" for market-wide information\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "5", "title": "", "text": "category_name:Sports, tool_name:Live Sports Odds, api_name:/v4/sports/{sport}/odds, api_description:Returns list of live and upcoming games for a given sport, showing bookmaker odds for the specified region and markets. Set the `sport` to a `sport_key` from the /sports endpoint. Alternatively if `sport=upcoming`, it will return a list of the next 8 upcoming games across all sports, as well as any live games. For more info, see [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html) and [list of available bookmakers](https://the-odds-api.com/sports-odds-data/bookmaker-apis.html)., required_params: [{\"name\": \"sport\", \"type\": \"STRING\", \"description\": \"sport key for which to return games and odds\"}, {\"name\": \"regions\", \"type\": \"STRING\", \"description\": \"Determines which bookmakers appear in the response. Can be a comma delimited list of regions. Each region will count as 1 request against the usage quota for each market. Most use cases will only need to specify one region. For a list of bookmakers by region, see https://the-odds-api.com/sports-odds-data/bookmaker-apis.html\"}], optional_params: [], return_schema: {\"id\": \"str\", \"sport_key\": \"str\", \"sport_title\": \"str\", \"commence_time\": \"str\", \"home_team\": \"str\", \"away_team\": \"str\", \"bookmakers\": [{\"key\": \"str\", \"title\": \"str\", \"last_update\": \"str\", \"markets\": [{\"key\": \"str\", \"last_update\": \"str\", \"outcomes\": [{\"name\": \"str\", \"price\": \"float\", \"_list_length\": 2}], \"_list_length\": 1}], \"_list_length\": 1}]}", "metadata": {}}
{"_id": "6", "title": "", "text": "category_name:Finance, tool_name:Investors Exchange (IEX) Trading, api_name:IEX Short Interest List, api_description:Consolidated market short interest positions in all IEX-listed securities, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "7", "title": "", "text": "category_name:Entertainment, tool_name:TVMaze, api_name:/people/{id}, api_description:Get person information, required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "8", "title": "", "text": "category_name:Entertainment, tool_name:TVMaze, api_name:/search/shows?q={query}, api_description:Search for shows, required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "9", "title": "", "text": "category_name:Movies, tool_name:Streaming Availability, api_name:Search Basic (FREE), api_description:Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country., required_params: [{\"name\": \"services\", \"type\": \"STRING\", \"description\": \"A comma separated list of up to 4 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\\n\\nSyntax of the values supplied in the list can be as the followings:\\n\\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\\n\\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\\n\\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\\n\\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\\n\\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\\n\\nSome sample list values:\\n\\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\\n\\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.\"}, {\"name\": \"country\", \"type\": \"STRING\", \"description\": \"2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.\"}], optional_params: [], return_schema: \"{\\\"result\\\": [{\\\"type\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"overview\\\": \\\"str\\\", \\\"streamingInfo\\\": {\\\"us\\\": {\\\"apple\\\": [{\\\"type\\\": \\\"str\\\", \\\"quality\\\": \\\"str\\\", \\\"addOn\\\": \\\"str\\\", \\\"link\\\": \\\"str\\\", \\\"watchLink\\\": \\\"str\\\", \\\"audios\\\": [{\\\"language\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"subtitles\\\": [{\\\"locale\\\": {\\\"language\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\"}, \\\"closedCaptions\\\": \\\"bool\\\", \\\"_list_length\\\": 2}], \\\"price\\\": {\\\"amount\\\": \\\"str\\\", \\\"currency\\\": \\\"str\\\", \\\"formatted\\\": \\\"str\\\"}, \\\"leaving\\\": \\\"int\\\", \\\"availableSince\\\": \\\"int\\\", \\\"_list_length\\\": 2}], \\\"prime\\\": [{\\\"type\\\": \\\"str\\\", \\\"quality\\\": \\\"str\\\", \\\"addOn\\\": \\\"str\\\", \\\"link\\\": \\\"str\\\", \\\"watchLink\\\": \\\"str\\\", \\\"audios\\\": [{\\\"language\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"subtitles\\\": [{\\\"locale\\\": {\\\"language\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\"}, \\\"closedCaptions\\\": \\\"bool\\\", \\\"_list_length\\\": 1}], \\\"price\\\": {\\\"amount\\\": \\\"str\\\", \\\"currency\\\": \\\"str\\\", \\\"formatted\\\": \\\"str\\\"}, \\\"leaving\\\": \\\"int\\\", \\\"availableSince\\\": \\\"int\\\", \\\"_list_length\\\": 4}]}}, \\\"cast\\\": [\\\"list of str with length 7\\\"], \\\"year\\\": \\\"int\\\", \\\"advisedMinimumAudienceAge\\\": \\\"int\\\", \\\"imdbId\\\": \"", "metadata": {}}
{"_id": "10", "title": "", "text": "category_name:Movies, tool_name:Streaming Availability, api_name:Get Basic (FREE), api_description:Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country., required_params: [{\"name\": \"country\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"{\\\"result\\\": {\\\"type\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"overview\\\": \\\"str\\\", \\\"streamingInfo\\\": {\\\"us\\\": {\\\"apple\\\": [{\\\"type\\\": \\\"str\\\", \\\"quality\\\": \\\"str\\\", \\\"addOn\\\": \\\"str\\\", \\\"link\\\": \\\"str\\\", \\\"watchLink\\\": \\\"str\\\", \\\"audios\\\": [{\\\"language\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"_list_length\\\": 3}], \\\"subtitles\\\": [{\\\"locale\\\": {\\\"language\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\"}, \\\"closedCaptions\\\": \\\"bool\\\", \\\"_list_length\\\": 34}], \\\"price\\\": {\\\"amount\\\": \\\"str\\\", \\\"currency\\\": \\\"str\\\", \\\"formatted\\\": \\\"str\\\"}, \\\"leaving\\\": \\\"int\\\", \\\"availableSince\\\": \\\"int\\\", \\\"_list_length\\\": 2}], \\\"hbo\\\": [{\\\"type\\\": \\\"str\\\", \\\"quality\\\": \\\"str\\\", \\\"addOn\\\": \\\"str\\\", \\\"link\\\": \\\"str\\\", \\\"watchLink\\\": \\\"str\\\", \\\"audios\\\": [{\\\"language\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"_list_length\\\": 3}], \\\"subtitles\\\": [{\\\"locale\\\": {\\\"language\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\"}, \\\"closedCaptions\\\": \\\"bool\\\", \\\"_list_length\\\": 3}], \\\"price\\\": \\\"NoneType\\\", \\\"leaving\\\": \\\"int\\\", \\\"availableSince\\\": \\\"int\\\", \\\"_list_length\\\": 1}], \\\"hulu\\\": [{\\\"type\\\": \\\"str\\\", \\\"quality\\\": \\\"str\\\", \\\"addOn\\\": \\\"str\\\", \\\"link\\\": \\\"str\\\", \\\"watchLink\\\": \\\"str\\\", \\\"audios\\\": [{\\\"language\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"_list_l\"", "metadata": {}}
{"_id": "11", "title": "", "text": "category_name:Entertainment, tool_name:TVMaze, api_name:/search/people?q={query}, api_description:Search for people, required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "12", "title": "", "text": "category_name:Entertainment, tool_name:DOTA 2 Steam Web, api_name:Match Details, api_description:To retrieve the specific details of a match, use this API:, required_params: [{\"name\": \"match_id\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"matches_requested\", \"type\": \"STRING\", \"description\": \"Defaults is 25 matches, this can limit to less\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "13", "title": "", "text": "category_name:Data, tool_name:Diablo4 Smartable, api_name:GetNews, api_description:Get Diablo 4 news., required_params: [{\"name\": \"page\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"page\": \"int\", \"value\": [{\"path\": \"str\", \"title\": \"str\", \"excerpt\": \"str\", \"sourceUrl\": \"str\", \"webUrl\": \"str\", \"originalUrl\": \"str\", \"featuredContent\": \"NoneType\", \"highlight\": \"NoneType\", \"heat\": \"int\", \"tags\": \"NoneType\", \"images\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"title\": \"NoneType\", \"attribution\": \"NoneType\", \"isCached\": \"bool\", \"_list_length\": 1}], \"content\": \"str\", \"type\": \"str\", \"ampWebUrl\": \"NoneType\", \"cdnAmpWebUrl\": \"NoneType\", \"publishedDateTime\": \"str\", \"updatedDateTime\": \"NoneType\", \"provider\": {\"name\": \"str\", \"domain\": \"str\", \"images\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"title\": \"NoneType\", \"attribution\": \"NoneType\", \"isCached\": \"bool\", \"_list_length\": 1}], \"publishers\": \"NoneType\", \"authors\": \"NoneType\"}, \"locale\": \"str\", \"categories\": [\"list of str with length 1\"], \"topics\": [\"list of str with length 1\"], \"_list_length\": 25}], \"nextPage\": \"int\"}", "metadata": {}}
{"_id": "14", "title": "", "text": "category_name:Data, tool_name:Diablo4 Smartable, api_name:GetCommunities, api_description:Get Diablo 4 communities, required_params: [{\"name\": \"page\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"title\": \"str\", \"path\": \"str\", \"page\": \"int\", \"value\": [{\"path\": \"str\", \"excerpt\": \"str\", \"sourceUrl\": \"str\", \"webUrl\": \"str\", \"originalUrl\": \"str\", \"provider\": {\"name\": \"str\", \"domain\": \"str\", \"images\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"isCached\": \"bool\", \"_list_length\": 1}]}, \"heat\": \"int\", \"images\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"isCached\": \"bool\", \"_list_length\": 1}], \"content\": \"str\", \"name\": \"str\", \"type\": \"str\", \"members\": \"int\", \"topics\": [\"list of str with length 1\"], \"_list_length\": 3}]}", "metadata": {}}
{"_id": "15", "title": "", "text": "category_name:Gaming, tool_name:Raider.IO, api_name:RaiderIO_Call, api_description:Calls the Raider.io API to get info, required_params: [{\"name\": \"region\", \"type\": \"STRING\", \"description\": \"Region (us)\"}, {\"name\": \"realm\", \"type\": \"STRING\", \"description\": \"Realm (stormrage)\"}, {\"name\": \"fields\", \"type\": \"STRING\", \"description\": \"Field (gear or mythic_plus_scores_by_season:current\"}, {\"name\": \"name\", \"type\": \"STRING\", \"description\": \"Character Name\"}], optional_params: [], return_schema: {\"statusCode\": \"int\", \"error\": \"str\", \"message\": \"str\"}", "metadata": {}}
{"_id": "16", "title": "", "text": "category_name:Data, tool_name:Diablo4 Smartable, api_name:GetSponsorships, api_description:Get Diablo 4 sponsorships., required_params: [], optional_params: [], return_schema: {\"value\": \"empty list\"}", "metadata": {}}
{"_id": "17", "title": "", "text": "category_name:Entertainment, tool_name:DOTA 2 Steam Web, api_name:Match History, api_description:will return the latest 25 public matches in JSON format. You can request it in XML format, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "18", "title": "", "text": "category_name:Data, tool_name:World Bank | GDP, api_name:List of countries with income level, api_description:Sourced from Developer Information issued by The World Bank Group at https://datahelpdesk.worldbank.org/knowledgebase/topics/125589-developer-information\n\nExternal Doc URL available at http://api.worldbank.org/V2/incomeLevel/LIC/country\n\nOutput format available at http://api.worldbank.org/v2/country/all/indicator/SP.POP.TOTL?format=json, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "19", "title": "", "text": "category_name:Finance, tool_name:BB Finance, api_name:news/list-by-region, api_description:List latest news from different categories and grouped by region, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"One of the following is allowed home-v3|asia-home-v3|europe-home-v3|middle-east-home-v3|africa-home-v3|canada-home-v3\"}], optional_params: [], return_schema: \"{\\\"title\\\": \\\"NoneType\\\", \\\"id\\\": \\\"str\\\", \\\"indexBar\\\": {\\\"enabled\\\": \\\"bool\\\", \\\"quotes\\\": [{\\\"EURUSD:CUR\\\": {\\\"baseName\\\": \\\"str\\\", \\\"securityType\\\": \\\"str\\\", \\\"symbol\\\": \\\"str\\\", \\\"country\\\": \\\"str\\\", \\\"currency\\\": \\\"str\\\", \\\"resourceType\\\": \\\"str\\\", \\\"resourceSubtype\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"ticker\\\": \\\"str\\\", \\\"tickerName\\\": \\\"str\\\", \\\"template\\\": \\\"str\\\", \\\"tinyName\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"watchlist\\\": \\\"bool\\\", \\\"resourceId\\\": \\\"str\\\", \\\"last\\\": \\\"str\\\", \\\"netChange\\\": \\\"str\\\", \\\"lastPriceTime\\\": \\\"int\\\", \\\"yearHigh\\\": \\\"str\\\", \\\"dayHigh\\\": \\\"str\\\", \\\"yearLow\\\": \\\"str\\\", \\\"sourceCurrency\\\": \\\"str\\\", \\\"dayLow\\\": \\\"str\\\", \\\"pctChange\\\": \\\"str\\\", \\\"sparkline\\\": {\\\"href\\\": \\\"str\\\"}}, \\\"_list_length\\\": 3}], \\\"stories\\\": [{\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"internalID\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"summary\\\": \\\"str\\\", \\\"autoGeneratedSummary\\\": \\\"str\\\", \\\"abstract\\\": [\\\"list of str with length 2\\\"], \\\"published\\\": \\\"int\\\", \\\"updatedAt\\\": \\\"int\\\", \\\"wordCount\\\": \\\"int\\\", \\\"premium\\\": \\\"bool\\\", \\\"secondaryBrands\\\": [\\\"list of str with length 1\\\"], \\\"byline\\\": \\\"str\\\", \\\"shortURL\\\": \\\"str\\\", \\\"longURL\\\": \\\"str\\\", \\\"primaryCategory\\\": \\\"str\\\", \\\"pri\"", "metadata": {}}
{"_id": "20", "title": "", "text": "category_name:Data, tool_name:World Bank | GDP, api_name:List all countries, api_description:Sourced from Developer Information issued by The World Bank Group at https://datahelpdesk.worldbank.org/knowledgebase/topics/125589-developer-information\n\nExternal Doc URL available at http://api.worldbank.org/v2/country\n\nOutput format available at http://api.worldbank.org/v2/country/all/indicator/SP.POP.TOTL?format=json, required_params: [{\"name\": \"iso2Code\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "21", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:IPO Calendar, api_description:This endpoint returns past, today, or upcoming IPOs.\n\nAvailability: Pro plan\nData weighting: 40 API credits per symbol, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "22", "title": "", "text": "category_name:Finance, tool_name:BB Finance, api_name:market/get-chart, api_description:Get related data for drawing chart, required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"One of the followings : d1|d3|ytd|m1|m3|m6|y1|y5\"}, {\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of id field returned in .../market/auto-complete endpoint\"}], optional_params: [], return_schema: {\"result\": {\"INMEX:IND\": {\"historical\": \"bool\", \"ticksType\": \"str\", \"ticks\": [{\"time\": \"int\", \"close\": \"float\", \"volume\": \"int\", \"_list_length\": 253}], \"low\": \"str\", \"high\": \"str\", \"first\": \"int\", \"last\": \"int\", \"security\": {\"ticker\": \"str\", \"open\": \"str\", \"prevClose\": \"str\"}, \"hasVolume\": \"bool\"}}}", "metadata": {}}
{"_id": "23", "title": "", "text": "category_name:Finance, tool_name:BB Finance, api_name:market/auto-complete, api_description:Query suggestion by term and phrase, required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"quote\": [{\"securityType\": \"str\", \"symbol\": \"str\", \"country\": \"str\", \"currency\": \"str\", \"resourceType\": \"str\", \"resourceSubtype\": \"str\", \"region\": \"str\", \"ticker\": \"str\", \"tickerName\": \"str\", \"template\": \"str\", \"tinyName\": \"str\", \"name\": \"str\", \"watchlist\": \"bool\", \"resourceId\": \"str\", \"id\": \"str\", \"title\": \"str\", \"card\": \"str\", \"_list_length\": 25}], \"news\": [{\"title\": \"str\", \"id\": \"str\", \"card\": \"str\", \"date\": \"int\", \"longURL\": \"str\", \"thumbnailImage\": \"str\", \"_list_length\": 25}]}", "metadata": {}}
{"_id": "24", "title": "", "text": "category_name:Mapping, tool_name:Reverse Geocoding and Geolocation Service, api_name:GetNearestCities, api_description:Returns a readable place name as nearest 3 cities with population, country and distance based on given latitude/longitude pair., required_params: [{\"name\": \"latitude\", \"type\": \"NUMBER\", \"description\": \"latitude in decimal degrees (wgs84)\"}, {\"name\": \"longitude\", \"type\": \"NUMBER\", \"description\": \"longitude in decimal degrees (wgs84)\"}, {\"name\": \"range\", \"type\": \"NUMBER\", \"description\": \"max radial range for lookup in meter (0=no range)\"}], optional_params: [], return_schema: {\"City\": \"str\", \"Population\": \"int\", \"Latitude\": \"float\", \"Longitude\": \"float\", \"Country\": \"str\", \"CountryId\": \"str\", \"TimeZoneId\": \"str\", \"TimeZoneName\": \"str\", \"TimeZone_GMT_offset\": \"int\", \"LocalTimeNow\": \"str\", \"Distance\": \"float\", \"Bearing\": \"float\", \"CompassDirection\": \"str\"}", "metadata": {}}
{"_id": "25", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Languages, api_description:Get all supported languages, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "26", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Admin Divisions Near Location, api_description:Get administrative divisions near the given location, filtering by optional criteria., required_params: [{\"name\": \"locationid\", \"type\": \"STRING\", \"description\": \"Only divisions near this location. Latitude/longitude in ISO-6709 format: \\u00b1DD.DDDD\\u00b1DDD.DDDD\"}, {\"name\": \"radius\", \"type\": \"STRING\", \"description\": \"The location radius within which to find divisions\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "27", "title": "", "text": "category_name:Financial, tool_name:QuantaEx Market Data, api_name:24 Hours Tickers, api_description:24 hours trading data, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "28", "title": "", "text": "category_name:Finance, tool_name:Stock and Options Trading Data Provider, api_name:Options, api_description:Stock and Options Data, required_params: [{\"name\": \"ticker\", \"type\": \"STRING\", \"description\": \"A ticker for U.S. Trading Stocks and ETF\"}], optional_params: [], return_schema: \"{\\\"stock\\\": {\\\"avgTotalVolume\\\": \\\"int\\\", \\\"calculationPrice\\\": \\\"str\\\", \\\"close\\\": \\\"float\\\", \\\"closeSource\\\": \\\"str\\\", \\\"closeTime\\\": \\\"int\\\", \\\"currency\\\": \\\"str\\\", \\\"delayedPrice\\\": \\\"NoneType\\\", \\\"delayedPriceTime\\\": \\\"NoneType\\\", \\\"extendedChange\\\": \\\"NoneType\\\", \\\"extendedChangePercent\\\": \\\"NoneType\\\", \\\"extendedPrice\\\": \\\"NoneType\\\", \\\"extendedPriceTime\\\": \\\"NoneType\\\", \\\"highSource\\\": \\\"NoneType\\\", \\\"highTime\\\": \\\"NoneType\\\", \\\"lastTradeTime\\\": \\\"int\\\", \\\"latestSource\\\": \\\"str\\\", \\\"latestTime\\\": \\\"str\\\", \\\"latestUpdate\\\": \\\"int\\\", \\\"latestVolume\\\": \\\"int\\\", \\\"lowSource\\\": \\\"NoneType\\\", \\\"lowTime\\\": \\\"NoneType\\\", \\\"marketCap\\\": \\\"int\\\", \\\"oddLotDelayedPrice\\\": \\\"NoneType\\\", \\\"oddLotDelayedPriceTime\\\": \\\"NoneType\\\", \\\"open\\\": \\\"NoneType\\\", \\\"openTime\\\": \\\"int\\\", \\\"openSource\\\": \\\"str\\\", \\\"peRatio\\\": \\\"float\\\", \\\"previousVolume\\\": \\\"int\\\", \\\"primaryExchange\\\": \\\"str\\\", \\\"symbol\\\": \\\"str\\\", \\\"volume\\\": \\\"int\\\", \\\"week52High\\\": \\\"float\\\", \\\"week52Low\\\": \\\"float\\\", \\\"ytdChange\\\": \\\"float\\\", \\\"isUSMarketOpen\\\": \\\"bool\\\", \\\"shortName\\\": \\\"str\\\", \\\"regularMarketPrice\\\": \\\"float\\\", \\\"regularMarketOpen\\\": \\\"float\\\", \\\"regularMarketDayHigh\\\": \\\"N\"", "metadata": {}}
{"_id": "29", "title": "", "text": "category_name:Finance, tool_name:Stock and Options Trading Data Provider, api_name:Straddle, api_description:Straddle Format, required_params: [{\"name\": \"ticker\", \"type\": \"STRING\", \"description\": \"Ticker for Intel Stock\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "30", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/parent/get-highest-rated-investments, api_description:Get highest rated investments as displayed in the Parent tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "31", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/key-stats/get-overview, api_description:Get key stats overview in the Valuation tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "32", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/get-strategy, api_description:Get strategy, required_params: [{\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}, {\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "33", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:market/v2/get-returns, api_description:Get market return by years, required_params: [{\"name\": \"performanceIds\", \"type\": \"STRING\", \"description\": \"The value of performanceId returned in .../market/v2/get-movers , .../market/v2/auto-complete, etc... endpoints. Separated by comma to query multiple entities.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "34", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-analysis-report, api_description:Get detail information of stock, market, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "35", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/risk/get-risk-return-analysis, api_description:Get risk return analysis in the Risk tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "36", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/analysis/get-archived, api_description:Get Morningstar's analysis archived related to an ETF or FUND, required_params: [{\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}, {\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "37", "title": "", "text": "category_name:Database, tool_name:Data Axle Consumer Search, api_name:Consumer Name Search, api_description:Find relevant People in the Data Axle database, required_params: [{\"name\": \"limit\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"packages\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"count\": \"int\", \"documents\": [{\"person_id\": \"str\", \"first_name\": \"str\", \"last_name\": \"str\", \"gender\": \"str\", \"family_id\": \"str\", \"estimated_married\": \"str\", \"multi_family\": \"bool\", \"location_family_count\": [\"list of int with length 2\"], \"location_unit_count\": [\"list of int with length 2\"], \"street\": \"str\", \"city\": \"str\", \"state\": \"str\", \"postal_code\": \"str\", \"geocoordinate\": {\"lat\": \"float\", \"lon\": \"float\"}, \"geocode_method\": \"str\", \"cbsa_code\": \"str\", \"cbsa_level\": \"str\", \"csa_code\": \"str\", \"census_block_group\": \"str\", \"census_tract\": \"str\", \"fips_code\": \"str\", \"congressional_district\": \"str\", \"_list_length\": 20}]}", "metadata": {}}
{"_id": "38", "title": "", "text": "category_name:Location, tool_name:Address Correction and Geocoding, api_name:/address, api_description:Address, required_params: [{\"name\": \"AddressLine1\", \"type\": \"STRING\", \"description\": \"First line of address\"}, {\"name\": \"AddressLine2\", \"type\": \"STRING\", \"description\": \"Second line of address - city, state, zip.\"}], optional_params: [], return_schema: {\"ErrorCode\": \"int\", \"ErrorMessage\": \"str\", \"AddressLine1\": \"NoneType\", \"AddressLine2\": \"NoneType\", \"Number\": \"NoneType\", \"PreDir\": \"NoneType\", \"Street\": \"NoneType\", \"Suffix\": \"NoneType\", \"PostDir\": \"NoneType\", \"Sec\": \"NoneType\", \"SecNumber\": \"NoneType\", \"SecValidated\": \"NoneType\", \"City\": \"NoneType\", \"State\": \"NoneType\", \"Zip\": \"NoneType\", \"Zip4\": \"NoneType\", \"UspsCarrierRoute\": \"NoneType\", \"County\": \"NoneType\", \"StateFP\": \"NoneType\", \"CountyFP\": \"NoneType\", \"CensusTract\": \"NoneType\", \"CensusBlock\": \"NoneType\", \"Latitude\": \"int\", \"Longitude\": \"int\", \"GeoPrecision\": \"int\", \"TimeZoneOffset\": \"NoneType\", \"DstObserved\": \"NoneType\", \"PlaceFP\": \"NoneType\", \"CityMunicipality\": \"NoneType\", \"SalesTaxRate\": \"NoneType\", \"SalesTaxJurisdiction\": \"NoneType\"}", "metadata": {}}
{"_id": "39", "title": "", "text": "category_name:Events, tool_name:Working days, api_name:/1.3/get_info_day, api_description:Get detailed information about a specific day., required_params: [{\"name\": \"country_code\", \"type\": \"STRING\", \"description\": \"The ISO country code (2 letters).  See <a href=https://api.workingdays.org/1.2/api-countries.php>available countries & configurations</a>\"}, {\"name\": \"date\", \"type\": \"STRING\", \"description\": \"The date to analyze (YYYY-MM-DD)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "40", "title": "", "text": "category_name:Events, tool_name:Working days, api_name:/1.3/add_working_days, api_description:Add (or remove) any number of working days to a date., required_params: [{\"name\": \"country_code\", \"type\": \"STRING\", \"description\": \"The ISO country code (2 letters).  See <a href=https://api.workingdays.org/api-countries >available countries & configurations</a>\"}, {\"name\": \"start_date\", \"type\": \"STRING\", \"description\": \"The start date (YYYY-MM-DD)\"}, {\"name\": \"increment\", \"type\": \"NUMBER\", \"description\": \"The number of working days you want to add to your start date (positive or negative integer but not zero)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "41", "title": "", "text": "category_name:Other, tool_name:Evaluate expression, api_name:Evaluate expression, api_description:Scans the given expression and returns the result of any calculation found, in plain text., required_params: [{\"name\": \"expression\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "42", "title": "", "text": "category_name:Gaming, tool_name:Trivia by API-Ninjas, api_name:/v1/trivia, api_description:API Ninjas Trivia API endpoint, required_params: [], optional_params: [], return_schema: {\"category\": \"str\", \"question\": \"str\", \"answer\": \"str\"}", "metadata": {}}
{"_id": "43", "title": "", "text": "category_name:Social, tool_name:Chuck Norris, api_name:/jokes/random, api_description:Retrieve a random chuck joke in JSON format., required_params: [], optional_params: [], return_schema: {\"timestamp\": \"str\", \"status\": \"int\", \"error\": \"str\", \"message\": \"str\", \"path\": \"str\"}", "metadata": {}}
{"_id": "44", "title": "", "text": "category_name:Social, tool_name:Chuck Norris, api_name:/jokes/categories, api_description:Retrieve a list of available joke categories., required_params: [], optional_params: [], return_schema: {}", "metadata": {}}
{"_id": "45", "title": "", "text": "category_name:Media, tool_name:Music Trivia, api_name:/getgamelevel, api_description:get a game level with a level parameter. The level this does not imply difficulty, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "46", "title": "", "text": "category_name:Education, tool_name:Numbers, api_name:Get math fact, api_description:Get a mathematical property about a number, required_params: [{\"name\": \"number\", \"type\": \"STRING\", \"description\": \"The integer of interest\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "47", "title": "", "text": "category_name:Education, tool_name:Numbers, api_name:Get year fact, api_description:Get a fact about a year, required_params: [{\"name\": \"year\", \"type\": \"STRING\", \"description\": \"The year of interest\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "48", "title": "", "text": "category_name:Education, tool_name:Numbers, api_name:Get trivia fact, api_description:Get a trivia fact about a number, required_params: [{\"name\": \"number\", \"type\": \"STRING\", \"description\": \"The integer of interest\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "49", "title": "", "text": "category_name:Business, tool_name:MyMemory - Translation Memory, api_name:search translations, api_description:This API gets a list of translation from the translation memory ranked by quality and similarity (what we call match). MyMemory will check if a sentence has been already translated in the private TM specified. If we don't find it in the private TM of the translator, we search it in the public TMs (shared among all the translators). Again, if we don't have this translation we ask MT providers to generate it.  In order to get the best from MyMemory, it is highly recommended to use different keys for each translators and also different keys for different topics (as a real Translation Memory)., required_params: [{\"name\": \"langpair\", \"type\": \"STRING\", \"description\": \"The language pair. Two ISO-631 language codes, separated by |.\\nMyMemory support over 80 languages but some combinations may contains no data. Nepali into Vietnamese?\"}, {\"name\": \"q\", \"type\": \"STRING\", \"description\": \"the text you want to translate. Normally a sentence.\"}], optional_params: [], return_schema: {\"responseData\": {\"translatedText\": \"str\", \"match\": \"int\"}, \"quotaFinished\": \"bool\", \"mtLangSupported\": \"NoneType\", \"responseDetails\": \"str\", \"responseStatus\": \"int\", \"responderId\": \"NoneType\", \"exception_code\": \"NoneType\", \"matches\": [{\"id\": \"str\", \"segment\": \"str\", \"translation\": \"str\", \"source\": \"str\", \"target\": \"str\", \"quality\": \"int\", \"reference\": \"NoneType\", \"usage-count\": \"int\", \"subject\": \"str\", \"created-by\": \"str\", \"last-updated-by\": \"str\", \"create-date\": \"str\", \"last-update-date\": \"str\", \"match\": \"int\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "50", "title": "", "text": "category_name:Communication, tool_name:LanguageTool, api_name:List of Languages, api_description:, required_params: [], optional_params: [], return_schema: {\"name\": \"str\", \"code\": \"str\", \"longCode\": \"str\"}", "metadata": {}}
{"_id": "51", "title": "", "text": "category_name:Database, tool_name:DNS Lookup, api_name:/whoisserver/DNSService, api_description:DNS Lookup API, required_params: [{\"name\": \"type\", \"type\": \"STRING\", \"description\": \"DNS type: A, NS, SOA, MX, etc. You can specify multiple comma-separated values, e.g., A,SOA,TXT; all records can be retrieved with type=_all.\\nAcceptable values: [A, NS, SOA, MX, etc.](https://dns-lookup.whoisxmlapi.com/api/documentation/making-requests#Supported-DNS-Types)\"}, {\"name\": \"domainname\", \"type\": \"STRING\", \"description\": \"The target domain name.\"}], optional_params: [], return_schema: {\"ErrorMessage\": {\"errorCode\": \"str\", \"msg\": \"str\"}}", "metadata": {}}
{"_id": "52", "title": "", "text": "category_name:Data, tool_name:DNS Lookup, api_name:Nslookup, api_description:NsLookup queries the specified DNS server and retrieves the requested records that are associated with the domain name you provided. These records contain information like the domain name’s IP addresses.\n\nThe following types of DNS records are especially useful:\n\n- **A**: the IPv4 address of the domain.\n- **AAAA**: the domain’s IPv6 address.\n- **CNAME**: the canonical name — allowing one domain name to map on to another. This allows more than one website to refer to a single web server.\n- **MX**: the server that handles email for the domain.\n- **NS**: one or more authoritative name server records for the domain.\n- **TXT**: a record containing information for use outside the DNS server. The content takes the form name=value. This information is used for many things including authentication schemes such as SPF and DKIM., required_params: [{\"name\": \"domain\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"host\": \"str\", \"result\": {\"A\": [\"list of str with length 1\"], \"AAAA\": [\"list of str with length 1\"], \"CAA\": [{\"critical\": \"int\", \"issue\": \"str\", \"_list_length\": 1}], \"MX\": [{\"exchange\": \"str\", \"priority\": \"int\", \"_list_length\": 1}], \"NS\": [\"list of str with length 4\"], \"SOA\": {\"nsname\": \"str\", \"hostmaster\": \"str\", \"serial\": \"int\", \"refresh\": \"int\", \"retry\": \"int\", \"expire\": \"int\", \"minttl\": \"int\"}, \"TXT\": [\"list of str with length 12\"]}}", "metadata": {}}
{"_id": "53", "title": "", "text": "category_name:Tools, tool_name:ViewDNS, api_name:Free Email Lookup, api_description:Find out if a domain name provides free email addresses. Search is performed on a custom made list of thousands of known free email hosts., required_params: [{\"name\": \"domain\", \"type\": \"STRING\", \"description\": \"the domain name to test for free email services\"}, {\"name\": \"output\", \"type\": \"STRING\", \"description\": \"the output format required ('xml' or 'json')\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "54", "title": "", "text": "category_name:Tools, tool_name:ViewDNS, api_name:Ping, api_description:Test how long a response from remote system takes to reach the ViewDNS server. Useful for detecting latency issues on network connections., required_params: [{\"name\": \"output\", \"type\": \"STRING\", \"description\": \"the output format required ('xml' or 'json')\"}, {\"name\": \"host\", \"type\": \"STRING\", \"description\": \"the domain or IP address to perform a ping on\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "55", "title": "", "text": "category_name:Social, tool_name:Instagram Data, api_name:Hashtag Search, api_description:Search for a hashtags by using keyword, required_params: [{\"name\": \"keyword\", \"type\": \"STRING\", \"description\": \"Any keyword\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "56", "title": "", "text": "category_name:Social, tool_name:Instagram Data, api_name:Post Comments, api_description:Get post comments\n\n**NOTE:** Profile should be public(not private), required_params: [{\"name\": \"post\", \"type\": \"STRING\", \"description\": \"Post\\n\\nValues accepted:\\n- CAVeEm1gDh2\\n- https://www.instagram.com/p/CAVeEm1gDh2/\"}], optional_params: [], return_schema: {\"count\": \"int\", \"has_more\": \"bool\", \"end_cursor\": \"str\", \"id\": \"str\", \"collector\": [{\"id\": \"str\", \"text\": \"str\", \"created_at\": \"int\", \"did_report_as_spam\": \"bool\", \"owner\": {\"id\": \"str\", \"is_verified\": \"bool\", \"profile_pic_url\": \"str\", \"username\": \"str\"}, \"likes\": \"int\", \"comments\": \"int\", \"_list_length\": 6}]}", "metadata": {}}
{"_id": "57", "title": "", "text": "category_name:eCommerce, tool_name:Target.Com(Store) Product/Reviews/Locations Data, api_name:Product Search, api_description:The endpoint returns products from the Target.Com Search Result\n\n- Every target has a uniq **store_id** , **store_id** can be extract with the help of this endpoint **/target/location/search**, required_params: [{\"name\": \"store_id\", \"type\": \"NUMBER\", \"description\": \"Store id\\n\\n- Every target has a uniq **store_id** , **store_id** can be extract with the help of this endpoint **/target/location/search**\"}, {\"name\": \"keyword\", \"type\": \"STRING\", \"description\": \"Search keyword\\n\\nFor example: **iphone case**\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "58", "title": "", "text": "category_name:Social, tool_name:Social Media Data TT, api_name:Video post comments V2, api_description:Get post comments. V2 returns much more data then the old endpoint, required_params: [{\"name\": \"video_id\", \"type\": \"STRING\", \"description\": \"Where to get vide id value?\\n\\nFor example in this video /@INFLUENCER/video/6818009093052189958 the id will be **6818009093052189958**\"}], optional_params: [], return_schema: \"{\\\"has_more\\\": \\\"bool\\\", \\\"total_comments\\\": \\\"int\\\", \\\"max_cursor\\\": \\\"str\\\", \\\"comments\\\": [{\\\"label_list\\\": \\\"NoneType\\\", \\\"digg_count\\\": \\\"int\\\", \\\"reply_comment_total\\\": \\\"int\\\", \\\"reply_to_reply_id\\\": \\\"str\\\", \\\"no_show\\\": \\\"bool\\\", \\\"create_time\\\": \\\"int\\\", \\\"user\\\": {\\\"prevent_download\\\": \\\"bool\\\", \\\"react_setting\\\": \\\"int\\\", \\\"apple_account\\\": \\\"int\\\", \\\"following_count\\\": \\\"int\\\", \\\"region\\\": \\\"str\\\", \\\"tw_expire_time\\\": \\\"int\\\", \\\"shield_digg_notice\\\": \\\"int\\\", \\\"account_region\\\": \\\"str\\\", \\\"duet_setting\\\": \\\"int\\\", \\\"room_id\\\": \\\"int\\\", \\\"youtube_expire_time\\\": \\\"int\\\", \\\"user_tags\\\": \\\"NoneType\\\", \\\"cha_list\\\": \\\"NoneType\\\", \\\"verification_type\\\": \\\"int\\\", \\\"is_phone_binded\\\": \\\"bool\\\", \\\"total_favorited\\\": \\\"int\\\", \\\"follower_status\\\": \\\"int\\\", \\\"advance_feature_item_order\\\": \\\"NoneType\\\", \\\"live_commerce\\\": \\\"bool\\\", \\\"has_youtube_token\\\": \\\"bool\\\", \\\"commerce_user_level\\\": \\\"int\\\", \\\"user_rate\\\": \\\"int\\\", \\\"custom_verify\\\": \\\"str\\\", \\\"is_discipline_member\\\": \\\"bool\\\", \\\"special_lock\\\": \\\"int\\\", \\\"enterprise_verify_reason\\\": \\\"str\\\", \\\"is_ad_fake\\\": \\\"bool\\\", \\\"has_orders\\\": \\\"bool\\\", \\\"with_shop_entry\\\": \\\"bool\\\", \\\"mention\"", "metadata": {}}
{"_id": "59", "title": "", "text": "category_name:Social, tool_name:Social Media Data TT, api_name:User feed (Video posts) V2, api_description:Get user feed V2\n\nV2 - returns more data then older version of the endpoint, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "60", "title": "", "text": "category_name:eCommerce, tool_name:Target.Com(Store) Product/Reviews/Locations Data, api_name:Target Store Location Search, api_description:The endpoint returns Target Store locations details\n\n- Only US **zip** codes are accepted\n- **radius** is in miles, required_params: [{\"name\": \"zip\", \"type\": \"NUMBER\", \"description\": \"US 5 digit zip code\\n\\nFor example: 11203\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "61", "title": "", "text": "category_name:Social, tool_name:Social Media Data TT, api_name:Hashtag feed (Video posts), api_description:Get current hashtag feed. \n\n- Before testing don't forget to fill out the name **OR** hashtag_id inputs\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more., required_params: [], optional_params: [], return_schema: \"{\\\"has_more\\\": \\\"bool\\\", \\\"max_cursor\\\": \\\"str\\\", \\\"media\\\": [{\\\"video_id\\\": \\\"str\\\", \\\"create_time\\\": \\\"int\\\", \\\"description\\\": \\\"str\\\", \\\"desc_language\\\": \\\"str\\\", \\\"author\\\": {\\\"unique_id\\\": \\\"str\\\", \\\"nickname\\\": \\\"str\\\", \\\"is_private\\\": \\\"bool\\\", \\\"language\\\": \\\"str\\\", \\\"signature\\\": \\\"str\\\", \\\"custom_verify\\\": \\\"str\\\", \\\"uid\\\": \\\"str\\\", \\\"sec_uid\\\": \\\"str\\\", \\\"avatar_large\\\": \\\"str\\\", \\\"avatar_thumb\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"ins_id\\\": \\\"str\\\", \\\"youtube_channel_title\\\": \\\"str\\\", \\\"youtube_channel_id\\\": \\\"str\\\", \\\"twitter_id\\\": \\\"str\\\", \\\"total_favorited\\\": \\\"int\\\", \\\"following_count\\\": \\\"int\\\", \\\"follower_count\\\": \\\"int\\\", \\\"aweme_count\\\": \\\"int\\\"}, \\\"video\\\": {\\\"video_no_watermark\\\": \\\"str\\\", \\\"video_with_watermark\\\": \\\"str\\\", \\\"cover\\\": \\\"str\\\", \\\"dynamic_cover\\\": \\\"str\\\", \\\"duration\\\": \\\"float\\\"}, \\\"statistics\\\": {\\\"play_count\\\": \\\"int\\\", \\\"whatsapp_share_count\\\": \\\"int\\\", \\\"comment_count\\\": \\\"int\\\", \\\"forward_count\\\": \\\"int\\\", \\\"like_count\\\": \\\"int\\\", \\\"share_count\\\": \\\"int\\\", \\\"download_count\\\": \\\"int\\\"}, \\\"music\\\": {\\\"id\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"playUrl\\\": \\\"str\\\", \\\"coverThumb\\\": \\\"str\\\", \\\"coverMedium\\\": \\\"str\\\", \\\"coverLarge\\\": \\\"\"", "metadata": {}}
{"_id": "62", "title": "", "text": "category_name:Social, tool_name:Social Media Data TT, api_name:Hashtag metadata (information) V2, api_description:Get hashtag metadata V2\n\nV2 - returns more data then older version of the endpoint, required_params: [{\"name\": \"hashtag\", \"type\": \"STRING\", \"description\": \"Hashtag name. For example: **summer**\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "63", "title": "", "text": "category_name:Social, tool_name:Social Media Data TT, api_name:User feed (Video posts), api_description:Get current user feed. \n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more., required_params: [], optional_params: [], return_schema: \"{\\\"has_more\\\": \\\"bool\\\", \\\"max_cursor\\\": \\\"str\\\", \\\"media\\\": [{\\\"video_id\\\": \\\"str\\\", \\\"create_time\\\": \\\"int\\\", \\\"description\\\": \\\"str\\\", \\\"desc_language\\\": \\\"str\\\", \\\"author\\\": {\\\"unique_id\\\": \\\"str\\\", \\\"nickname\\\": \\\"str\\\", \\\"is_private\\\": \\\"bool\\\", \\\"language\\\": \\\"str\\\", \\\"signature\\\": \\\"str\\\", \\\"custom_verify\\\": \\\"str\\\", \\\"uid\\\": \\\"str\\\", \\\"sec_uid\\\": \\\"str\\\", \\\"avatar_large\\\": \\\"str\\\", \\\"avatar_thumb\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"ins_id\\\": \\\"str\\\", \\\"youtube_channel_title\\\": \\\"str\\\", \\\"youtube_channel_id\\\": \\\"str\\\", \\\"twitter_id\\\": \\\"str\\\", \\\"total_favorited\\\": \\\"int\\\", \\\"following_count\\\": \\\"int\\\", \\\"follower_count\\\": \\\"int\\\", \\\"aweme_count\\\": \\\"int\\\"}, \\\"video\\\": {\\\"video_no_watermark\\\": \\\"str\\\", \\\"video_with_watermark\\\": \\\"str\\\", \\\"cover\\\": \\\"str\\\", \\\"dynamic_cover\\\": \\\"str\\\", \\\"duration\\\": \\\"float\\\"}, \\\"statistics\\\": {\\\"play_count\\\": \\\"int\\\", \\\"whatsapp_share_count\\\": \\\"int\\\", \\\"comment_count\\\": \\\"int\\\", \\\"forward_count\\\": \\\"int\\\", \\\"like_count\\\": \\\"int\\\", \\\"share_count\\\": \\\"int\\\", \\\"download_count\\\": \\\"int\\\"}, \\\"music\\\": {\\\"id\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"playUrl\\\": \\\"str\\\", \\\"coverThumb\\\": \\\"str\\\", \\\"coverMedium\\\": \\\"str\\\", \\\"coverLarge\\\": \\\"\"", "metadata": {}}
{"_id": "64", "title": "", "text": "category_name:eCommerce, tool_name:Target.Com(Store) Product/Reviews/Locations Data, api_name:Product Details, api_description:The endpoint returns single product details\n\n- Every target has a uniq **store_id** , **store_id** can be extract with the help of this endpoint **/target/location/search**, required_params: [{\"name\": \"store_id\", \"type\": \"NUMBER\", \"description\": \"Store id\\n\\n- Every target has a uniq **stored_id** , **stored_id** can be extract with the help of this endpoint **/target/location/search**\"}, {\"name\": \"tcin\", \"type\": \"STRING\", \"description\": \"Product id\\n\\nFor example: 53331580\\n\\n**/product/search** will contain **tcin** for each product in the list\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "65", "title": "", "text": "category_name:eCommerce, tool_name:Target.Com(Store) Product/Reviews/Locations Data, api_name:Product Reviews, api_description:The endpoint returns product reviews, required_params: [{\"name\": \"tcin\", \"type\": \"STRING\", \"description\": \"Product id\\n\\nFor example: 53331580\\n\\n**/product/search** will contain **tcin** for each product in the list\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "66", "title": "", "text": "category_name:eCommerce, tool_name:HM - Hennes Mauritz, api_name:regions/list, api_description:List regions H&M supported, required_params: [], optional_params: [], return_schema: {\"region\": \"str\", \"countries\": [{\"name\": \"str\", \"code\": \"str\", \"languages\": [{\"name\": \"str\", \"code\": \"str\", \"_list_length\": 1}], \"_list_length\": 32}]}", "metadata": {}}
{"_id": "67", "title": "", "text": "category_name:Commerce, tool_name:Etsy, api_name:getInterestingListings, api_description:Collects the list of interesting listings, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "68", "title": "", "text": "category_name:Commerce, tool_name:Etsy, api_name:findAllCurrentFeaturedListings, api_description:Finds FeaturedTreasury listings that are currently displayed on a regional homepage., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "69", "title": "", "text": "category_name:eCommerce, tool_name:HM - Hennes Mauritz, api_name:products/search-by-barcode, api_description:Search product by barcode, required_params: [{\"name\": \"gtinCodes\", \"type\": \"STRING\", \"description\": \"The scanned code\"}], optional_params: [], return_schema: {}", "metadata": {}}
{"_id": "70", "title": "", "text": "category_name:eCommerce, tool_name:HM - Hennes Mauritz, api_name:products/detail, api_description:Get detail information of product, required_params: [{\"name\": \"country\", \"type\": \"STRING\", \"description\": \"The country code that is gotten from /regions/list endpoint\"}, {\"name\": \"lang\", \"type\": \"STRING\", \"description\": \"The language code that is gotten from /regions/list endpoint\"}, {\"name\": \"productcode\", \"type\": \"STRING\", \"description\": \"The value of articles/code json object returned in /products/list endpoint\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "71", "title": "", "text": "category_name:Commerce, tool_name:Etsy, api_name:findAllListingActive, api_description:Finds all active Listings. (Note: the sort_on and sort_order options only work when combined with one of the search options: keywords, color, tags, location, etc.), required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "72", "title": "", "text": "category_name:Commerce, tool_name:Etsy, api_name:getTrendingListings, api_description:Collects the list of listings used to generate the trending listing page, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "73", "title": "", "text": "category_name:Entertainment, tool_name:Deezer, api_name:Genre, api_description:A genre object, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The editorial's Deezer id\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "74", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Top Dance Club Artists, api_description:Provide the Greatest of All Time Top Dance Club Artists chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "75", "title": "", "text": "category_name:Social, tool_name:Soundcloud, api_name:/search, api_description:Search the soundcloud, possible values for type are \"track\", \"user\", \"playlist\", \"all\"., required_params: [{\"name\": \"type\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"query\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"index\": \"int\", \"artist\": \"str\", \"url\": \"str\", \"itemName\": \"str\", \"name\": \"str\", \"type\": \"str\"}", "metadata": {}}
{"_id": "76", "title": "", "text": "category_name:Entertainment, tool_name:Deezer, api_name:Infos, api_description:Get the infos about the api in the current country, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "77", "title": "", "text": "category_name:Entertainment, tool_name:Deezer, api_name:Editorial, api_description:An editorial object, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The editorial's Deezer id\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "78", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Top Labels, api_description:Provide the YEAR-END Top Labels chart information\n\nIf `year` is not supplied, will default to last year., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "79", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Romania Songs, api_description:Provide the Romania Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "80", "title": "", "text": "category_name:Music, tool_name:View Song, api_name:View song_copy, api_description:View song, required_params: [{\"name\": \"https_only\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"wmid\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"songid\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"s\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"song_preview_kbps\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"lang\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"country\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "81", "title": "", "text": "category_name:Social, tool_name:Soundcloud, api_name:/user/info, api_description:Get basic user info, required_params: [{\"name\": \"profile_url\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"urn\": \"int\", \"username\": \"str\", \"name\": \"str\", \"verified\": \"bool\", \"createdAt\": \"str\", \"avatarURL\": \"str\", \"profile\": \"str\", \"bannerURL\": \"str\", \"followers\": \"int\", \"following\": \"int\", \"likesCount\": \"int\", \"tracksCount\": \"int\", \"tracks\": [{\"title\": \"str\", \"url\": \"str\", \"publishedAt\": \"str\", \"genre\": \"str\", \"author\": \"str\", \"duration\": \"int\", \"_list_length\": 3}], \"likes\": [{\"title\": \"str\", \"url\": \"str\", \"publishedAt\": \"str\", \"genre\": \"str\", \"author\": {\"name\": \"str\", \"username\": \"str\", \"profile\": \"str\"}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "82", "title": "", "text": "category_name:Entertainment, tool_name:Deezer, api_name:* Search, api_description:Search tracks, required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "83", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Denmark Songs, api_description:Provide the Denmark Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "84", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Bolivia Songs, api_description:Provide the Bolivia Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "85", "title": "", "text": "category_name:Entertainment, tool_name:Deezer, api_name:Artist, api_description:An artist object, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The artist's Deezer id\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "86", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Hot Country Songs, api_description:Provide the Greatest of All Time Hot Country Songs chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "87", "title": "", "text": "category_name:Music, tool_name:View Song, api_name:View song, api_description:View song, required_params: [{\"name\": \"country\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"song_preview_kbps\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"https_only\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"wmid\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"songid\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"lang\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"s\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "88", "title": "", "text": "category_name:Social, tool_name:Soundcloud, api_name:/song/download, api_description:Download one song, the result is a url which you can get the song., required_params: [{\"name\": \"track_url\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"url\": \"str\"}", "metadata": {}}
{"_id": "89", "title": "", "text": "category_name:Entertainment, tool_name:Deezer, api_name:Track, api_description:A track object, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The track's Deezer id\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "90", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:songs/get-related-artist, api_description:Get artist related to a song, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of 'songs->id' field returned from .../shazam-songs/get-details endpoint\"}], optional_params: [], return_schema: {\"data\": [{\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"genreNames\": [\"list of str with length 1\"], \"name\": \"str\", \"editorialNotes\": {\"name\": \"str\", \"standard\": \"str\", \"short\": \"str\"}, \"artwork\": {\"width\": \"int\", \"url\": \"str\", \"height\": \"int\", \"textColor3\": \"str\", \"textColor2\": \"str\", \"textColor4\": \"str\", \"textColor1\": \"str\", \"bgColor\": \"str\", \"hasP3\": \"bool\"}, \"url\": \"str\"}, \"relationships\": {\"albums\": {\"data\": [{\"id\": \"str\", \"type\": \"str\", \"_list_length\": 25}]}}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "91", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:songs/v2/get-details, api_description:Get details information of specific song, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of 'songs->id' field returned from .../shazam-songs/get-details endpoint\"}], optional_params: [], return_schema: {\"data\": [{\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"hasTimeSyncedLyrics\": \"bool\", \"albumName\": \"str\", \"genreNames\": [\"list of str with length 2\"], \"trackNumber\": \"int\", \"releaseDate\": \"str\", \"durationInMillis\": \"int\", \"isVocalAttenuationAllowed\": \"bool\", \"isMasteredForItunes\": \"bool\", \"isrc\": \"str\", \"artwork\": {\"width\": \"int\", \"url\": \"str\", \"height\": \"int\", \"textColor3\": \"str\", \"textColor2\": \"str\", \"textColor4\": \"str\", \"textColor1\": \"str\", \"bgColor\": \"str\", \"hasP3\": \"bool\"}, \"composerName\": \"str\", \"audioLocale\": \"str\", \"url\": \"str\", \"playParams\": {\"id\": \"str\", \"kind\": \"str\"}, \"discNumber\": \"int\", \"isAppleDigitalMaster\": \"bool\", \"hasLyrics\": \"bool\", \"audioTraits\": [\"list of str with length 2\"], \"name\": \"str\", \"previews\": [{\"url\": \"str\", \"_list_length\": 1}], \"artistName\": \"str\"}, \"relationships\": {\"artists\": {\"data\": [{\"id\": \"str\", \"type\": \"str\", \"_list_length\": 1}]}, \"albums\": {\"data\": [{\"id\": \"str\", \"type\": \"str\", \"_list_length\": 1}]}}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "92", "title": "", "text": "category_name:Entertainment, tool_name:Deezer, api_name:Album, api_description:An album object, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The Deezer album id\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "93", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:ARTIST 100, api_description:Provide the ARTIST 100 chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"max range(1-100)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "94", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:BILLBOARD 200, api_description:Provide the BILLBOARD 200 chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"max range(1-200)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "95", "title": "", "text": "category_name:Social, tool_name:Soundcloud, api_name:/song/info, api_description:Get basic information of a song., required_params: [{\"name\": \"track_url\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"id\": \"str\", \"title\": \"str\", \"description\": \"str\", \"thumbnail\": \"str\", \"url\": \"str\", \"duration\": \"int\", \"playCount\": \"str\", \"commentsCount\": \"str\", \"likes\": \"str\", \"genre\": \"str\", \"author\": {\"name\": \"str\", \"username\": \"str\", \"url\": \"str\", \"avatarURL\": \"str\", \"urn\": \"int\", \"verified\": \"bool\", \"followers\": \"int\", \"following\": \"int\"}, \"publishedAt\": \"str\", \"embedURL\": \"str\", \"embed\": {\"version\": \"int\", \"type\": \"str\", \"provider_name\": \"str\", \"provider_url\": \"str\", \"height\": \"int\", \"width\": \"str\", \"title\": \"str\", \"description\": \"str\", \"thumbnail_url\": \"str\", \"html\": \"str\", \"author_name\": \"str\", \"author_url\": \"str\"}, \"track\": {\"hls\": \"str\", \"progressive\": \"str\"}, \"trackURL\": \"str\", \"comments\": [{\"text\": \"str\", \"createdAt\": \"str\", \"author\": {\"name\": \"str\", \"username\": \"str\", \"url\": \"str\"}, \"_list_length\": 28}], \"streamURL\": \"str\"}", "metadata": {}}
{"_id": "96", "title": "", "text": "category_name:Social, tool_name:Soundcloud, api_name:/playlist/info, api_description:Get playlist info., required_params: [{\"name\": \"playlist_url\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"{\\\"id\\\": \\\"int\\\", \\\"title\\\": \\\"str\\\", \\\"url\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\", \\\"thumbnail\\\": \\\"str\\\", \\\"author\\\": {\\\"profile\\\": \\\"str\\\", \\\"username\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"urn\\\": \\\"int\\\"}, \\\"embedURL\\\": \\\"str\\\", \\\"embed\\\": \\\"NoneType\\\", \\\"genre\\\": \\\"str\\\", \\\"trackCount\\\": \\\"int\\\", \\\"tracks\\\": [{\\\"artwork_url\\\": \\\"str\\\", \\\"caption\\\": \\\"NoneType\\\", \\\"commentable\\\": \\\"bool\\\", \\\"comment_count\\\": \\\"int\\\", \\\"created_at\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\", \\\"downloadable\\\": \\\"bool\\\", \\\"download_count\\\": \\\"int\\\", \\\"duration\\\": \\\"int\\\", \\\"full_duration\\\": \\\"int\\\", \\\"embeddable_by\\\": \\\"str\\\", \\\"genre\\\": \\\"str\\\", \\\"has_downloads_left\\\": \\\"bool\\\", \\\"id\\\": \\\"int\\\", \\\"kind\\\": \\\"str\\\", \\\"label_name\\\": \\\"str\\\", \\\"last_modified\\\": \\\"str\\\", \\\"license\\\": \\\"str\\\", \\\"likes_count\\\": \\\"int\\\", \\\"permalink\\\": \\\"str\\\", \\\"permalink_url\\\": \\\"str\\\", \\\"playback_count\\\": \\\"int\\\", \\\"public\\\": \\\"bool\\\", \\\"publisher_metadata\\\": {\\\"id\\\": \\\"int\\\", \\\"urn\\\": \\\"str\\\", \\\"artist\\\": \\\"str\\\", \\\"contains_music\\\": \\\"bool\\\", \\\"isrc\\\": \\\"str\\\", \\\"writer_composer\\\": \\\"str\\\"}, \\\"purchase_title\\\": \\\"NoneType\\\", \\\"purchase_url\\\": \\\"NoneType\\\", \\\"release_date\\\": \\\"NoneType\\\", \\\"reposts_count\\\": \\\"int\\\", \\\"secr\"", "metadata": {}}
{"_id": "97", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:artists/get-latest-release, api_description:Get latest release of an artist, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of 'artist->adamid' field returned in .../search OR .../songs/v2/detect OR .../songs/get-details endpoint\\nThe value of 'artists->id' field returned in .../shazam-songs/get-details OR .../albums/get-details OR .../albums/get-related-artist\"}], optional_params: [], return_schema: {\"data\": [{\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"copyright\": \"str\", \"genreNames\": [\"list of str with length 2\"], \"releaseDate\": \"str\", \"isMasteredForItunes\": \"bool\", \"upc\": \"str\", \"artwork\": {\"width\": \"int\", \"url\": \"str\", \"height\": \"int\", \"textColor3\": \"str\", \"textColor2\": \"str\", \"textColor4\": \"str\", \"textColor1\": \"str\", \"bgColor\": \"str\", \"hasP3\": \"bool\"}, \"url\": \"str\", \"playParams\": {\"id\": \"str\", \"kind\": \"str\"}, \"recordLabel\": \"str\", \"trackCount\": \"int\", \"isCompilation\": \"bool\", \"isPrerelease\": \"bool\", \"audioTraits\": [\"list of str with length 2\"], \"isSingle\": \"bool\", \"name\": \"str\", \"artistName\": \"str\", \"contentRating\": \"str\", \"editorialNotes\": {\"standard\": \"str\", \"short\": \"str\", \"tagline\": \"str\"}, \"isComplete\": \"bool\"}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "98", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:search, api_description:Search for songs, artists that match input term, required_params: [{\"name\": \"term\", \"type\": \"STRING\", \"description\": \"Full name of songs or artists\"}], optional_params: [], return_schema: \"{\\\"tracks\\\": {\\\"hits\\\": [{\\\"track\\\": {\\\"layout\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"key\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"subtitle\\\": \\\"str\\\", \\\"share\\\": {\\\"subject\\\": \\\"str\\\", \\\"text\\\": \\\"str\\\", \\\"href\\\": \\\"str\\\", \\\"image\\\": \\\"str\\\", \\\"twitter\\\": \\\"str\\\", \\\"html\\\": \\\"str\\\", \\\"avatar\\\": \\\"str\\\", \\\"snapchat\\\": \\\"str\\\"}, \\\"images\\\": {\\\"background\\\": \\\"str\\\", \\\"coverart\\\": \\\"str\\\", \\\"coverarthq\\\": \\\"str\\\", \\\"joecolor\\\": \\\"str\\\"}, \\\"hub\\\": {\\\"type\\\": \\\"str\\\", \\\"image\\\": \\\"str\\\", \\\"actions\\\": [{\\\"name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"id\\\": \\\"str\\\", \\\"_list_length\\\": 2}], \\\"options\\\": [{\\\"caption\\\": \\\"str\\\", \\\"actions\\\": [{\\\"name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\", \\\"_list_length\\\": 2}], \\\"beacondata\\\": {\\\"type\\\": \\\"str\\\", \\\"providername\\\": \\\"str\\\"}, \\\"image\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"listcaption\\\": \\\"str\\\", \\\"overflowimage\\\": \\\"str\\\", \\\"colouroverflowimage\\\": \\\"bool\\\", \\\"providername\\\": \\\"str\\\", \\\"_list_length\\\": 2}], \\\"providers\\\": [{\\\"caption\\\": \\\"str\\\", \\\"images\\\": {\\\"overflow\\\": \\\"str\\\", \\\"default\\\": \\\"str\\\"}, \\\"actions\\\": [{\\\"name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"type\\\": \\\"str\\\", \\\"_list_length\\\": 2}], \\\"explicit\\\": \\\"bool\\\", \\\"dis\"", "metadata": {}}
{"_id": "99", "title": "", "text": "category_name:Entertainment, tool_name:Deezer, api_name:Radio, api_description:A radio object, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The radio deezer ID\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "100", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:shazam-events/list, api_description:List future events, required_params: [{\"name\": \"artistId\", \"type\": \"STRING\", \"description\": \"The value of 'artist->adamid' field returned in \\u2026/search OR \\u2026/songs/v2/detect OR \\u2026/songs/get-details endpoint\\nThe value of 'artists->id' field returned in \\u2026/shazam-songs/get-details OR \\u2026/albums/get-details OR \\u2026/albums/get-related-artist\"}], optional_params: [], return_schema: {\"data\": \"empty list\"}", "metadata": {}}
{"_id": "101", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:shazam-songs/get-details, api_description:Get mapping id information between systems to use with other endpoints., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of 'id' field returned in .../search endpoint\"}], optional_params: [], return_schema: \"{\\\"data\\\": [{\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"resources\\\": {\\\"artist-highlights\\\": {\\\"73406786\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\"}}, \\\"track-highlights\\\": {\\\"578132846\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\"}}, \\\"related-tracks\\\": {\\\"track-similarities-id-40333609\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\"}}, \\\"songs\\\": {\\\"1436677761\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\"}}, \\\"albums\\\": {\\\"1436677753\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"attributes\\\": {\\\"artistName\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"releaseDate\\\": \\\"str\\\"}}}, \\\"shazam-artists\\\": {\\\"42\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\"}}, \\\"artists\\\": {\\\"73406786\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\"}}, \\\"shazam-songs\\\": {\\\"40333609\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"attributes\\\": {\\\"type\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"artist\\\": \\\"str\\\", \\\"primaryArtist\\\": \\\"str\\\", \\\"label\\\": \\\"str\\\", \\\"explicit\\\": \\\"bool\\\", \\\"isrc\\\": \\\"str\\\", \\\"webUrl\\\": \\\"str\\\", \\\"images\\\": {\\\"artistAvatar\\\": \\\"str\\\", \\\"coverArt\\\": \\\"str\\\", \\\"coverArtHq\\\": \\\"str\\\"}, \\\"share\\\": {\\\"subject\\\": \\\"str\\\", \\\"text\\\": \\\"str\\\", \\\"image\\\": \\\"str\\\", \\\"twitter\\\": \\\"str\\\", \\\"html\\\": \\\"str\\\", \\\"snapchat\\\": \\\"str\\\"}, \\\"genres\\\": {\\\"prim\"", "metadata": {}}
{"_id": "102", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:auto-complete, api_description:Get suggestions by word or phrase, required_params: [{\"name\": \"term\", \"type\": \"STRING\", \"description\": \"Any word or phrase of song, artist, etc... that you are familiar with\"}], optional_params: [], return_schema: {\"hints\": [{\"term\": \"str\", \"_list_length\": 10}]}", "metadata": {}}
{"_id": "103", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:albums/get-details, api_description:Get detailed album of an album, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of 'albums->id' field returned in .../shazam-songs/get-details OR .../artists/get-albums OR .../artists/get-summary\\nThe value of 'id' field returned in .../artists/get-albums OR .../artists/get-latest-release endpoint\\nThe value of 'albumadamid' field returned in .../songs/v2/detect OR .../songs/detect endpoint\"}], optional_params: [], return_schema: \"{\\\"data\\\": [{\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"attributes\\\": {\\\"copyright\\\": \\\"str\\\", \\\"genreNames\\\": [\\\"list of str with length 9\\\"], \\\"releaseDate\\\": \\\"str\\\", \\\"upc\\\": \\\"str\\\", \\\"isMasteredForItunes\\\": \\\"bool\\\", \\\"artwork\\\": {\\\"width\\\": \\\"int\\\", \\\"url\\\": \\\"str\\\", \\\"height\\\": \\\"int\\\", \\\"textColor3\\\": \\\"str\\\", \\\"textColor2\\\": \\\"str\\\", \\\"textColor4\\\": \\\"str\\\", \\\"textColor1\\\": \\\"str\\\", \\\"bgColor\\\": \\\"str\\\", \\\"hasP3\\\": \\\"bool\\\"}, \\\"url\\\": \\\"str\\\", \\\"playParams\\\": {\\\"id\\\": \\\"str\\\", \\\"kind\\\": \\\"str\\\"}, \\\"recordLabel\\\": \\\"str\\\", \\\"trackCount\\\": \\\"int\\\", \\\"isCompilation\\\": \\\"bool\\\", \\\"isPrerelease\\\": \\\"bool\\\", \\\"audioTraits\\\": [\\\"list of str with length 2\\\"], \\\"isSingle\\\": \\\"bool\\\", \\\"name\\\": \\\"str\\\", \\\"artistName\\\": \\\"str\\\", \\\"contentRating\\\": \\\"str\\\", \\\"editorialNotes\\\": {\\\"standard\\\": \\\"str\\\", \\\"short\\\": \\\"str\\\"}, \\\"isComplete\\\": \\\"bool\\\"}, \\\"relationships\\\": {\\\"tracks\\\": {\\\"data\\\": [{\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"attributes\\\": {\\\"hasTimeSyncedLyrics\\\": \\\"bool\\\", \\\"albumName\\\": \\\"str\\\", \\\"genreNames\\\": [\\\"list of str with length 3\\\"], \\\"trackNumber\\\": \\\"int\\\", \\\"releaseDate\\\": \\\"str\\\", \\\"durationInMillis\\\": \\\"int\\\", \\\"isVocalAttenuationAllowed\\\": \\\"bo\"", "metadata": {}}
{"_id": "104", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:artists/get-summary, api_description:Get summary information related to an artist, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of 'artist->adamid' field returned in .../search OR .../songs/v2/detect OR .../songs/get-details endpoint\\nThe value of 'artists->id' field returned in .../shazam-songs/get-details OR .../albums/get-details OR .../albums/get-related-artist\"}], optional_params: [], return_schema: \"{\\\"data\\\": [{\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"resources\\\": {\\\"artists\\\": {\\\"567072\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"attributes\\\": {\\\"genreNames\\\": [\\\"list of str with length 1\\\"], \\\"name\\\": \\\"str\\\", \\\"artwork\\\": {\\\"width\\\": \\\"int\\\", \\\"url\\\": \\\"str\\\", \\\"height\\\": \\\"int\\\", \\\"textColor3\\\": \\\"str\\\", \\\"textColor2\\\": \\\"str\\\", \\\"textColor4\\\": \\\"str\\\", \\\"textColor1\\\": \\\"str\\\", \\\"bgColor\\\": \\\"str\\\", \\\"hasP3\\\": \\\"bool\\\"}, \\\"editorialNotes\\\": {\\\"name\\\": \\\"str\\\", \\\"standard\\\": \\\"str\\\", \\\"short\\\": \\\"str\\\"}, \\\"url\\\": \\\"str\\\"}, \\\"relationships\\\": {\\\"albums\\\": {\\\"data\\\": [{\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"_list_length\\\": 25}]}}, \\\"views\\\": {\\\"top-songs\\\": {\\\"attributes\\\": {\\\"title\\\": \\\"str\\\"}, \\\"data\\\": [{\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"_list_length\\\": 20}]}, \\\"latest-release\\\": {\\\"attributes\\\": {\\\"title\\\": \\\"str\\\"}, \\\"data\\\": [{\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"_list_length\\\": 1}]}}, \\\"meta\\\": {\\\"views\\\": {\\\"order\\\": [\\\"list of str with length 2\\\"]}}}}, \\\"albums\\\": {\\\"850569437\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"attributes\\\": {\\\"copyright\\\": \\\"str\\\", \\\"genreNames\\\": [\\\"list of str with length 9\\\"], \\\"releaseDate\\\": \\\"str\\\"\"", "metadata": {}}
{"_id": "105", "title": "", "text": "category_name:Entertainment, tool_name:Deezer, api_name:Comment, api_description:A comment object, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The playlist's Deezer id\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "106", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:artists/get-top-songs, api_description:Get top songs of an artist, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of 'artist->adamid' field returned in .../search OR .../songs/v2/detect OR .../songs/get-details endpoint\\nThe value of 'artists->id' field returned in .../shazam-songs/get-details OR .../albums/get-details OR .../albums/get-related-artist\"}], optional_params: [], return_schema: {\"data\": [{\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"hasTimeSyncedLyrics\": \"bool\", \"albumName\": \"str\", \"genreNames\": [\"list of str with length 9\"], \"trackNumber\": \"int\", \"durationInMillis\": \"int\", \"releaseDate\": \"str\", \"isVocalAttenuationAllowed\": \"bool\", \"isMasteredForItunes\": \"bool\", \"isrc\": \"str\", \"artwork\": {\"width\": \"int\", \"url\": \"str\", \"height\": \"int\", \"textColor3\": \"str\", \"textColor2\": \"str\", \"textColor4\": \"str\", \"textColor1\": \"str\", \"bgColor\": \"str\", \"hasP3\": \"bool\"}, \"audioLocale\": \"str\", \"composerName\": \"str\", \"url\": \"str\", \"playParams\": {\"id\": \"str\", \"kind\": \"str\"}, \"discNumber\": \"int\", \"isAppleDigitalMaster\": \"bool\", \"hasLyrics\": \"bool\", \"audioTraits\": [\"list of str with length 2\"], \"name\": \"str\", \"previews\": [{\"url\": \"str\", \"_list_length\": 1}], \"artistName\": \"str\"}, \"_list_length\": 10}]}", "metadata": {}}
{"_id": "107", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:artists/get-details, api_description:Get detailed information of an artist, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of 'artist->adamid' field returned in .../search OR .../songs/v2/detect OR .../songs/get-details endpoint\\nThe value of 'artists->id' field returned in .../shazam-songs/get-details OR .../albums/get-details OR .../albums/get-related-artist\"}], optional_params: [], return_schema: {\"data\": [{\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"genreNames\": [\"list of str with length 1\"], \"name\": \"str\", \"artwork\": {\"width\": \"int\", \"url\": \"str\", \"height\": \"int\", \"textColor3\": \"str\", \"textColor2\": \"str\", \"textColor4\": \"str\", \"textColor1\": \"str\", \"bgColor\": \"str\", \"hasP3\": \"bool\"}, \"editorialNotes\": {\"name\": \"str\", \"standard\": \"str\", \"short\": \"str\"}, \"url\": \"str\"}, \"relationships\": {\"albums\": {\"data\": [{\"id\": \"str\", \"type\": \"str\", \"_list_length\": 25}]}}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "108", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Adult Pop Songs, api_description:Provide the Greatest of All Time Adult Pop Songs chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "109", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:charts/list, api_description:List all available charts by cities, countries, and genres, required_params: [], optional_params: [], return_schema: {\"countries\": [{\"id\": \"str\", \"listid\": \"str\", \"momentum_listid\": \"str\", \"name\": \"str\", \"cities\": [{\"id\": \"str\", \"name\": \"str\", \"countryid\": \"str\", \"listid\": \"str\", \"_list_length\": 50}], \"genres\": [{\"id\": \"str\", \"countryid\": \"str\", \"listid\": \"str\", \"name\": \"str\", \"urlPath\": \"str\", \"count\": \"int\", \"_list_length\": 3}], \"_list_length\": 54}], \"global\": {\"genres\": [{\"id\": \"str\", \"listid\": \"str\", \"name\": \"str\", \"urlPath\": \"str\", \"count\": \"int\", \"_list_length\": 18}]}}", "metadata": {}}
{"_id": "110", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:charts/track, api_description:Get all popular songs in specific chart, required_params: [], optional_params: [], return_schema: \"{\\\"properties\\\": {}, \\\"tracks\\\": [{\\\"layout\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"key\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"subtitle\\\": \\\"str\\\", \\\"share\\\": {\\\"subject\\\": \\\"str\\\", \\\"text\\\": \\\"str\\\", \\\"href\\\": \\\"str\\\", \\\"image\\\": \\\"str\\\", \\\"twitter\\\": \\\"str\\\", \\\"html\\\": \\\"str\\\", \\\"avatar\\\": \\\"str\\\", \\\"snapchat\\\": \\\"str\\\"}, \\\"images\\\": {\\\"background\\\": \\\"str\\\", \\\"coverart\\\": \\\"str\\\", \\\"coverarthq\\\": \\\"str\\\", \\\"joecolor\\\": \\\"str\\\"}, \\\"hub\\\": {\\\"type\\\": \\\"str\\\", \\\"image\\\": \\\"str\\\", \\\"actions\\\": [{\\\"name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"id\\\": \\\"str\\\", \\\"_list_length\\\": 2}], \\\"options\\\": [{\\\"caption\\\": \\\"str\\\", \\\"actions\\\": [{\\\"name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\", \\\"_list_length\\\": 2}], \\\"beacondata\\\": {\\\"type\\\": \\\"str\\\", \\\"providername\\\": \\\"str\\\"}, \\\"image\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"listcaption\\\": \\\"str\\\", \\\"overflowimage\\\": \\\"str\\\", \\\"colouroverflowimage\\\": \\\"bool\\\", \\\"providername\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"explicit\\\": \\\"bool\\\", \\\"displayname\\\": \\\"str\\\"}, \\\"artists\\\": [{\\\"alias\\\": \\\"str\\\", \\\"id\\\": \\\"str\\\", \\\"adamid\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"url\\\": \\\"str\\\", \\\"highlightsurls\\\": {\\\"artisthighlightsurl\\\": \\\"str\\\", \\\"trackhighlighturl\\\": \\\"str\\\"}, \\\"prope\"", "metadata": {}}
{"_id": "111", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:France Songs, api_description:Provide the France Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "112", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:albums/get-related-artist, api_description:Get artist related to an album, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of 'albums->id' field returned in .../shazam-songs/get-details OR .../artists/get-albums OR .../artists/get-summary\\nThe value of 'id' field returned in .../artists/get-albums OR .../artists/get-latest-release endpoint\\nThe value of 'albumadamid' field returned in .../songs/v2/detect OR .../songs/detect endpoint\"}], optional_params: [], return_schema: {\"data\": [{\"id\": \"str\", \"type\": \"str\", \"attributes\": {\"genreNames\": [\"list of str with length 1\"], \"name\": \"str\", \"editorialNotes\": {\"name\": \"str\", \"standard\": \"str\", \"short\": \"str\"}, \"artwork\": {\"width\": \"int\", \"url\": \"str\", \"height\": \"int\", \"textColor3\": \"str\", \"textColor2\": \"str\", \"textColor4\": \"str\", \"textColor1\": \"str\", \"bgColor\": \"str\", \"hasP3\": \"bool\"}, \"url\": \"str\"}, \"relationships\": {\"albums\": {\"data\": [{\"id\": \"str\", \"type\": \"str\", \"_list_length\": 25}]}}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "113", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Austria Songs, api_description:Provide the Austria Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "114", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Australia Songs, api_description:Provide the Australia Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "115", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Ecuador Songs, api_description:Provide the Ecuador Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "116", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Brazil Songs, api_description:Provide the Brazil Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "117", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Mainstream Rock Songs, api_description:Provide the Greatest of All Time Mainstream Rock Songs chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "118", "title": "", "text": "category_name:Search, tool_name:Bing Web Search, api_name:Supported Countries, api_description:You can search against these countries., required_params: [], optional_params: [], return_schema: \"{\\\"Australia\\\": \\\"str\\\", \\\"Belgium\\\": \\\"str\\\", \\\"Brazil\\\": \\\"str\\\", \\\"Canada\\\": \\\"str\\\", \\\"China\\\": \\\"str\\\", \\\"France\\\": \\\"str\\\", \\\"Germany\\\": \\\"str\\\", \\\"India\\\": \\\"str\\\", \\\"Italy\\\": \\\"str\\\", \\\"Japan\\\": \\\"str\\\", \\\"Korea\\\": \\\"str\\\", \\\"Mexico\\\": \\\"str\\\", \\\"Netherlands\\\": \\\"str\\\", \\\"Poland\\\": \\\"str\\\", \\\"Russia\\\": \\\"str\\\", \\\"Spain\\\": \\\"str\\\", \\\"Sweden\\\": \\\"str\\\", \\\"Switzerland\\\": \\\"str\\\", \\\"United Kingdom\\\": \\\"str\\\", \\\"United States\\\": \\\"str\\\", \\\"Afghanistan\\\": \\\"str\\\", \\\"Albania\\\": \\\"str\\\", \\\"Algeria\\\": \\\"str\\\", \\\"American Samoa\\\": \\\"str\\\", \\\"Andorra\\\": \\\"str\\\", \\\"Angola\\\": \\\"str\\\", \\\"Anguilla\\\": \\\"str\\\", \\\"Antigua and Barbuda\\\": \\\"str\\\", \\\"Argentina\\\": \\\"str\\\", \\\"Armenia\\\": \\\"str\\\", \\\"Aruba\\\": \\\"str\\\", \\\"Austria\\\": \\\"str\\\", \\\"Azerbaijan\\\": \\\"str\\\", \\\"Bahamas\\\": \\\"str\\\", \\\"Bahrain\\\": \\\"str\\\", \\\"Bangladesh\\\": \\\"str\\\", \\\"Barbados\\\": \\\"str\\\", \\\"Belarus\\\": \\\"str\\\", \\\"Belize\\\": \\\"str\\\", \\\"Benin\\\": \\\"str\\\", \\\"Bermuda\\\": \\\"str\\\", \\\"Bhutan\\\": \\\"str\\\", \\\"Bolivia\\\": \\\"str\\\", \\\"Bosnia & Herzegovina\\\": \\\"str\\\", \\\"Botswana\\\": \\\"str\\\", \\\"British Virgin Islands\\\": \\\"str\\\", \\\"Brunei\\\": \\\"str\\\", \\\"Bulgaria\\\": \\\"str\\\", \\\"Burkina Faso\\\": \\\"str\\\", \\\"Burundi\\\": \\\"str\\\", \\\"Cabo Verde\\\": \\\"str\\\", \\\"Cambodia\\\": \\\"s\"", "metadata": {}}
{"_id": "119", "title": "", "text": "category_name:Search, tool_name:Bing Web Search, api_name:Supported Languages, api_description:These languages are supported for to search., required_params: [], optional_params: [], return_schema: \"{\\\"Arabic\\\": \\\"str\\\", \\\"Chinese (Simplified)\\\": \\\"str\\\", \\\"Chinese (Traditional)\\\": \\\"str\\\", \\\"Czech\\\": \\\"str\\\", \\\"Dutch\\\": \\\"str\\\", \\\"English\\\": \\\"str\\\", \\\"Finnish\\\": \\\"str\\\", \\\"French\\\": \\\"str\\\", \\\"German\\\": \\\"str\\\", \\\"Italian\\\": \\\"str\\\", \\\"Japanese\\\": \\\"str\\\", \\\"Korean\\\": \\\"str\\\", \\\"Polish\\\": \\\"str\\\", \\\"Portuguese (Brazil)\\\": \\\"str\\\", \\\"Russian\\\": \\\"str\\\", \\\"Spanish\\\": \\\"str\\\", \\\"Swedish\\\": \\\"str\\\", \\\"Turkish\\\": \\\"str\\\", \\\"Afrikaans\\\": \\\"str\\\", \\\"Albanian\\\": \\\"str\\\", \\\"Amharic\\\": \\\"str\\\", \\\"Armenian\\\": \\\"str\\\", \\\"Assamese\\\": \\\"str\\\", \\\"Azerbaijani (Latin)\\\": \\\"str\\\", \\\"Bangla\\\": \\\"str\\\", \\\"Basque\\\": \\\"str\\\", \\\"Belarusian\\\": \\\"str\\\", \\\"Bosnian (Latin)\\\": \\\"str\\\", \\\"Bulgarian\\\": \\\"str\\\", \\\"Catalan\\\": \\\"str\\\", \\\"Central Kurdish\\\": \\\"str\\\", \\\"Cherokee (Cherokee)\\\": \\\"str\\\", \\\"Croatian\\\": \\\"str\\\", \\\"Danish\\\": \\\"str\\\", \\\"Dari\\\": \\\"str\\\", \\\"Estonian\\\": \\\"str\\\", \\\"Filipino\\\": \\\"str\\\", \\\"Galician\\\": \\\"str\\\", \\\"Georgian\\\": \\\"str\\\", \\\"Greek\\\": \\\"str\\\", \\\"Gujarati\\\": \\\"str\\\", \\\"Hausa (Latin)\\\": \\\"str\\\", \\\"Hebrew\\\": \\\"str\\\", \\\"Hindi\\\": \\\"str\\\", \\\"Hungarian\\\": \\\"str\\\", \\\"Icelandic\\\": \\\"str\\\", \\\"Igbo\\\": \\\"str\\\", \\\"Indonesian\\\": \\\"str\\\", \\\"Irish\\\": \\\"str\\\", \\\"isiXhosa\\\": \\\"str\\\", \\\"isiZulu\\\": \\\"st\"", "metadata": {}}
{"_id": "120", "title": "", "text": "category_name:Media, tool_name:Bing Image Search, api_name:Image Search, api_description:Get relevant images for a given query., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"The user's search query string\"}], optional_params: [], return_schema: {\"_type\": \"str\", \"errors\": [{\"code\": \"str\", \"subCode\": \"str\", \"message\": \"str\", \"moreDetails\": \"str\", \"parameter\": \"str\", \"value\": \"str\", \"_list_length\": 3}]}", "metadata": {}}
{"_id": "121", "title": "", "text": "category_name:Media, tool_name:Bing Image Search, api_name:Trending, api_description:Get currently trending images., required_params: [], optional_params: [], return_schema: {\"_type\": \"str\", \"instrumentation\": {\"_type\": \"str\"}, \"errors\": [{\"code\": \"str\", \"subCode\": \"str\", \"message\": \"str\", \"moreDetails\": \"str\", \"parameter\": \"str\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "122", "title": "", "text": "category_name:eCommerce, tool_name:Gearbest, api_name:/search, api_description: , required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "123", "title": "", "text": "category_name:Logistics, tool_name:Kargom Nerede, api_name:companies, api_description:Companies, required_params: [], optional_params: [], return_schema: {\"value\": [{\"id\": \"int\", \"name\": \"str\", \"image\": \"str\", \"info\": \"NoneType\", \"additionalDatas\": \"NoneType\", \"_list_length\": 31}], \"success\": \"bool\", \"message\": \"str\"}", "metadata": {}}
{"_id": "124", "title": "", "text": "category_name:eCommerce, tool_name:Gearbest, api_name:/get_reviews, api_description: , required_params: [{\"name\": \"sku\", \"type\": \"STRING\", \"description\": \"Found under 'data_layer' > 'goods' > 'sku' in result of get_product\"}, {\"name\": \"spu\", \"type\": \"STRING\", \"description\": \"Found under 'good_info' > 'goodsSpu' in result of get_product\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "125", "title": "", "text": "category_name:Finance, tool_name:Corporate Supply Chain, api_name:Supply Chain, api_description:Get supply chain information., required_params: [{\"name\": \"ticker\", \"type\": \"STRING\", \"description\": \"Enter the stock symbol for the company\"}], optional_params: [], return_schema: {\"Ticker\": \"str\", \"Full Name\": \"str\", \"Relationship\": \"str\"}", "metadata": {}}
{"_id": "126", "title": "", "text": "category_name:eCommerce, tool_name:Gearbest, api_name:/get_product, api_description: , required_params: [{\"name\": \"product_url\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "127", "title": "", "text": "category_name:eCommerce, tool_name:Gearbest, api_name:/get_products_from_category, api_description: , required_params: [{\"name\": \"category_url\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "128", "title": "", "text": "category_name:eCommerce, tool_name:Gearbest, api_name:/get_shipping, api_description: , required_params: [{\"name\": \"country_code\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"product_url\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "129", "title": "", "text": "category_name:eCommerce, tool_name:Gearbest, api_name:/categories, api_description: , required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "130", "title": "", "text": "category_name:Food, tool_name:Edamam Nutrition Analysis, api_name:/api/nutrition-data, api_description:This returns the nutritional analysis for the specified food text by extracting information from a short unstructured food text (usually an ingredient line and returns the following structured data for the text: quantity, measure and food,) and if available: diet, health and allergen labels for the text.  With the built in food logging feature, this allows for change of context. For example, “rice” will normally be matched to raw rice while, with the food logging feature on, it will match to ready to eat ‘cooked rice.’ \n \n <b>Access Point:</b> https://api.edamam.com/api/nutrition-data, required_params: [{\"name\": \"ingr\", \"type\": \"STRING\", \"description\": \"The ingredient.\"}], optional_params: [], return_schema: {\"error\": \"str\", \"message\": \"str\"}", "metadata": {}}
{"_id": "131", "title": "", "text": "category_name:Sports, tool_name:Fitness Calculator, api_name:Body Fat Percentage, api_description:Knowing body fat percentage would be helpful to decide on a well-programmed fitness plan. You can use this endpoint with 7 parameters., required_params: [{\"name\": \"height\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"waist\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"neck\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"gender\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"hip\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"age\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"weight\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"status_code\": \"int\", \"request_result\": \"str\", \"data\": {\"Body Fat (U.S. Navy Method)\": \"float\", \"Body Fat Category\": \"str\", \"Body Fat Mass\": \"float\", \"Lean Body Mass\": \"float\", \"Body Fat (BMI method)\": \"float\"}}", "metadata": {}}
{"_id": "132", "title": "", "text": "category_name:Social, tool_name:Reddit, api_name:Top Posts By Subreddit, api_description:Top Posts By Subreddit, required_params: [{\"name\": \"time\", \"type\": \"STRING\", \"description\": \"you can just select one item from below:\\n`hour`\\n`day`\\n`week`\\n`month`\\n`year`\\n`all`\"}, {\"name\": \"subreddit\", \"type\": \"STRING\", \"description\": \"example: reddit.com/r/`memes`\"}], optional_params: [], return_schema: \"{\\\"success\\\": \\\"bool\\\", \\\"data\\\": {\\\"cursor\\\": \\\"str\\\", \\\"posts\\\": [{\\\"id\\\": \\\"str\\\", \\\"numComments\\\": \\\"int\\\", \\\"created\\\": \\\"int\\\", \\\"score\\\": \\\"int\\\", \\\"distinguishType\\\": \\\"NoneType\\\", \\\"isLocked\\\": \\\"bool\\\", \\\"isStickied\\\": \\\"bool\\\", \\\"thumbnail\\\": {\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"int\\\", \\\"height\\\": \\\"int\\\"}, \\\"title\\\": \\\"str\\\", \\\"author\\\": \\\"str\\\", \\\"authorId\\\": \\\"str\\\", \\\"authorIsBlocked\\\": \\\"bool\\\", \\\"domain\\\": \\\"str\\\", \\\"postId\\\": \\\"str\\\", \\\"upvoteRatio\\\": \\\"float\\\", \\\"numDuplicates\\\": \\\"NoneType\\\", \\\"discussionType\\\": \\\"NoneType\\\", \\\"viewCount\\\": \\\"int\\\", \\\"goldCount\\\": \\\"int\\\", \\\"isArchived\\\": \\\"bool\\\", \\\"contestMode\\\": \\\"bool\\\", \\\"gildings\\\": {\\\"gid1\\\": \\\"int\\\", \\\"gid2\\\": \\\"int\\\", \\\"gid3\\\": \\\"int\\\"}, \\\"allAwardings\\\": [{\\\"awardType\\\": \\\"str\\\", \\\"awardSubType\\\": \\\"str\\\", \\\"coinPrice\\\": \\\"int\\\", \\\"coinReward\\\": \\\"int\\\", \\\"daysOfDripExtension\\\": \\\"NoneType\\\", \\\"daysOfPremium\\\": \\\"int\\\", \\\"description\\\": \\\"str\\\", \\\"giverCoinReward\\\": \\\"NoneType\\\", \\\"iconUrl\\\": \\\"str\\\", \\\"iconWidth\\\": \\\"int\\\", \\\"iconHeight\\\": \\\"int\\\", \\\"staticIconUrl\\\": \\\"str\\\", \\\"staticIconWidth\\\": \\\"int\\\", \\\"staticIconHeight\\\": \\\"int\\\", \\\"id\\\": \\\"str\\\", \\\"isEnabled\\\": \\\"bool\\\", \\\"isNew\\\": \\\"bool\\\"\"", "metadata": {}}
{"_id": "133", "title": "", "text": "category_name:Data, tool_name:Socialgrep, api_name:Comment search, api_description:Searches Reddit comments., required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"The comma-separated query for the search. Supports the following term types:\\n\\n`/r/{subreddit}` - search only comments from the subreddit {subreddit}.\\n\\n`-/r/{subreddit}` - search only comments not from the subreddit {subreddit}.\\n\\n`{term}` - search only comments containing the term {term}.\\n\\n`-{term}` - search only comments not containing the term {term}.\\n\\n`score:{score}` - search only comments with score at least {score}.\\n\\n`before:{YYYY-mm-dd}`, `after:{YYYY-mm-dd}` - search only comments within the date range. `before` is inclusive, `after` is not.\\n\\n`post:{post_id}` - search only comments for the given post.\"}], optional_params: [], return_schema: {\"type\": \"str\", \"data\": [{\"type\": \"str\", \"id\": \"str\", \"subreddit\": {\"id\": \"str\", \"name\": \"str\", \"nsfw\": \"bool\"}, \"created_utc\": \"int\", \"permalink\": \"str\", \"body\": \"str\", \"sentiment\": \"int\", \"score\": \"int\", \"_list_length\": 25}], \"total_count\": \"int\", \"query\": \"str\", \"sort_key\": [\"list of list with length 1\"]}", "metadata": {}}
{"_id": "134", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Reddit, api_description:Check username on Reddit, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "135", "title": "", "text": "category_name:Entertainment, tool_name:Reddit meme, api_name:Trending memes, api_description:Use this route to get the newest trending memes from subreddit, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "136", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Check usernames on all Platforms, api_description:Check if a username is available on all platforms at once!\ntrue if available, false if not, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "137", "title": "", "text": "category_name:Entertainment, tool_name:Reddit meme, api_name:Top memes, api_description:Use this route to get the all top quality memes from subreddit, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "138", "title": "", "text": "category_name:Entertainment, tool_name:Programming Memes Reddit, api_name:Get All Memes, api_description:Gets all memes, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "139", "title": "", "text": "category_name:Data, tool_name:Socialgrep, api_name:Post search, api_description:Searches Reddit posts., required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"The comma-separated query for the search. Supports the following term types:\\n\\n`site:{site_name}` - search only posts where the domain matches {site_name}.\\n\\n`-site:{site_name}` - search only posts where the domain does not match {site_name}.\\n\\n`/r/{subreddit}` - search only posts from the subreddit {subreddit}.\\n\\n`-/r/{subreddit}` - search only posts not from the subreddit {subreddit}.\\n\\n`{term}` - search only posts with titles containing the term {term}.\\n\\n`-{term}` - search only posts with titles not containing the term {term}.\\n\\n`score:{score}` - search only posts with score at least {score}.\\n\\n`before:{YYYY-mm-dd}`, `after:{YYYY-mm-dd}` - search only posts within the date range. `before` is inclusive, `after` is not.\"}], optional_params: [], return_schema: {\"type\": \"str\", \"data\": [{\"type\": \"str\", \"id\": \"str\", \"subreddit\": {\"id\": \"str\", \"name\": \"str\", \"nsfw\": \"bool\"}, \"created_utc\": \"int\", \"permalink\": \"str\", \"domain\": \"str\", \"title\": \"str\", \"selftext\": \"NoneType\", \"url\": \"str\", \"score\": \"int\", \"_list_length\": 25}], \"total_count\": \"int\", \"query\": \"str\", \"sort_key\": [\"list of list with length 1\"]}", "metadata": {}}
{"_id": "140", "title": "", "text": "category_name:Social, tool_name:Reddit, api_name:Posts By Username, api_description:Posts By Username, required_params: [{\"name\": \"username\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"sort\", \"type\": \"STRING\", \"description\": \"you can just send `new `or `hot`\"}], optional_params: [], return_schema: \"{\\\"success\\\": \\\"bool\\\", \\\"data\\\": {\\\"cursor\\\": \\\"str\\\", \\\"posts\\\": [{\\\"id\\\": \\\"str\\\", \\\"numComments\\\": \\\"int\\\", \\\"created\\\": \\\"int\\\", \\\"score\\\": \\\"int\\\", \\\"distinguishType\\\": \\\"NoneType\\\", \\\"isLocked\\\": \\\"bool\\\", \\\"isStickied\\\": \\\"bool\\\", \\\"thumbnail\\\": {\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"NoneType\\\", \\\"height\\\": \\\"NoneType\\\"}, \\\"title\\\": \\\"str\\\", \\\"author\\\": \\\"str\\\", \\\"authorId\\\": \\\"str\\\", \\\"authorIsBlocked\\\": \\\"bool\\\", \\\"domain\\\": \\\"str\\\", \\\"postId\\\": \\\"str\\\", \\\"upvoteRatio\\\": \\\"float\\\", \\\"numDuplicates\\\": \\\"NoneType\\\", \\\"discussionType\\\": \\\"NoneType\\\", \\\"viewCount\\\": \\\"int\\\", \\\"goldCount\\\": \\\"int\\\", \\\"isArchived\\\": \\\"bool\\\", \\\"contestMode\\\": \\\"bool\\\", \\\"gildings\\\": \\\"NoneType\\\", \\\"postCategories\\\": \\\"NoneType\\\", \\\"suggestedSort\\\": \\\"NoneType\\\", \\\"belongsTo\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\"}, \\\"flair\\\": \\\"empty list\\\", \\\"hidden\\\": \\\"bool\\\", \\\"saved\\\": \\\"bool\\\", \\\"isGildable\\\": \\\"bool\\\", \\\"isMediaOnly\\\": \\\"bool\\\", \\\"isSponsored\\\": \\\"bool\\\", \\\"isNSFW\\\": \\\"bool\\\", \\\"isMeta\\\": \\\"bool\\\", \\\"isSpoiler\\\": \\\"bool\\\", \\\"isBlank\\\": \\\"bool\\\", \\\"sendReplies\\\": \\\"bool\\\", \\\"voteState\\\": \\\"int\\\", \\\"permalink\\\": \\\"str\\\", \\\"events\\\": \\\"empty list\\\", \\\"eventsOnRender\\\": \\\"empty list\\\", \\\"\"", "metadata": {}}
{"_id": "141", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Username for, api_description:Username for given platform\n\n**Please do not insert the . when check on devote and askfm**\n\nPlatforms:\n- instagram\n- Facebook\n- TikTok\n- pinterest\n- GitHub\n- reddit\n- steam\n- twitch\n- medium\n- Minecraft\n- Patron\n- Etsy\n- SoundCloud\n- Shopify\n- Linktree\n- 9gag\n- askfm\n- docker hub\n- Fiverr\n- Tumblr\n- wikipedia\n- devto\n- snapchat\n- vimeo\n- behence\n- dribbble, required_params: [{\"name\": \"platform\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "142", "title": "", "text": "category_name:Social, tool_name:Reddit, api_name:Comments By Username, api_description:Comments By Username, required_params: [{\"name\": \"sort\", \"type\": \"STRING\", \"description\": \"you can just send `new `or `hot`\"}, {\"name\": \"username\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"{\\\"success\\\": \\\"bool\\\", \\\"data\\\": {\\\"cursor\\\": \\\"NoneType\\\", \\\"comments\\\": [{\\\"author\\\": \\\"str\\\", \\\"authorId\\\": \\\"str\\\", \\\"collapsed\\\": \\\"bool\\\", \\\"collapsedReason\\\": \\\"NoneType\\\", \\\"collapsedBecauseCrowdControl\\\": \\\"NoneType\\\", \\\"collapsedReasonCode\\\": \\\"NoneType\\\", \\\"created\\\": \\\"float\\\", \\\"depth\\\": \\\"NoneType\\\", \\\"deletedBy\\\": \\\"NoneType\\\", \\\"distinguishType\\\": \\\"NoneType\\\", \\\"editedAt\\\": \\\"NoneType\\\", \\\"gildings\\\": \\\"NoneType\\\", \\\"goldCount\\\": \\\"int\\\", \\\"id\\\": \\\"str\\\", \\\"isAdmin\\\": \\\"bool\\\", \\\"isDeleted\\\": \\\"bool\\\", \\\"isGildable\\\": \\\"bool\\\", \\\"isLocked\\\": \\\"bool\\\", \\\"isMod\\\": \\\"bool\\\", \\\"isOp\\\": \\\"bool\\\", \\\"isSaved\\\": \\\"bool\\\", \\\"isStickied\\\": \\\"bool\\\", \\\"isScoreHidden\\\": \\\"bool\\\", \\\"next\\\": \\\"NoneType\\\", \\\"parentId\\\": \\\"NoneType\\\", \\\"permalink\\\": \\\"str\\\", \\\"prev\\\": \\\"NoneType\\\", \\\"postAuthor\\\": \\\"str\\\", \\\"postId\\\": \\\"str\\\", \\\"postTitle\\\": \\\"str\\\", \\\"score\\\": \\\"int\\\", \\\"sendReplies\\\": \\\"bool\\\", \\\"subredditId\\\": \\\"str\\\", \\\"voteState\\\": \\\"int\\\", \\\"media\\\": {\\\"richtextContent\\\": {\\\"document\\\": [{\\\"c\\\": [{\\\"e\\\": \\\"str\\\", \\\"u\\\": \\\"str\\\", \\\"t\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"e\\\": \\\"str\\\", \\\"_list_length\\\": 1}]}, \\\"type\\\": \\\"str\\\", \\\"rteMode\\\": \\\"str\\\"}, \\\"profileIm\"", "metadata": {}}
{"_id": "143", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:GitHub, api_description:Check username on GitHub, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "144", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Medium, api_description:Check username on Medium, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "145", "title": "", "text": "category_name:Social, tool_name:Reddit, api_name:Top Popular Posts, api_description:Top Popular Posts, required_params: [{\"name\": \"time\", \"type\": \"STRING\", \"description\": \"you can just select one item from below:\\n`hour`\\n`day`\\n`week`\\n`month`\\n`year`\\n`all`\"}], optional_params: [], return_schema: \"{\\\"success\\\": \\\"bool\\\", \\\"data\\\": {\\\"cursor\\\": \\\"str\\\", \\\"posts\\\": [{\\\"id\\\": \\\"str\\\", \\\"numComments\\\": \\\"int\\\", \\\"created\\\": \\\"int\\\", \\\"score\\\": \\\"int\\\", \\\"distinguishType\\\": \\\"NoneType\\\", \\\"isLocked\\\": \\\"bool\\\", \\\"isStickied\\\": \\\"bool\\\", \\\"thumbnail\\\": {\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"int\\\", \\\"height\\\": \\\"int\\\"}, \\\"title\\\": \\\"str\\\", \\\"author\\\": \\\"str\\\", \\\"authorId\\\": \\\"str\\\", \\\"authorIsBlocked\\\": \\\"bool\\\", \\\"domain\\\": \\\"str\\\", \\\"postId\\\": \\\"str\\\", \\\"upvoteRatio\\\": \\\"float\\\", \\\"numDuplicates\\\": \\\"NoneType\\\", \\\"discussionType\\\": \\\"NoneType\\\", \\\"viewCount\\\": \\\"int\\\", \\\"goldCount\\\": \\\"int\\\", \\\"isArchived\\\": \\\"bool\\\", \\\"contestMode\\\": \\\"bool\\\", \\\"gildings\\\": {\\\"gid1\\\": \\\"int\\\", \\\"gid2\\\": \\\"int\\\", \\\"gid3\\\": \\\"int\\\"}, \\\"allAwardings\\\": [{\\\"awardType\\\": \\\"str\\\", \\\"awardSubType\\\": \\\"str\\\", \\\"coinPrice\\\": \\\"int\\\", \\\"coinReward\\\": \\\"int\\\", \\\"daysOfDripExtension\\\": \\\"NoneType\\\", \\\"daysOfPremium\\\": \\\"NoneType\\\", \\\"description\\\": \\\"str\\\", \\\"giverCoinReward\\\": \\\"NoneType\\\", \\\"iconUrl\\\": \\\"str\\\", \\\"iconWidth\\\": \\\"int\\\", \\\"iconHeight\\\": \\\"int\\\", \\\"staticIconUrl\\\": \\\"str\\\", \\\"staticIconWidth\\\": \\\"int\\\", \\\"staticIconHeight\\\": \\\"int\\\", \\\"id\\\": \\\"str\\\", \\\"isEnabled\\\": \\\"bool\\\", \\\"isNew\\\": \\\"\"", "metadata": {}}
{"_id": "146", "title": "", "text": "category_name:Social, tool_name:Reddit, api_name:Rising Popular Posts, api_description:Rising Popular Posts, required_params: [], optional_params: [], return_schema: \"{\\\"success\\\": \\\"bool\\\", \\\"data\\\": {\\\"cursor\\\": \\\"str\\\", \\\"posts\\\": [{\\\"id\\\": \\\"str\\\", \\\"numComments\\\": \\\"int\\\", \\\"created\\\": \\\"int\\\", \\\"score\\\": \\\"int\\\", \\\"distinguishType\\\": \\\"NoneType\\\", \\\"isLocked\\\": \\\"bool\\\", \\\"isStickied\\\": \\\"bool\\\", \\\"thumbnail\\\": {\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"int\\\", \\\"height\\\": \\\"int\\\"}, \\\"title\\\": \\\"str\\\", \\\"author\\\": \\\"str\\\", \\\"authorId\\\": \\\"str\\\", \\\"authorIsBlocked\\\": \\\"bool\\\", \\\"domain\\\": \\\"str\\\", \\\"postId\\\": \\\"str\\\", \\\"upvoteRatio\\\": \\\"float\\\", \\\"numDuplicates\\\": \\\"NoneType\\\", \\\"discussionType\\\": \\\"NoneType\\\", \\\"viewCount\\\": \\\"int\\\", \\\"goldCount\\\": \\\"int\\\", \\\"isArchived\\\": \\\"bool\\\", \\\"contestMode\\\": \\\"bool\\\", \\\"gildings\\\": \\\"NoneType\\\", \\\"postCategories\\\": \\\"NoneType\\\", \\\"suggestedSort\\\": \\\"NoneType\\\", \\\"belongsTo\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\"}, \\\"flair\\\": [{\\\"text\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"textColor\\\": \\\"str\\\", \\\"backgroundColor\\\": \\\"str\\\", \\\"templateId\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"hidden\\\": \\\"bool\\\", \\\"saved\\\": \\\"bool\\\", \\\"isGildable\\\": \\\"bool\\\", \\\"isMediaOnly\\\": \\\"bool\\\", \\\"isSponsored\\\": \\\"bool\\\", \\\"isNSFW\\\": \\\"bool\\\", \\\"isMeta\\\": \\\"bool\\\", \\\"isSpoiler\\\": \\\"bool\\\", \\\"isBlank\\\": \\\"bool\\\", \\\"sendReplies\\\": \\\"bool\\\", \\\"\"", "metadata": {}}
{"_id": "147", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:.org, api_description:Check if .org domain is registered, required_params: [{\"name\": \"name\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "148", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Patreon, api_description:Check username on Patreon, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "149", "title": "", "text": "category_name:Social, tool_name:Reddit, api_name:Top Comments By Username, api_description:Top Comments By Username, required_params: [{\"name\": \"time\", \"type\": \"STRING\", \"description\": \"you can just select one item from below:\\n`hour`\\n`day`\\n`week`\\n`month`\\n`year`\\n`all`\"}, {\"name\": \"username\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"data\": {\"cursor\": \"NoneType\", \"comments\": \"empty list\"}}", "metadata": {}}
{"_id": "150", "title": "", "text": "category_name:Social, tool_name:Reddit, api_name:Popular Posts, api_description:Popular Posts, required_params: [{\"name\": \"sort\", \"type\": \"STRING\", \"description\": \"you can just send `new `or `hot`\"}], optional_params: [], return_schema: \"{\\\"success\\\": \\\"bool\\\", \\\"data\\\": {\\\"cursor\\\": \\\"str\\\", \\\"posts\\\": [{\\\"id\\\": \\\"str\\\", \\\"numComments\\\": \\\"int\\\", \\\"created\\\": \\\"int\\\", \\\"score\\\": \\\"int\\\", \\\"distinguishType\\\": \\\"NoneType\\\", \\\"isLocked\\\": \\\"bool\\\", \\\"isStickied\\\": \\\"bool\\\", \\\"thumbnail\\\": {\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"NoneType\\\", \\\"height\\\": \\\"NoneType\\\"}, \\\"title\\\": \\\"str\\\", \\\"author\\\": \\\"str\\\", \\\"authorId\\\": \\\"str\\\", \\\"authorIsBlocked\\\": \\\"bool\\\", \\\"domain\\\": \\\"str\\\", \\\"postId\\\": \\\"str\\\", \\\"upvoteRatio\\\": \\\"float\\\", \\\"numDuplicates\\\": \\\"NoneType\\\", \\\"discussionType\\\": \\\"NoneType\\\", \\\"viewCount\\\": \\\"int\\\", \\\"goldCount\\\": \\\"int\\\", \\\"isArchived\\\": \\\"bool\\\", \\\"contestMode\\\": \\\"bool\\\", \\\"gildings\\\": \\\"NoneType\\\", \\\"postCategories\\\": \\\"NoneType\\\", \\\"suggestedSort\\\": \\\"NoneType\\\", \\\"belongsTo\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\"}, \\\"flair\\\": \\\"empty list\\\", \\\"hidden\\\": \\\"bool\\\", \\\"saved\\\": \\\"bool\\\", \\\"isGildable\\\": \\\"bool\\\", \\\"isMediaOnly\\\": \\\"bool\\\", \\\"isSponsored\\\": \\\"bool\\\", \\\"isNSFW\\\": \\\"bool\\\", \\\"isMeta\\\": \\\"bool\\\", \\\"isSpoiler\\\": \\\"bool\\\", \\\"isBlank\\\": \\\"bool\\\", \\\"sendReplies\\\": \\\"bool\\\", \\\"voteState\\\": \\\"int\\\", \\\"permalink\\\": \\\"str\\\", \\\"events\\\": \\\"empty list\\\", \\\"eventsOnRender\\\": \\\"empty list\\\", \\\"\"", "metadata": {}}
{"_id": "151", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Dockerhub, api_description:Check username on Dockerhub, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "152", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:9gag, api_description:Check username on 9gag, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "153", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Random username, api_description:Generate random username, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "154", "title": "", "text": "category_name:Social, tool_name:Reddit, api_name:Top Posts By Username, api_description:Top Posts By Username, required_params: [{\"name\": \"username\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"time\", \"type\": \"STRING\", \"description\": \"you can just select one item from below:\\n`hour`\\n`day`\\n`week`\\n`month`\\n`year`\\n`all`\"}], optional_params: [], return_schema: \"{\\\"success\\\": \\\"bool\\\", \\\"data\\\": {\\\"cursor\\\": \\\"str\\\", \\\"posts\\\": [{\\\"id\\\": \\\"str\\\", \\\"numComments\\\": \\\"int\\\", \\\"created\\\": \\\"int\\\", \\\"score\\\": \\\"int\\\", \\\"distinguishType\\\": \\\"NoneType\\\", \\\"isLocked\\\": \\\"bool\\\", \\\"isStickied\\\": \\\"bool\\\", \\\"thumbnail\\\": {\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"NoneType\\\", \\\"height\\\": \\\"NoneType\\\"}, \\\"title\\\": \\\"str\\\", \\\"author\\\": \\\"str\\\", \\\"authorId\\\": \\\"str\\\", \\\"authorIsBlocked\\\": \\\"bool\\\", \\\"domain\\\": \\\"str\\\", \\\"postId\\\": \\\"str\\\", \\\"upvoteRatio\\\": \\\"float\\\", \\\"numDuplicates\\\": \\\"NoneType\\\", \\\"discussionType\\\": \\\"NoneType\\\", \\\"viewCount\\\": \\\"int\\\", \\\"goldCount\\\": \\\"int\\\", \\\"isArchived\\\": \\\"bool\\\", \\\"contestMode\\\": \\\"bool\\\", \\\"gildings\\\": \\\"NoneType\\\", \\\"postCategories\\\": \\\"NoneType\\\", \\\"suggestedSort\\\": \\\"NoneType\\\", \\\"belongsTo\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\"}, \\\"flair\\\": \\\"empty list\\\", \\\"hidden\\\": \\\"bool\\\", \\\"saved\\\": \\\"bool\\\", \\\"isGildable\\\": \\\"bool\\\", \\\"isMediaOnly\\\": \\\"bool\\\", \\\"isSponsored\\\": \\\"bool\\\", \\\"isNSFW\\\": \\\"bool\\\", \\\"isMeta\\\": \\\"bool\\\", \\\"isSpoiler\\\": \\\"bool\\\", \\\"isBlank\\\": \\\"bool\\\", \\\"sendReplies\\\": \\\"bool\\\", \\\"voteState\\\": \\\"int\\\", \\\"permalink\\\": \\\"str\\\", \\\"events\\\": \\\"empty list\\\", \\\"eventsOnRender\\\": \\\"empty list\\\", \\\"\"", "metadata": {}}
{"_id": "155", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Place Distance, api_description:Gets this place's distance to the given place., required_params: [{\"name\": \"placeId\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"errors\": [{\"code\": \"str\", \"message\": \"str\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "156", "title": "", "text": "category_name:Location, tool_name:Referential, api_name:Cities, api_description:List and search over 75,000 world cities in 20 languages., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "157", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:properties/list, api_description:List properties having type of resorts, hotels, motels, hostels, etc as on official site, required_params: [{\"name\": \"offset\", \"type\": \"NUMBER\", \"description\": \"The number of items to ignore as offset for paging (fixed 30 items returned per page). You are interested in the optional parameter 'search_id'\"}, {\"name\": \"departure_date\", \"type\": \"STRING\", \"description\": \"The check-out date, the format is yyyy-MM-dd. Ex : 2022-08-15\"}, {\"name\": \"room_qty\", \"type\": \"NUMBER\", \"description\": \"The number of rooms\"}, {\"name\": \"guest_qty\", \"type\": \"NUMBER\", \"description\": \"The number of adults\"}, {\"name\": \"arrival_date\", \"type\": \"STRING\", \"description\": \"The check-in date at hotel, the format is yyyy-MM-dd. Ex : 2022-08-14\"}, {\"name\": \"search_type\", \"type\": \"STRING\", \"description\": \"Value of dest_type returned by locations/auto-complete API\"}, {\"name\": \"dest_ids\", \"type\": \"NUMBER\", \"description\": \"Value of dest&#95;id or city&#95;ufi field from locations/auto-complete API (Don't pass this if you use latlong as search&#95;type)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "158", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:reviews/get-scores, api_description:Get reviewing scores, required_params: [{\"name\": \"hotel_ids\", \"type\": \"NUMBER\", \"description\": \"The value of hotel_id field from properties/list API\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "159", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:properties/v2/get-rooms, api_description:Get full details of rooms in the hotel, required_params: [{\"name\": \"rec_room_qty\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"arrival_date\", \"type\": \"STRING\", \"description\": \"The check-in date at hotel\"}, {\"name\": \"rec_guest_qty\", \"type\": \"STRING\", \"description\": \"The number of adults separated by comma, and how you arrange them in rooms\"}, {\"name\": \"hotel_id\", \"type\": \"STRING\", \"description\": \"The value of hotel_id field from properties/list API\"}, {\"name\": \"departure_date\", \"type\": \"STRING\", \"description\": \"The check-out date \"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "160", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:properties/get-hotel-photos, api_description:Get photos of hotel, required_params: [{\"name\": \"hotel_ids\", \"type\": \"NUMBER\", \"description\": \"Get value from properties/list\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "161", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:City Details, api_description:Get the details for a specific city, including location coordinates, population, and elevation above sea-level (if available)., required_params: [{\"name\": \"cityid\", \"type\": \"STRING\", \"description\": \"The city id (either native id or wikiDataId)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "162", "title": "", "text": "category_name:Location, tool_name:Referential, api_name:City by id, api_description:Direct lookup of over 75,000 cities by id. See the v1/city API to search for city ids., required_params: [{\"name\": \"id\", \"type\": \"string\", \"description\": \"Lookup at /v1/city.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "163", "title": "", "text": "category_name:Commerce, tool_name:AliExpress unofficial, api_name:/product/{id}, api_description: , required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "164", "title": "", "text": "category_name:eCommerce, tool_name:Magic AliExpress, api_name:/api/countriesAvailableToShipping, api_description:This resource represents the countries. Each country is composed of Code and Name Attributes. This service can be used to communicate with product service for the countryFrom and countryTo query parameters., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "165", "title": "", "text": "category_name:eCommerce, tool_name:Magic AliExpress, api_name:/api/bestSales/products, api_description:This resource represents the best sales detected by our system, required_params: [{\"name\": \"page\", \"type\": \"NUMBER\", \"description\": \"you can sorted the products\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "166", "title": "", "text": "category_name:Commerce, tool_name:AliExpress unofficial, api_name:/shipping/{id}, api_description: , required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "167", "title": "", "text": "category_name:Commerce, tool_name:AliExpress unofficial, api_name:/categories/{id}, api_description: , required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"error\": \"str\"}", "metadata": {}}
{"_id": "168", "title": "", "text": "category_name:Commerce, tool_name:AliExpress unofficial, api_name:/products/{id}, api_description: , required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"error\": \"str\"}", "metadata": {}}
{"_id": "169", "title": "", "text": "category_name:eCommerce, tool_name:Magic AliExpress, api_name:/api/product/{productId}/historic/prices, api_description:This endpoint returns the prices historic of product loaded by a client, required_params: [{\"name\": \"productId\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "170", "title": "", "text": "category_name:eCommerce, tool_name:Magic AliExpress, api_name:/api/bestSales/SortedByNewest, api_description:Retrieves the last best product added in the system, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "171", "title": "", "text": "category_name:eCommerce, tool_name:Magic AliExpress, api_name:/api/product/{productId}/historic/sales, api_description:This endpoint returns the sales historic of product loaded by a client, required_params: [{\"name\": \"productId\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "172", "title": "", "text": "category_name:eCommerce, tool_name:Magic AliExpress, api_name:/api/currenciesAvailable, api_description:This resource represents a currency in the system. Each currency is composed of Code and Name Attributes. This service can be used to communicate with product service with the target currency attribute., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "173", "title": "", "text": "category_name:Commerce, tool_name:Flance AliExpress, api_name:product_id, api_description:Get Aliexpress Data by Product Id, required_params: [{\"name\": \"product_id\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "174", "title": "", "text": "category_name:Data, tool_name:Weather, api_name:5 day Forecast, api_description:3 hour interval - 5 day forecast for a given lat/lon, required_params: [{\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"Latitude (Degrees)\"}, {\"name\": \"lon\", \"type\": \"NUMBER\", \"description\": \"Longitude (degrees)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "175", "title": "", "text": "category_name:Data, tool_name:Weather, api_name:Current Weather Data of a location., api_description:Returns the current (most recent) weather observation of a given location, required_params: [{\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"Latitude\"}, {\"name\": \"lon\", \"type\": \"NUMBER\", \"description\": \"Longitude\"}], optional_params: [], return_schema: {\"count\": \"int\", \"data\": [{\"app_temp\": \"float\", \"aqi\": \"int\", \"city_name\": \"str\", \"clouds\": \"int\", \"country_code\": \"str\", \"datetime\": \"str\", \"dewpt\": \"int\", \"dhi\": \"int\", \"dni\": \"int\", \"elev_angle\": \"float\", \"ghi\": \"int\", \"gust\": \"float\", \"h_angle\": \"NoneType\", \"lat\": \"float\", \"lon\": \"float\", \"ob_time\": \"str\", \"pod\": \"str\", \"precip\": \"int\", \"pres\": \"float\", \"rh\": \"int\", \"slp\": \"float\", \"snow\": \"int\", \"solar_rad\": \"int\", \"sources\": [\"list of str with length 1\"], \"state_code\": \"str\", \"station\": \"str\", \"sunrise\": \"str\", \"sunset\": \"str\", \"temp\": \"float\", \"timezone\": \"str\", \"ts\": \"int\", \"uv\": \"int\", \"vis\": \"int\", \"weather\": {\"description\": \"str\", \"code\": \"int\", \"icon\": \"str\"}, \"wind_cdir\": \"str\", \"wind_cdir_full\": \"str\", \"wind_dir\": \"int\", \"wind_spd\": \"float\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "176", "title": "", "text": "category_name:Weather, tool_name:Air Quality, api_name:Air Quality Forecast, api_description:Returns a 3 day (72 hour) air quality forecast for any point in the world given a lat/lon. , required_params: [{\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"Latitude\"}, {\"name\": \"lon\", \"type\": \"NUMBER\", \"description\": \"Longitude\"}], optional_params: [], return_schema: {\"city_name\": \"str\", \"country_code\": \"str\", \"data\": [{\"aqi\": \"int\", \"co\": \"float\", \"datetime\": \"str\", \"no2\": \"float\", \"o3\": \"float\", \"pm10\": \"float\", \"pm25\": \"float\", \"so2\": \"float\", \"timestamp_local\": \"str\", \"timestamp_utc\": \"str\", \"ts\": \"int\", \"_list_length\": 72}], \"lat\": \"float\", \"lon\": \"float\", \"state_code\": \"str\", \"timezone\": \"str\"}", "metadata": {}}
{"_id": "177", "title": "", "text": "category_name:Weather, tool_name:Air Quality, api_name:Current Air Quality, api_description:Retrieves current air quality conditions for any location in the world, given a lat/lon., required_params: [{\"name\": \"lon\", \"type\": \"STRING\", \"description\": \"Longitude\"}, {\"name\": \"lat\", \"type\": \"STRING\", \"description\": \"Latitude\"}], optional_params: [], return_schema: {\"city_name\": \"str\", \"country_code\": \"str\", \"data\": [{\"aqi\": \"int\", \"co\": \"int\", \"mold_level\": \"int\", \"no2\": \"int\", \"o3\": \"int\", \"pm10\": \"int\", \"pm25\": \"int\", \"pollen_level_grass\": \"int\", \"pollen_level_tree\": \"int\", \"pollen_level_weed\": \"int\", \"predominant_pollen_type\": \"str\", \"so2\": \"int\", \"_list_length\": 1}], \"lat\": \"float\", \"lon\": \"float\", \"state_code\": \"str\", \"timezone\": \"str\"}", "metadata": {}}
{"_id": "178", "title": "", "text": "category_name:Data, tool_name:Weather, api_name:1 Hour / Minutely Forecast (Nowcast), api_description:Retrieve a 60 minute \"Nowcast\" for precipitation, and snowfall, required_params: [{\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"lon\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "179", "title": "", "text": "category_name:Data, tool_name:Weather, api_name:Severe Weather Alerts, api_description:Get servere weather alerts from local meteorlogical agencies (US, EU, and Isreal supported ), required_params: [{\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"Latitude\"}, {\"name\": \"lon\", \"type\": \"NUMBER\", \"description\": \"Longitude\"}], optional_params: [], return_schema: {\"alerts\": \"empty list\", \"city_name\": \"str\", \"country_code\": \"str\", \"lat\": \"float\", \"lon\": \"float\", \"state_code\": \"str\", \"timezone\": \"str\"}", "metadata": {}}
{"_id": "180", "title": "", "text": "category_name:Data, tool_name:Weather, api_name:16 Day Forecast, api_description:Returns a 16 day (daily) forecast, required_params: [{\"name\": \"lon\", \"type\": \"NUMBER\", \"description\": \"Longitude\"}, {\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"Latitude\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "181", "title": "", "text": "category_name:Education, tool_name:Random Word, api_name:/run.cgi, api_description:, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "182", "title": "", "text": "category_name:Entertainment, tool_name:TuneIn, api_name:Broadcaster Endpoint, api_description:Your title and artist information should be set to be updated by your broadcast software in correspondence with the currently playing song., required_params: [{\"name\": \"title\", \"type\": \"STRING\", \"description\": \"The name of the song\"}, {\"name\": \"artist\", \"type\": \"STRING\", \"description\": \"The artist associated with the song\"}, {\"name\": \"album\", \"type\": \"STRING\", \"description\": \"The name of the associated album\"}, {\"name\": \"commericial\", \"type\": \"BOOLEAN\", \"description\": \"Set to true if the now playing broadcast is in commercial rather than a song\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "183", "title": "", "text": "category_name:Business, tool_name:Proxy Detection, api_name:Proxy Detection API, api_description:API will detect if an ip address is related to a proxy of any kind. Checks through a database of over 26 million proxies., required_params: [{\"name\": \"ip\", \"type\": \"STRING\", \"description\": \"The IP address to be tested.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "184", "title": "", "text": "category_name:Tools, tool_name:ProxyPage, api_name:Tier2, api_description:Tier 2 proxies\n\nEach proxy returned costs 1 credit\n\n\nWith our /v1/tier2 endpoint you can set different parameters for proxies that you need.\n\nYou can set type which is just your proxy type, either HTTP, HTTPS, SOCKS4, SOCKS5, CONNECT:25 (which is smtp proxy)\n\nfor limit set an integer that will tell us how many proxies you will need. Our users usually set a limit to avoid using too many credits.\n\nWith latency you can set an integer which will filter out all proxies that have a latency higher then specified.\n\nssl is a boolean parameter, you can filter out proxies that support ssl or don't\n\nis_anonymous is also a boolean statemet where you can filter anonymous proxies\n\ncountry is a parameter that you can use to set a country that you want., required_params: [{\"name\": \"type\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"ip\": \"str\", \"port\": \"int\", \"latency\": \"int\", \"is_anonymous\": \"bool\", \"types\": [\"list of str with length 1\"], \"country\": \"str\"}", "metadata": {}}
{"_id": "185", "title": "", "text": "category_name:Tools, tool_name:ProxyPage, api_name:Tier1, api_description:List our tier 1 proxies with filters\nThis proxies are more comprehensively checked\n\n\nYou can set type which is just your proxy type, either HTTP, HTTPS\n\nfor limit set an integer that will tell us how many proxies you will need. Our users usually set a limit to avoid using too many credits.\n\nWith latency you can set an integer which will filter out all proxies that have a latency higher then specified.\n\nssl is a boolean parameter, you can filter out proxies that support ssl or don't\n\nis_anonymous is also a boolean statemet where you can filter anonymous proxies\n\ncountry is a parameter that you can use to set a country that you want., required_params: [{\"name\": \"type\", \"type\": \"STRING\", \"description\": \"HTTP, HTTPS, SOCKS4, SOCKS5, CONNECT:25\"}], optional_params: [], return_schema: {\"ip\": \"str\", \"port\": \"int\", \"latency\": \"int\", \"is_anonymous\": \"bool\", \"types\": [\"list of str with length 1\"], \"country\": \"str\"}", "metadata": {}}
{"_id": "186", "title": "", "text": "category_name:Data, tool_name:Proxy-Spider Proxies, api_name:/proxies.example.json, api_description:This is a free sample of ten proxies. Sign up and receive the full list., required_params: [], optional_params: [], return_schema: {\"status\": \"str\", \"data\": {\"proxies\": [{\"ip\": \"str\", \"port\": \"str\", \"country_code\": \"str\", \"response_time\": \"str\", \"type\": \"str\", \"supports\": [\"list of str with length 4\"], \"protocols\": [\"list of str with length 2\"], \"_list_length\": 10}], \"filters\": \"empty list\", \"quota_remaining\": \"int\", \"limit\": \"int\", \"page\": \"int\", \"has_next_page\": \"bool\"}, \"message\": \"str\", \"request_id\": \"str\"}", "metadata": {}}
{"_id": "187", "title": "", "text": "category_name:Social, tool_name:Whatsapp Scraper, api_name:Is whatsapp for business?, api_description:Requests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not., required_params: [{\"name\": \"phone\", \"type\": \"NUMBER\", \"description\": \"The phone number must be written as a number (including countrycode); \\ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "188", "title": "", "text": "category_name:Social, tool_name:Whatsapp Scraper, api_name:Fetch business info, api_description:The endpoint will provide: `description`, `website`, `email`, `business hours`, `address` and `category`; if the number is a whatsapp for business account., required_params: [{\"name\": \"phone\", \"type\": \"NUMBER\", \"description\": \"The phone number must be written as a number (including countrycode); \\ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "189", "title": "", "text": "category_name:Tools, tool_name:Bulk Whatsapp Validator, api_name:About info (free), api_description:You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nThis endpoint will return the `About` info of the number, and the time when the value was set., required_params: [{\"name\": \"phone\", \"type\": \"NUMBER\", \"description\": \"The phone number must be written as a number (including countrycode); \\ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.\"}, {\"name\": \"token\", \"type\": \"STRING\", \"description\": \"To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "190", "title": "", "text": "category_name:Tools, tool_name:Bulk Whatsapp Validator, api_name:Validate WA number (free), api_description:You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nThe response is `true` if the phone is registered on whatsapp., required_params: [{\"name\": \"phone\", \"type\": \"NUMBER\", \"description\": \"The phone number must be written as a number (including countrycode); \\ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.\"}, {\"name\": \"token\", \"type\": \"STRING\", \"description\": \"To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "191", "title": "", "text": "category_name:Tools, tool_name:Bulk Whatsapp Validator, api_name:Validate WA number, api_description:enter the number you want to validate.\nLearn how to use it on this [video](https://youtu.be/_h5ybzp9UNU)., required_params: [{\"name\": \"phone\", \"type\": \"NUMBER\", \"description\": \"The whatsapp number must be written as: number (including countrycode); do **NOT** include any non-number character, spaces, or anything which is not a number. Otherwise, the request will not be processed.\\nExamples: of correct numbers are: 34123456789 (for spain) or 491234567890 (for Germany).\\nTIPS:\\n    Do NOT include '+' before your countrycode,\\n    Do NOT include a '-', or any other character or space (anything which is not a number) as part of your phone number.\\n    If you do not know which is your country code check this: https://countrycode.org/\\n\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "192", "title": "", "text": "category_name:Social, tool_name:Whatsapp Scraper, api_name:Fetch profile picture (get free token), api_description:Free token needed, click [here](https://wa.me/34631428039?text=get-token) to get it. Gets the whatsapp number profile picture, you can select its resolution (`high` or `low`) and the response format: `png` file, `url` or `base64` encoded file.\nLearn how to use this endpoint on this [video](https://youtu.be/65eJN7S8sBw)., required_params: [{\"name\": \"phone\", \"type\": \"NUMBER\", \"description\": \"The phone number must be written as a number (including countrycode); \\ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.\"}, {\"name\": \"token\", \"type\": \"STRING\", \"description\": \"To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "193", "title": "", "text": "category_name:Communication, tool_name:Maytapi WhatsApp, api_name:getStatus, api_description:Returns the status of the current session., required_params: [{\"name\": \"phone_id\", \"type\": \"STRING\", \"description\": \"Enter phone id\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"message\": \"str\"}", "metadata": {}}
{"_id": "194", "title": "", "text": "category_name:Entertainment, tool_name:YouTube to Mp4, api_name:Title & URL, api_description:fetches YouTube direct download link and video title, required_params: [{\"name\": \"url\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "195", "title": "", "text": "category_name:Music, tool_name:Youtube MP3 Converter, api_name:Get Download URL MP3/MP4, api_description:Get Download URL, required_params: [{\"name\": \"lang\", \"type\": \"STRING\", \"description\": \"The language\"}, {\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The youtube video id\"}, {\"name\": \"action\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"widget\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "196", "title": "", "text": "category_name:Other, tool_name:whois, api_name:whois lookup v1, api_description:Whois api v1 with password authentication., required_params: [{\"name\": \"domainname\", \"type\": \"STRING\", \"description\": \"input domain name to lookup\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "197", "title": "", "text": "category_name:Tools, tool_name:Bulk WHOIS, api_name:Bulk WHOIS, api_description:WHOIS query, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "198", "title": "", "text": "category_name:Entertainment, tool_name:Chart Lyrics, api_name:/apiv1.asmx/SearchLyricDirect?artist=michael%20jackson&song=bad, api_description:Sample API request to search Lyrics, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "199", "title": "", "text": "category_name:Business, tool_name:360 Business Tool, api_name:GetAllRecordsSince, api_description:Get all data modified since, required_params: [{\"name\": \"timestamp\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "200", "title": "", "text": "category_name:Business, tool_name:360 Business Tool, api_name:GetDocumentTypesSince, api_description:Get document types modified since, required_params: [{\"name\": \"timestamp\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "201", "title": "", "text": "category_name:Business, tool_name:360 Business Tool, api_name:GetCompaniesSince, api_description:Get companies modified since, required_params: [{\"name\": \"timestamp\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "202", "title": "", "text": "category_name:Business, tool_name:360 Business Tool, api_name:GetDocumentTypes, api_description:Get all document types, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "203", "title": "", "text": "category_name:Media, tool_name:Vimeo, api_name:SearchVideos, api_description:Search for videos., required_params: [{\"name\": \"format\", \"type\": \"STRING\", \"description\": \"json/xml/php\"}, {\"name\": \"query\", \"type\": \"STRING\", \"description\": \"The search terms\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "204", "title": "", "text": "category_name:Media, tool_name:Vimeo, api_name:GetRelatedPeople, api_description:Get a list of related people for a category., required_params: [{\"name\": \"category\", \"type\": \"STRING\", \"description\": \"The name of the category.\"}, {\"name\": \"format\", \"type\": \"STRING\", \"description\": \"json or xml or php\"}], optional_params: [], return_schema: {\"generated_in\": \"str\", \"stat\": \"str\", \"err\": {\"code\": \"str\", \"expl\": \"str\", \"msg\": \"str\"}}", "metadata": {}}
{"_id": "205", "title": "", "text": "category_name:Tools, tool_name:YTStream - Download YouTube Videos, api_name:Download/Stream, api_description:Stream or download info., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Youtube Video Id.\"}], optional_params: [], return_schema: \"{\\\"status\\\": \\\"str\\\", \\\"id\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"lengthSeconds\\\": \\\"str\\\", \\\"keywords\\\": [\\\"list of str with length 18\\\"], \\\"channelTitle\\\": \\\"str\\\", \\\"channelId\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\", \\\"thumbnail\\\": [{\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"int\\\", \\\"height\\\": \\\"int\\\", \\\"_list_length\\\": 4}], \\\"allowRatings\\\": \\\"bool\\\", \\\"viewCount\\\": \\\"NoneType\\\", \\\"isPrivate\\\": \\\"bool\\\", \\\"isUnpluggedCorpus\\\": \\\"bool\\\", \\\"isLiveContent\\\": \\\"bool\\\", \\\"storyboards\\\": [{\\\"width\\\": \\\"str\\\", \\\"height\\\": \\\"str\\\", \\\"thumbsCount\\\": \\\"str\\\", \\\"columns\\\": \\\"str\\\", \\\"rows\\\": \\\"str\\\", \\\"interval\\\": \\\"str\\\", \\\"storyboardCount\\\": \\\"int\\\", \\\"url\\\": [\\\"list of str with length 1\\\"], \\\"_list_length\\\": 3}], \\\"expiresInSeconds\\\": \\\"str\\\", \\\"formats\\\": [{\\\"itag\\\": \\\"int\\\", \\\"url\\\": \\\"str\\\", \\\"mimeType\\\": \\\"str\\\", \\\"bitrate\\\": \\\"int\\\", \\\"width\\\": \\\"int\\\", \\\"height\\\": \\\"int\\\", \\\"lastModified\\\": \\\"str\\\", \\\"contentLength\\\": \\\"str\\\", \\\"quality\\\": \\\"str\\\", \\\"fps\\\": \\\"int\\\", \\\"qualityLabel\\\": \\\"str\\\", \\\"projectionType\\\": \\\"str\\\", \\\"averageBitrate\\\": \\\"int\\\", \\\"audioQuality\\\": \\\"str\\\", \\\"approxDurationMs\\\": \\\"str\\\", \\\"audioSampleRate\\\": \\\"str\\\", \\\"audioChannels\\\": \\\"int\\\", \\\"_list_length\"", "metadata": {}}
{"_id": "206", "title": "", "text": "category_name:Data, tool_name:Opencage geocoder, api_name:/geocode/v1/json, api_description:geocode an address, required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"\\\"latitude,longitude\\\" or \\\"address\\\" (without \\\")\"}, {\"name\": \"key\", \"type\": \"STRING\", \"description\": \"The API key you got when registering on https://geocoder.opencagedata.com/\"}], optional_params: [], return_schema: {\"documentation\": \"str\", \"licenses\": [{\"name\": \"str\", \"url\": \"str\", \"_list_length\": 1}], \"results\": \"empty list\", \"status\": {\"code\": \"int\", \"message\": \"str\"}, \"stay_informed\": {\"blog\": \"str\", \"mastodon\": \"str\", \"twitter\": \"str\"}, \"thanks\": \"str\", \"timestamp\": {\"created_http\": \"str\", \"created_unix\": \"int\"}, \"total_results\": \"int\"}", "metadata": {}}
{"_id": "207", "title": "", "text": "category_name:Mapping, tool_name:Reverse Geocoding and Geolocation Service, api_name:GetLargestCities, api_description:Returns 5 largest cities within a given radial range with name, population, country and distance., required_params: [{\"name\": \"latitude\", \"type\": \"NUMBER\", \"description\": \"latitude in decimal degrees (wgs84)\"}, {\"name\": \"longitude\", \"type\": \"NUMBER\", \"description\": \"longitude in decimal degrees (wgs84)\"}, {\"name\": \"range\", \"type\": \"NUMBER\", \"description\": \"radial lookup range in meters (max 100.000)\"}], optional_params: [], return_schema: {\"City\": \"str\", \"Population\": \"int\", \"Latitude\": \"float\", \"Longitude\": \"float\", \"Country\": \"str\", \"CountryId\": \"str\", \"TimeZoneId\": \"str\", \"TimeZoneName\": \"str\", \"TimeZone_GMT_offset\": \"int\", \"LocalTimeNow\": \"str\", \"Distance\": \"float\", \"Bearing\": \"float\", \"CompassDirection\": \"str\"}", "metadata": {}}
{"_id": "208", "title": "", "text": "category_name:Mapping, tool_name:Reverse Geocoding and Geolocation Service, api_name:GetTimezone, api_description:Finds the local timezone for any given geo-location point by lat and long and returns timezone information with Timezone name, Timezone id and current local time., required_params: [{\"name\": \"longitude\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"latitude\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"TimeZoneId\": \"str\", \"GMT_offset\": \"int\", \"TimeZoneName\": \"str\", \"LocalTime_Now\": \"str\", \"Country\": \"str\", \"CountryId\": \"str\"}", "metadata": {}}
{"_id": "209", "title": "", "text": "category_name:Mapping, tool_name:TrueWay Geocoding, api_name:ReverseGeocode, api_description:Obtain address for location, required_params: [{\"name\": \"location\", \"type\": \"STRING\", \"description\": \"The location for which you wish to obtain the human-readable address\"}], optional_params: [], return_schema: {\"results\": [{\"address\": \"str\", \"postal_code\": \"str\", \"country\": \"str\", \"region\": \"str\", \"area\": \"str\", \"locality\": \"str\", \"neighborhood\": \"str\", \"street\": \"str\", \"house\": \"str\", \"location\": {\"lat\": \"float\", \"lng\": \"float\"}, \"location_type\": \"str\", \"type\": \"str\", \"_list_length\": 5}]}", "metadata": {}}
{"_id": "210", "title": "", "text": "category_name:Mapping, tool_name:TrueWay Geocoding, api_name:Geocode, api_description:Obtain geocoordinates for address, required_params: [{\"name\": \"address\", \"type\": \"STRING\", \"description\": \"The address that you want to geocode\"}], optional_params: [], return_schema: {\"results\": [{\"address\": \"str\", \"postal_code\": \"str\", \"country\": \"str\", \"region\": \"str\", \"area\": \"str\", \"locality\": \"str\", \"neighborhood\": \"str\", \"street\": \"str\", \"house\": \"str\", \"location\": {\"lat\": \"float\", \"lng\": \"float\"}, \"location_type\": \"str\", \"type\": \"str\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "211", "title": "", "text": "category_name:Location, tool_name:Spott, api_name:Search places, api_description:Returns a list of places (either countries, cities or administrative divisions) matching a query and filtered by properties., required_params: [], optional_params: [], return_schema: {\"error\": {\"code\": \"str\", \"message\": \"str\"}}", "metadata": {}}
{"_id": "212", "title": "", "text": "category_name:Mapping, tool_name:MapToolkit, api_name:Staticmaps, api_description:Create a Staticmap., required_params: [{\"name\": \"size\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"center\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"zoom\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "213", "title": "", "text": "category_name:Mapping, tool_name:MapTiles, api_name:getStandardMapTile, api_description:Standard tiles with labels in local language for a place (untranslated and untransliterated) as known from OpenStreetMap, required_params: [{\"name\": \"y\", \"type\": \"NUMBER\", \"description\": \"Y-number of tile (see documentation)\"}, {\"name\": \"x\", \"type\": \"NUMBER\", \"description\": \"X-number of tile (see documentation)\"}, {\"name\": \"z\", \"type\": \"NUMBER\", \"description\": \"zoom (from 0 up to zoom 19)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "214", "title": "", "text": "category_name:Location, tool_name:NAVITIME Geocoding, api_name:address_postal_code, api_description:Return address information from postal code of request parameters., required_params: [{\"name\": \"postal_code\", \"type\": \"STRING\", \"description\": \"Postal code string (Minimum: 3 digits, Maximum: 7 digits)\"}], optional_params: [], return_schema: {\"count\": {\"total\": \"int\", \"offset\": \"int\", \"limit\": \"int\"}, \"items\": [{\"code\": \"str\", \"name\": \"str\", \"postal_code\": \"str\", \"coord\": {\"lat\": \"float\", \"lon\": \"float\"}, \"details\": [{\"code\": \"str\", \"name\": \"str\", \"ruby\": \"str\", \"level\": \"str\", \"_list_length\": 4}], \"_list_length\": 5}], \"unit\": {\"datum\": \"str\", \"coord_unit\": \"str\"}}", "metadata": {}}
{"_id": "215", "title": "", "text": "category_name:Location, tool_name:NAVITIME Geocoding, api_name:address_autocomplete, api_description:Return address predictions from the specified keyword of request parameters., required_params: [{\"name\": \"word\", \"type\": \"STRING\", \"description\": \"Address string (Minimum: 2 characters, Maximum: 50 characters).\\n\\nIf a string of 51 or more characters is entered, the 51st and subsequent characters will be deleted and searched.\\nArabic and Chinese numerals are searched as they are.\"}], optional_params: [], return_schema: {\"items\": [{\"code\": \"str\", \"name\": \"str\", \"coord\": {\"lat\": \"float\", \"lon\": \"float\"}, \"details\": [{\"code\": \"str\", \"name\": \"str\", \"ruby\": \"str\", \"level\": \"str\", \"_list_length\": 1}], \"_list_length\": 20}], \"unit\": {\"datum\": \"str\", \"coord_unit\": \"str\"}}", "metadata": {}}
{"_id": "216", "title": "", "text": "category_name:Mapping, tool_name:MapToolkit, api_name:Search, api_description:Global Geocoder., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "217", "title": "", "text": "category_name:Location, tool_name:Spott, api_name:Get place by ID, api_description:Returns a single Place identified by an ID., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"ID of the Place.\"}], optional_params: [], return_schema: {\"error\": {\"code\": \"str\", \"message\": \"str\"}}", "metadata": {}}
{"_id": "218", "title": "", "text": "category_name:Location, tool_name:Spott, api_name:Autocomplete places, api_description:Returns a list of places matching a prefix and specified filter properties. Useful to create \"search as you type\" inputs., required_params: [], optional_params: [], return_schema: {\"error\": {\"code\": \"str\", \"message\": \"str\"}}", "metadata": {}}
{"_id": "219", "title": "", "text": "category_name:Data, tool_name:Open Brewery DB, api_name:Breweries, api_description:List of Breweries, required_params: [], optional_params: [], return_schema: {}", "metadata": {}}
{"_id": "220", "title": "", "text": "category_name:Data, tool_name:Open Brewery DB, api_name:Search, api_description:Search for a brewery, required_params: [], optional_params: [], return_schema: {\"id\": \"str\", \"name\": \"str\", \"brewery_type\": \"str\", \"address_1\": \"str\", \"address_2\": \"NoneType\", \"address_3\": \"NoneType\", \"city\": \"str\", \"state_province\": \"str\", \"postal_code\": \"str\", \"country\": \"str\", \"longitude\": \"str\", \"latitude\": \"str\", \"phone\": \"str\", \"website_url\": \"str\", \"state\": \"str\", \"street\": \"str\"}", "metadata": {}}
{"_id": "221", "title": "", "text": "category_name:Food, tool_name:Tasty, api_name:tips/list, api_description:This endpoint is used to load tips (reviews), required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"The value of recipe id returned in .../recipes/list .../feeds/list .../recipes/list-similarities endpoints\"}], optional_params: [], return_schema: {\"count\": \"int\", \"results\": [{\"author_avatar_url\": \"str\", \"author_name\": \"str\", \"author_rating\": \"int\", \"author_user_id\": \"int\", \"author_username\": \"str\", \"author_is_verified\": \"int\", \"is_flagged\": \"bool\", \"recipe_id\": \"int\", \"status_id\": \"int\", \"comment_id\": \"int\", \"comment_count\": \"int\", \"tip_body\": \"str\", \"tip_id\": \"int\", \"tip_photo\": \"NoneType\", \"created_at\": \"NoneType\", \"updated_at\": \"int\", \"upvotes_total\": \"int\", \"_list_length\": 30}]}", "metadata": {}}
{"_id": "222", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/points/{point}, api_description:Metadata about a point. This is the primary endpoint for forecast information for a location. It contains linked data for the forecast, the hourly forecast, observation and other information. Example: /points/39.0693,-94.6716, required_params: [{\"name\": \"point\", \"type\": \"STRING\", \"description\": \"point: EPSG:4326 latitude, EPSG:4326 longitude\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 2}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "223", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/stations/{stationId}/observations/current, api_description:The most current observation for a station. Due to a legacy requirement, this endpoint will support XML for the near future when using the Accept header. It is highly recommend that applications update to the JSON format.  NOTE! See note in /stations/{stationId}/observations for important details on observation data.  Example: /stations/KMKC/observations/current, required_params: [{\"name\": \"stationId\", \"type\": \"STRING\", \"description\": \"stationId: Station Id (e.g. as provided by the /points/{point}/stations endpoint)\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 2}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "224", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/alerts/active/region/{region}, api_description:A list of active alerts by region. The ATOM format returns items in CAP-ATOM. Example: /alerts/active/region/GL, required_params: [{\"name\": \"region\", \"type\": \"STRING\", \"description\": \"area: a valid region, see list in counts endpoint\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 2}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "225", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/alerts?{parameters}, api_description:A list of alerts that can be filtered by parameters. If no parameters are provided, then all alerts are returned. The ATOM format returns items in CAP-ATOM., required_params: [], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 14}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "226", "title": "", "text": "category_name:Weather, tool_name:Visual Crossing Weather, api_name:Weather forecast data, api_description:Provides access to weather forecast information. The forecast is available for up to seven days at the hourly, 12 hour and daily summary level., required_params: [{\"name\": \"aggregateHours\", \"type\": \"NUMBER\", \"description\": \"The interval between weather forecast data in the output. 1 represents an hourly forecast, 24 represents a daily forecast. As the source data is calculated at the hourly level, records calculated at 12 or 24 hours are aggregated to indicate the predominant weather condition during that time period. For example the maximum temperature, total precipitation, maximum windspeed etc.  Supported values 1,12 or 24.\"}, {\"name\": \"location\", \"type\": \"STRING\", \"description\": \"he address or latitude or longitude of the location. Addresses can be specified as full addresses. The system will also attempt to match partial addresses such as city, state, zip code, postal code and other common formats. When specify a point based on longitude, latitude, the format must be specifed as latitude,longitude where both latitude and longitude are in decimal degrees. latitude should run from -90 to 90 and longitude from -180 to 180 (with 0 being at the prime meridian through London, UK).\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "227", "title": "", "text": "category_name:Data, tool_name:Weather, api_name:120 Hour Forecast, api_description:Returns a forecast for up to 120 hours in the future (default 48 hours), required_params: [{\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"Latitude\"}, {\"name\": \"lon\", \"type\": \"NUMBER\", \"description\": \"Longitude\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "228", "title": "", "text": "category_name:Weather, tool_name:Visual Crossing Weather, api_name:Historical weather record, api_description:The weather history data is suitable for retrieving hourly or daily historical weather records., required_params: [{\"name\": \"location\", \"type\": \"STRING\", \"description\": \"The address or latitude or longitude of the location. Addresses can be specified as full addresses. The system will also attempt to match partial addresses such as city, state, zip code, postal code and other common formats. When specify a point based on longitude, latitude, the format must be specifed as latitude,longitude where both latitude and longitude are in decimal degrees. latitude should run from -90 to 90 and longitude from -180 to 180 (with 0 being at the prime meridian through London, UK).\"}, {\"name\": \"endDateTime\", \"type\": \"STRING\", \"description\": \"The date time for the start of the data request using the time zone of the location. In the ISO format: yyyy-MM-ddTHH:mm:ss. Hours should be specified in 24 hour clock format.\"}, {\"name\": \"startDateTime\", \"type\": \"STRING\", \"description\": \"The date time for the start of the data request using the time zone of the location. In the ISO format: yyyy-MM-ddTHH:mm:ss. Hours should be specified in 24 hour clock format.\"}, {\"name\": \"aggregateHours\", \"type\": \"NUMBER\", \"description\": \"The interval between weather history data in the output. 1 represent hourly records, 24 represents a daily forecast. As the source data is recorded at the hourly level, 24 hour records are aggregated to indicate the predominant weather conditions during that time period.  Supported values 1 or 24.\"}, {\"name\": \"unitGroup\", \"type\": \"STRING\", \"description\": \"The system of units used for the output data.  Supported values are us,uk,metric\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "229", "title": "", "text": "category_name:Weather, tool_name:WeatherAPI.com, api_name:Astronomy API, api_description:Astronomy API method allows a user to get up to date information for sunrise, sunset, moonrise, moonset, moon phase and illumination in json., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Query parameter based on which data is sent back. It could be following:\\n\\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\\ncity name e.g.: q=Paris\\nUS zip e.g.: q=10001\\nUK postcode e.g: q=SW1\\nCanada postal code e.g: q=G2J\\nmetar:<metar code> e.g: q=metar:EGLL\\niata:<3 digit airport code> e.g: q=iata:DXB\\nauto:ip IP lookup e.g: q=auto:ip\\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1\"}], optional_params: [], return_schema: {\"location\": {\"name\": \"str\", \"region\": \"str\", \"country\": \"str\", \"lat\": \"float\", \"lon\": \"float\", \"tz_id\": \"str\", \"localtime_epoch\": \"int\", \"localtime\": \"str\"}, \"astronomy\": {\"astro\": {\"sunrise\": \"str\", \"sunset\": \"str\", \"moonrise\": \"str\", \"moonset\": \"str\", \"moon_phase\": \"str\", \"moon_illumination\": \"str\", \"is_moon_up\": \"int\", \"is_sun_up\": \"int\"}}}", "metadata": {}}
{"_id": "230", "title": "", "text": "category_name:Travel, tool_name:webcams.travel, api_name:/webcams/list/nearby={lat},{lng},{radius}, api_description:This is a modifier. Returns a list of webcams near the given coordinates {lat},{lng} up to the given {radius} in kilometers. Required: {lat}, {lng}, {radius}. The maximum value for {radius} is 250., required_params: [{\"name\": \"radius\", \"type\": \"NUMBER\", \"description\": \"Maximum distance in kilometers.\"}, {\"name\": \"lng\", \"type\": \"NUMBER\", \"description\": \"WGS84 longitude.\"}, {\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"WGS84 latitude.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "231", "title": "", "text": "category_name:Location, tool_name:Spott, api_name:Get place by Geoname ID, api_description:Returns a single Place identified by a Geoname ID., required_params: [{\"name\": \"geonameId\", \"type\": \"NUMBER\", \"description\": \"Unique identificator given by Geonames\"}], optional_params: [], return_schema: {\"error\": {\"code\": \"str\", \"message\": \"str\"}}", "metadata": {}}
{"_id": "232", "title": "", "text": "category_name:Location, tool_name:Spott, api_name:Get place by my IP, api_description:Returns the place related to the IP where the request was performed. Returns \"Not Found\" error when no place is related to the IP., required_params: [], optional_params: [], return_schema: {\"error\": {\"code\": \"str\", \"message\": \"str\"}}", "metadata": {}}
{"_id": "233", "title": "", "text": "category_name:Mapping, tool_name:TrueWay Places, api_name:FindPlaceByText, api_description:Search for places by text string, required_params: [{\"name\": \"text\", \"type\": \"STRING\", \"description\": \"A text string on which to search\"}], optional_params: [], return_schema: {\"results\": [{\"id\": \"str\", \"name\": \"str\", \"address\": \"str\", \"phone_number\": \"str\", \"website\": \"str\", \"location\": {\"lat\": \"float\", \"lng\": \"float\"}, \"types\": [\"list of str with length 2\"], \"_list_length\": 1}]}", "metadata": {}}
{"_id": "234", "title": "", "text": "category_name:Mapping, tool_name:TrueWay Places, api_name:FindPlacesNearby, api_description:Search for nearby places, required_params: [{\"name\": \"location\", \"type\": \"STRING\", \"description\": \"The latitude/longitude around which to retrieve places\"}], optional_params: [], return_schema: {\"results\": [{\"id\": \"str\", \"name\": \"str\", \"address\": \"str\", \"location\": {\"lat\": \"float\", \"lng\": \"float\"}, \"types\": [\"list of str with length 3\"], \"distance\": \"int\", \"_list_length\": 3}]}", "metadata": {}}
{"_id": "235", "title": "", "text": "category_name:Location, tool_name:Spott, api_name:Get place by IP, api_description:Returns the Place where a given IP Address is located. Returns \"Not Found\" error when no place is related to the IP. When sending '127.0.0.1' or '0.0.0.0' IP Addresses it will return the Place from the request was performed., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"IP Address (v4 and v6 are supported).\"}], optional_params: [], return_schema: {\"error\": {\"code\": \"str\", \"message\": \"str\"}}", "metadata": {}}
{"_id": "236", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:City Located In, api_description:Get the details for the containing populated place (e.g., its county or other administrative division), including location coordinates, population, and elevation above sea-level  (if available). \n\nCurrently, this data is highly dependent on whether the Wikidata **locatedIn** relation is properly defined. If you see an issue, please propose a change to the corresponding Wikidata entry., required_params: [{\"name\": \"cityId\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "237", "title": "", "text": "category_name:Mapping, tool_name:MapTiles, api_name:getMapTilewithFrenchLabels, api_description:Raster Map Tiles with French Labels, required_params: [{\"name\": \"x\", \"type\": \"NUMBER\", \"description\": \"X-number of tile (see documentation)\"}, {\"name\": \"y\", \"type\": \"NUMBER\", \"description\": \"Y-number of tile (see documentation)\"}, {\"name\": \"z\", \"type\": \"NUMBER\", \"description\": \"zoom (from 0 up to zoom 19)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "238", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Place Time, api_description:Get this place's current time in ISO-8601 format: HHmmss.SSSZ, required_params: [{\"name\": \"placeId\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "239", "title": "", "text": "category_name:Mapping, tool_name:MapTiles, api_name:getMapTilewithSpanishLabels, api_description:Raster Map Tiles with Spanish Labels. Please see [tutorial](https://rapidapi.com/MapTilesApi/api/maptiles/tutorials/openstreetmap-in-spanish---add-a-spanish-map-to-your-website-with-leaflet-js-and-maptiles-api) on how to use the Spanish world map., required_params: [{\"name\": \"z\", \"type\": \"NUMBER\", \"description\": \"zoom (from 0 up to zoom 19)\"}, {\"name\": \"x\", \"type\": \"NUMBER\", \"description\": \"X-number of tile (see documentation)\"}, {\"name\": \"y\", \"type\": \"NUMBER\", \"description\": \"Y-number of tile (see documentation)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "240", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Time-Zone, api_description:Get the time-zone current time in ISO-6801 format: HHmmss.SSSZ, required_params: [{\"name\": \"zoneid\", \"type\": \"STRING\", \"description\": \"The time-zone id\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "241", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Time-Zone Date-Time, api_description:Get the timezone current date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ, required_params: [{\"name\": \"zoneid\", \"type\": \"STRING\", \"description\": \"The time-zone id\"}], optional_params: [], return_schema: {\"data\": \"str\"}", "metadata": {}}
{"_id": "242", "title": "", "text": "category_name:Travel, tool_name:webcams.travel, api_name:/webcams/list/bbox={ne_lat},{ne_lng},{sw_lat},{sw_lng}, api_description:This is a modifier. Returns a list of the webcams in the bounding box given by north-east ({ne_lat},{ne_lng}) and south-west ({sw_lat},{sw_lng}) coordinates. Required: {ne_lat},{ne_lng},{sw_lat},{sw_lng}., required_params: [{\"name\": \"ne_lat\", \"type\": \"NUMBER\", \"description\": \"North-east WGS84 latitude of the bounding box.\"}, {\"name\": \"sw_lng\", \"type\": \"NUMBER\", \"description\": \"South-west WGS84 longitude of the bounding box.\"}, {\"name\": \"sw_lat\", \"type\": \"NUMBER\", \"description\": \"South-west WGS84 latitude of the bounding box.\"}, {\"name\": \"ne_lng\", \"type\": \"NUMBER\", \"description\": \"North-east WGS84 longitude of the bounding box.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "243", "title": "", "text": "category_name:Data, tool_name:Holy Bible, api_name:GetVerses, api_description:, required_params: [{\"name\": \"Book\", \"type\": \"STRING\", \"description\": \"Enter one of the books from Bible.\"}, {\"name\": \"chapter\", \"type\": \"NUMBER\", \"description\": \"Enter chapter number from given book.\"}, {\"name\": \"VerseFrom\", \"type\": \"NUMBER\", \"description\": \"Enter Verse to start.\"}, {\"name\": \"VerseTo\", \"type\": \"NUMBER\", \"description\": \"Enter Verse to End.\"}], optional_params: [], return_schema: {\"Book\": \"str\", \"Chapter\": \"str\", \"VerseFrom\": \"str\", \"VerseTo\": \"str\", \"Output\": \"str\"}", "metadata": {}}
{"_id": "244", "title": "", "text": "category_name:Education, tool_name:Uncovered Treasure, api_name:/topics, api_description:Get list of all topics, required_params: [], optional_params: [], return_schema: {\"results\": [\"list of NoneType with length 2443\"]}", "metadata": {}}
{"_id": "245", "title": "", "text": "category_name:Data, tool_name:Holy Bible, api_name:GetVerseOfaChapter, api_description:, required_params: [{\"name\": \"Book\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"chapter\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"Verse\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"Book\": \"str\", \"Chapter\": \"str\", \"Verse\": \"str\", \"Output\": \"str\"}", "metadata": {}}
{"_id": "246", "title": "", "text": "category_name:Education, tool_name:Uncovered Treasure, api_name:/verse/{verse}, api_description:Get treasure by verse, required_params: [{\"name\": \"verse\", \"type\": \"STRING\", \"description\": \"Use common English name with chapter number and optionally verse, such as \\\"1 Corinthians 1\\\", \\\"1 Corinthians 1:5\\\" or \\\"James 3\\\". Does NOT support ranged searches, such as \\\"James 3:1-4\\\".\"}], optional_params: [], return_schema: {\"results\": [{\"date\": \"str\", \"context\": \"str\", \"scriptures\": [\"list of str with length 1\"], \"text\": \"str\", \"topics\": [\"list of str with length 3\"], \"bookOrder\": \"int\", \"_list_length\": 4}]}", "metadata": {}}
{"_id": "247", "title": "", "text": "category_name:Data, tool_name:Holy Bible, api_name:GetChapter, api_description:, required_params: [{\"name\": \"Book\", \"type\": \"STRING\", \"description\": \"Enter one of the books from Bible.\"}, {\"name\": \"chapter\", \"type\": \"NUMBER\", \"description\": \"Enter chapter number from given book.\"}], optional_params: [], return_schema: {\"Book\": \"str\", \"Chapter\": \"str\", \"Output\": \"str\"}", "metadata": {}}
{"_id": "248", "title": "", "text": "category_name:Science, tool_name:manatee jokes, api_name:random, api_description:retrieves a random manatee joke, required_params: [], optional_params: [], return_schema: {\"id\": \"int\", \"setup\": \"str\", \"punchline\": \"str\", \"createdAt\": \"str\", \"updatedAt\": \"str\"}", "metadata": {}}
{"_id": "249", "title": "", "text": "category_name:Entertainment, tool_name:DaddyJokes, api_name:Random, api_description:Get a random dad joke, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "250", "title": "", "text": "category_name:Entertainment, tool_name:Humor-Jokes-and-Memes, api_name:search-gifs, api_description:Search for gifs.\nSee https://humorapi.com/docs/#Search-Gifs for more., required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"A search query.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "251", "title": "", "text": "category_name:Entertainment, tool_name:Humor-Jokes-and-Memes, api_name:generate-nonsense-word, api_description:Generate a nonsense word.\nSee https://humorapi.com/docs/#Generate-Nonsense-Word for more., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "252", "title": "", "text": "category_name:Entertainment, tool_name:Memeados, api_name:Pet Pet, api_description:Generate My Pet Pet meme GIF, required_params: [{\"name\": \"image\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "253", "title": "", "text": "category_name:Entertainment, tool_name:Memeados, api_name:drakelikehate, api_description:Generate Drake Likes and Hates meme, required_params: [{\"name\": \"text2\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"text1\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "254", "title": "", "text": "category_name:Entertainment, tool_name:Memeados, api_name:Google Fake Autocomplete, api_description:Generate Fake google autocomplete, required_params: [{\"name\": \"text1\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"text3\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"text2\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "255", "title": "", "text": "category_name:Entertainment, tool_name:Memeados, api_name:Sponge bob, api_description:Generate Sponge Bob meme, required_params: [{\"name\": \"text\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "256", "title": "", "text": "category_name:Entertainment, tool_name:Jokes by API-Ninjas, api_name:/v1/jokes, api_description:API Ninjas Jokes API endpoint., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "257", "title": "", "text": "category_name:Social, tool_name:Chuck Norris, api_name:/jokes/search, api_description:Free text search, required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"The search term.\"}], optional_params: [], return_schema: {\"timestamp\": \"str\", \"status\": \"int\", \"error\": \"str\", \"message\": \"str\", \"violations\": {\"search.query\": \"str\"}}", "metadata": {}}
{"_id": "258", "title": "", "text": "category_name:Science, tool_name:manatee jokes, api_name:get by id, api_description:gets a specific joke by id, required_params: [{\"name\": \"id\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "259", "title": "", "text": "category_name:Science, tool_name:manatee jokes, api_name:find all, api_description:retrieves all available jokes, required_params: [], optional_params: [], return_schema: {\"id\": \"int\", \"setup\": \"str\", \"punchline\": \"str\", \"createdAt\": \"str\", \"updatedAt\": \"str\"}", "metadata": {}}
{"_id": "260", "title": "", "text": "category_name:Entertainment, tool_name:World of Jokes, api_name:Get Random Joke By Category, api_description:Get the random joke by category from a collection of most rated and most popular jokes., required_params: [{\"name\": \"category\", \"type\": \"STRING\", \"description\": \"Category of joke based on the jokes categories API\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "261", "title": "", "text": "category_name:Entertainment, tool_name:Programming Memes Images, api_name:v1/memes, api_description:Get Random Programming Memes, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "262", "title": "", "text": "category_name:Entertainment, tool_name:World of Jokes, api_name:Get Random Joke, api_description:Get the random joke from a collection of most rated and most popular jokes., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "263", "title": "", "text": "category_name:Business, tool_name:Realty in US, api_name:schools/list, api_description:List schools with options and filters, required_params: [{\"name\": \"state_code\", \"type\": \"STRING\", \"description\": \"Filter schools by state (You need to specify at least one of the following : state&#95;code|city|county|neighborhood|postal&#95;code|school&#95;district&#95;id)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "264", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Place Date-Time, api_description:Get this place's current date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ, required_params: [{\"name\": \"placeId\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "265", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Admin Division Details, api_description:Get the details for a specific administrative division, including location coordinates, population, and elevation above sea-level (if available)., required_params: [{\"name\": \"divisionId\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "266", "title": "", "text": "category_name:Business, tool_name:Realty in US, api_name:agents/get-recommendations, api_description:Get agent's recommendations, required_params: [{\"name\": \"advertiser_id\", \"type\": \"NUMBER\", \"description\": \"The value of advertiser_id field returned in .../agents/list endpoint\"}], optional_params: [], return_schema: {\"comment\": \"str\", \"id\": \"str\", \"email\": \"str\", \"display_name\": \"str\", \"photo\": \"str\", \"video\": \"NoneType\", \"source_id\": \"str\", \"last_updated\": \"str\", \"relation\": \"str\", \"year\": \"str\", \"started_timestamp\": \"str\", \"address\": \"NoneType\", \"location\": \"NoneType\"}", "metadata": {}}
{"_id": "267", "title": "", "text": "category_name:Business, tool_name:Realty in US, api_name:agents/get-listings, api_description:Get agent's listings, required_params: [{\"name\": \"fulfillment_id\", \"type\": \"NUMBER\", \"description\": \"The value of advertiser_id field returned in .../agents/list endpoint\"}, {\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of abbreviation field returned in .../agents/list endpoint\"}, {\"name\": \"agent_id\", \"type\": \"NUMBER\", \"description\": \"The value of ...member/id JSON object returned in .../agents/list endpoint\"}], optional_params: [], return_schema: \"{\\\"data\\\": {\\\"forSale\\\": {\\\"total\\\": \\\"int\\\", \\\"count\\\": \\\"int\\\", \\\"results\\\": [{\\\"listing_id\\\": \\\"str\\\", \\\"property_id\\\": \\\"str\\\", \\\"permalink\\\": \\\"str\\\", \\\"status\\\": \\\"str\\\", \\\"list_price\\\": \\\"int\\\", \\\"list_date\\\": \\\"str\\\", \\\"other_listings\\\": {\\\"rdc\\\": [{\\\"listing_id\\\": \\\"str\\\", \\\"status\\\": \\\"str\\\", \\\"_list_length\\\": 2}]}, \\\"open_houses\\\": [{\\\"start_date\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"advertisers\\\": [{\\\"fulfillment_id\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"flags\\\": {\\\"is_contingent\\\": \\\"NoneType\\\", \\\"is_pending\\\": \\\"NoneType\\\"}, \\\"primary_photo\\\": {\\\"href\\\": \\\"str\\\"}, \\\"description\\\": {\\\"type\\\": \\\"str\\\", \\\"sold_date\\\": \\\"NoneType\\\", \\\"sold_price\\\": \\\"NoneType\\\", \\\"baths\\\": \\\"int\\\", \\\"beds\\\": \\\"int\\\", \\\"sqft\\\": \\\"int\\\", \\\"lot_sqft\\\": \\\"int\\\"}, \\\"source\\\": {\\\"agents\\\": [{\\\"id\\\": \\\"str\\\", \\\"agent_id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"_list_length\\\": 1}]}, \\\"location\\\": {\\\"address\\\": {\\\"line\\\": \\\"str\\\", \\\"city\\\": \\\"str\\\", \\\"state_code\\\": \\\"str\\\", \\\"state\\\": \\\"str\\\", \\\"postal_code\\\": \\\"str\\\", \\\"country\\\": \\\"str\\\", \\\"coordinate\\\": {\\\"lat\\\": \\\"float\\\", \\\"lon\\\": \\\"float\\\"}}}, \\\"_list_length\\\": 37}]}, \\\"forRent\\\": {\\\"total\\\": \\\"int\\\", \\\"count\\\": \\\"int\\\", \\\"results\\\": \\\"e\"", "metadata": {}}
{"_id": "268", "title": "", "text": "category_name:Finance, tool_name:Investing - Cryptocurrency Markets, api_name:coins/search, api_description:Search for available cryptocurrencies relating to a word, name, etc..., required_params: [{\"name\": \"string\", \"type\": \"STRING\", \"description\": \"A word or name of any currencies\"}], optional_params: [], return_schema: {\"data\": {\"pairs_attr\": [{\"pair_ID\": \"int\", \"search_main_text\": \"str\", \"search_main_subtext\": \"str\", \"search_main_longtext\": \"str\", \"exchange_flag_ci\": \"int\", \"is_in_watchlist\": \"bool\", \"_list_length\": 26}]}}", "metadata": {}}
{"_id": "269", "title": "", "text": "category_name:Finance, tool_name:Investing - Cryptocurrency Markets, api_name:currencies/list, api_description:List all available currencies, required_params: [], optional_params: [], return_schema: {\"data\": [\"list of list with length 1\"]}", "metadata": {}}
{"_id": "270", "title": "", "text": "category_name:Financial, tool_name:CurrencyAPI.net, api_name:Convert, api_description:Convert a custom amount value from one currency to another, required_params: [{\"name\": \"to\", \"type\": \"STRING\", \"description\": \"Currency code of the currency you want to convert to. Eg, USD if you want to convert GBP to USD\"}, {\"name\": \"amount\", \"type\": \"STRING\", \"description\": \"The value you want to convert. Eg 10.99 or 15\"}, {\"name\": \"from\", \"type\": \"STRING\", \"description\": \"Currency code of the currency you want to convert from. Eg, GBP if you want to convert GBP to USD\"}], optional_params: [], return_schema: {\"valid\": \"bool\", \"error\": {\"code\": \"int\", \"message\": \"str\"}}", "metadata": {}}
{"_id": "271", "title": "", "text": "category_name:Financial, tool_name:CurrencyAPI.net, api_name:History, api_description:Display the currency conversions historical rates for a particular day, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"Display the single date you wish to get the historical data from. Eg 2010-12-25\"}, {\"name\": \"base\", \"type\": \"STRING\", \"description\": \"The currency code you wish to get the historical rates of. Eg, USD\"}], optional_params: [], return_schema: {\"valid\": \"bool\", \"error\": {\"code\": \"int\", \"message\": \"str\"}}", "metadata": {}}
{"_id": "272", "title": "", "text": "category_name:Finance, tool_name:Investing - Cryptocurrency Markets, api_name:currencies/get-rate, api_description:Get exchange rate between two different currencies, required_params: [{\"name\": \"fromCurrency\", \"type\": \"NUMBER\", \"description\": \"Value of currency&#95;ID field returned in currencies/list endpoint\"}, {\"name\": \"toCurrency\", \"type\": \"NUMBER\", \"description\": \"Value of currency&#95;ID field returned in currencies/list endpoint\"}], optional_params: [], return_schema: {\"data\": [\"list of list with length 1\"]}", "metadata": {}}
{"_id": "273", "title": "", "text": "category_name:Financial, tool_name:CurrencyAPI.net, api_name:Timeframe, api_description:Display a currency conversion's historical rates within a given timeframe, required_params: [{\"name\": \"end_date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"Display the start date you wish to get the historical data from. Eg 2010-12-29\"}, {\"name\": \"base\", \"type\": \"STRING\", \"description\": \"The currency code you want to get the historical data of. Eg, USD\"}, {\"name\": \"start_date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"Display the start date you wish to get the historical data from. Eg 2010-12-25\"}], optional_params: [], return_schema: {\"valid\": \"bool\", \"error\": {\"code\": \"int\", \"message\": \"str\"}}", "metadata": {}}
{"_id": "274", "title": "", "text": "category_name:Gaming, tool_name:CheapShark - Game Deals, api_name:List of Deals, api_description:Get a paged list of deals matching any number of criteria, all the filtering parameters are optional.\n\nThe deal object is what drives most of what you see on the site. They are price + metadata properties for games for a given store. All dealID’s are encoded on the server. On your website/app, you will use the redirect page to link users to a specific deal:\n\n> https://www.cheapshark.com/redirect?dealID={id}\n\n**Important Note**: The redirect page is not an API endpoint and is not designed for automated access. It is purely a way to link your end users to deals.\n\nThe deal rating property provides a quick way to compare how 'good' a deal is. It is normalized on a scale from 0 to 10., required_params: [], optional_params: [], return_schema: {\"internalName\": \"str\", \"title\": \"str\", \"metacriticLink\": \"str\", \"dealID\": \"str\", \"storeID\": \"str\", \"gameID\": \"str\", \"salePrice\": \"str\", \"normalPrice\": \"str\", \"isOnSale\": \"str\", \"savings\": \"str\", \"metacriticScore\": \"str\", \"steamRatingText\": \"str\", \"steamRatingPercent\": \"str\", \"steamRatingCount\": \"str\", \"steamAppID\": \"str\", \"releaseDate\": \"int\", \"lastChange\": \"int\", \"dealRating\": \"str\", \"thumb\": \"str\"}", "metadata": {}}
{"_id": "275", "title": "", "text": "category_name:Entertainment, tool_name:Hearthstone, api_name:Cards by Faction, api_description:Returns all the cards of a certain faction. Example values: Horde, Neutral., required_params: [{\"name\": \"faction\", \"type\": \"STRING\", \"description\": \"Card faction.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "276", "title": "", "text": "category_name:Gaming, tool_name:CheapShark - Game Deals, api_name:List of Games, api_description:Get a list of games that contain a given title or matches steamAppID. Response includes the cheapest current deal for each game., required_params: [], optional_params: [], return_schema: {\"gameID\": \"str\", \"steamAppID\": \"NoneType\", \"cheapest\": \"str\", \"cheapestDealID\": \"str\", \"external\": \"str\", \"internalName\": \"str\", \"thumb\": \"str\"}", "metadata": {}}
{"_id": "277", "title": "", "text": "category_name:Entertainment, tool_name:Hearthstone, api_name:Card Set, api_description:Returns all cards in a set. Example values: Blackrock Mountain, Classic., required_params: [{\"name\": \"set\", \"type\": \"STRING\", \"description\": \"Card set.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "278", "title": "", "text": "category_name:Data, tool_name:Diablo4 Smartable, api_name:GetNewsletters, api_description:Get Diablo 4 newsletters., required_params: [], optional_params: [], return_schema: {\"title\": \"str\", \"path\": \"str\", \"page\": \"int\", \"value\": \"empty list\", \"nextPage\": \"NoneType\"}", "metadata": {}}
{"_id": "279", "title": "", "text": "category_name:Gaming, tool_name:World of Tanks Stats, api_name:Get Stats, api_description:Get WN8, WN7, battles, victories, defeats, kills, draws, avereageTier, tanksSpotted, battlesSurvived, required_params: [{\"name\": \"name\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"name\": \"str\", \"account_id\": \"int\", \"battles\": {\"total\": \"str\", \"last24h\": \"str\", \"last7d\": \"str\", \"last30d\": \"str\"}, \"averageTier\": {\"total\": \"str\", \"last24h\": \"str\", \"last7d\": \"str\", \"last30d\": \"str\"}, \"victories\": {\"total\": \"str\", \"last24h\": \"str\", \"last7d\": \"str\", \"last30d\": \"str\"}, \"defeats\": {\"total\": \"str\", \"last24h\": \"str\", \"last7d\": \"str\", \"last30d\": \"str\"}, \"draws\": {\"total\": \"str\", \"last24h\": \"str\", \"last7d\": \"str\", \"last30d\": \"str\"}, \"battlesSurvived\": {\"total\": \"str\", \"last24h\": \"str\", \"last7d\": \"str\", \"last30d\": \"str\"}, \"kills\": {\"total\": \"str\", \"last24h\": \"str\", \"last7d\": \"str\", \"last30d\": \"str\"}, \"tanksSpotted\": {\"total\": \"str\", \"last24h\": \"str\", \"last7d\": \"str\", \"last30d\": \"str\"}, \"wn7\": {\"total\": \"str\", \"last24h\": \"str\", \"last7d\": \"str\", \"last30d\": \"str\"}, \"wn8\": {\"total\": \"str\", \"last24h\": \"str\", \"last7d\": \"str\", \"last30d\": \"str\"}}", "metadata": {}}
{"_id": "280", "title": "", "text": "category_name:Entertainment, tool_name:Hearthstone, api_name:Card Backs, api_description:Returns a list of all the card backs., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "281", "title": "", "text": "category_name:Data, tool_name:Diablo4 Smartable, api_name:GetTopics, api_description:Get Diablo 4 topics., required_params: [], optional_params: [], return_schema: {\"value\": [{\"name\": \"str\", \"shortname\": \"str\", \"id\": \"str\", \"services\": [{\"name\": \"str\", \"endpoint\": \"str\", \"_list_length\": 5}], \"_list_length\": 4}]}", "metadata": {}}
{"_id": "282", "title": "", "text": "category_name:Entertainment, tool_name:Hearthstone, api_name:Cards by Type, api_description:Returns all the cards of a certain type. Example values: Spell, Weapon., required_params: [{\"name\": \"type\", \"type\": \"STRING\", \"description\": \"Card type.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "283", "title": "", "text": "category_name:Finance, tool_name:Mineable coins, api_name:Get coins' data, api_description:With this endpoint you can get a collection of all coins.\n\n**API alterations**\n- **Get one coin:** https://api.minerstat.com/v2/coins?list=BTC\n- **Get list of coins:** https://api.minerstat.com/v2/coins?list=BTC,BCH,BSV\n- **Get all coins from one algorithm:** https://api.minerstat.com/v2/coins?algo=SHA-256\n- **Get all coins from multiple algorithms:** https://api.minerstat.com/v2/coins?algo=SHA-256,Scrypt,Ethash, required_params: [], optional_params: [], return_schema: {\"id\": \"str\", \"coin\": \"str\", \"name\": \"str\", \"type\": \"str\", \"algorithm\": \"str\", \"network_hashrate\": \"int\", \"difficulty\": \"int\", \"reward\": \"float\", \"reward_unit\": \"str\", \"reward_block\": \"int\", \"price\": \"float\", \"volume\": \"float\", \"updated\": \"int\"}", "metadata": {}}
{"_id": "284", "title": "", "text": "category_name:Entertainment, tool_name:Coin Flip, api_name:Heads / Tails, api_description:Returns an outcome. Either heads or tails, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "285", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get coin modifiers, api_description:Get the modifiers of a coin's supply and their balance.\nThis endpoint requires the **ultra** plan or higher., required_params: [{\"name\": \"uuid\", \"type\": \"string\", \"description\": \"UUID of the coin you want to request the modifiers for\"}], optional_params: [], return_schema: {\"status\": \"str\", \"data\": {\"total\": \"int\", \"modifiers\": \"empty list\"}}", "metadata": {}}
{"_id": "286", "title": "", "text": "category_name:Finance, tool_name:BraveNewCoin, api_name:AssetById, api_description:Retrieves the details of an individual asset. Supply the unique identifier (UUID) of the asset.\n\nThe full list of all asset details can be obtained from the Asset endpoint., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The unique resource identifier (UUID) of an asset e.g.  BTC = f1ff77b6-3ab4-4719-9ded-2fc7e71cff1f\"}], optional_params: [], return_schema: {\"status\": \"str\", \"timestamp\": \"str\", \"message\": \"str\"}", "metadata": {}}
{"_id": "287", "title": "", "text": "category_name:Finance, tool_name:BraveNewCoin, api_name:AssetTicker, api_description:This free endpoint will return the latest details for an asset refreshed every 5 minutes with global USD spot price, 24 hour volume and supply.  The optional percentChange parameter provides the 1, 7 and 30 day percentage movements as additional payload.   \n\nSupply the unique identifier (UUID) for an asset.  The UUID for any asset may be found from the Assets endpoint in Lookups.\n\nA security token is required for the Authorization Header. Obtain a token valid for 24 hours from the GetToken endpoint., required_params: [{\"name\": \"assetId\", \"type\": \"STRING\", \"description\": \"UUID. The unique resource identifier of an asset e.g.  BTC = f1ff77b6-3ab4-4719-9ded-2fc7e71cff1f\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "288", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get global stats, api_description:These global statistics tell about the data available on coinranking., required_params: [], optional_params: [], return_schema: {\"status\": \"str\", \"data\": {\"referenceCurrencyRate\": \"int\", \"totalCoins\": \"int\", \"totalMarkets\": \"int\", \"totalExchanges\": \"int\", \"totalMarketCap\": \"str\", \"total24hVolume\": \"str\", \"btcDominance\": \"float\", \"bestCoins\": [{\"uuid\": \"str\", \"symbol\": \"str\", \"name\": \"str\", \"iconUrl\": \"str\", \"coinrankingUrl\": \"str\", \"_list_length\": 3}], \"newestCoins\": [{\"uuid\": \"str\", \"symbol\": \"str\", \"name\": \"str\", \"iconUrl\": \"str\", \"coinrankingUrl\": \"str\", \"_list_length\": 3}]}}", "metadata": {}}
{"_id": "289", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get exchange coins, api_description:Find coins listed on a specific exchange.\nThis endpoint requires the **ultra** plan or higher., required_params: [{\"name\": \"uuid\", \"type\": \"string\", \"description\": \"UUID of the exchange you want to request\"}], optional_params: [], return_schema: {\"status\": \"str\", \"data\": {\"stats\": {\"total\": \"int\"}, \"coins\": [{\"coinrankingUrl\": \"str\", \"rank\": \"int\", \"uuid\": \"str\", \"symbol\": \"str\", \"name\": \"str\", \"iconUrl\": \"str\", \"numberOfMarkets\": \"int\", \"price\": \"str\", \"btcPrice\": \"str\", \"24hVolume\": \"str\", \"_list_length\": 50}]}}", "metadata": {}}
{"_id": "290", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get coin supply, api_description:Get the maximum, total, and circulating supply of a coin., required_params: [{\"name\": \"uuid\", \"type\": \"string\", \"description\": \"UUID of the coin you want to request the supply for\"}], optional_params: [], return_schema: {\"status\": \"str\", \"data\": {\"supply\": {\"maxAmount\": \"str\", \"totalSyncedAt\": \"str\", \"totalAmount\": \"str\", \"circulatingSyncedAt\": \"str\", \"circulatingAmount\": \"str\", \"modifierCount\": \"int\"}}}", "metadata": {}}
{"_id": "291", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get coin markets, api_description:Find markets on different exchanges that trade a specific coin.\nThis endpoint requires the **ultra** plan or higher., required_params: [{\"name\": \"uuid\", \"type\": \"string\", \"description\": \"UUID of the coin you want to request markets for\"}], optional_params: [], return_schema: {\"status\": \"str\", \"data\": {\"stats\": {\"24hVolume\": \"str\", \"total\": \"int\"}, \"markets\": [{\"uuid\": \"str\", \"rank\": \"int\", \"base\": {\"uuid\": \"str\", \"symbol\": \"str\"}, \"quote\": {\"uuid\": \"str\", \"symbol\": \"str\"}, \"exchange\": {\"name\": \"str\", \"uuid\": \"str\", \"iconUrl\": \"str\"}, \"marketShare\": \"str\", \"btcPrice\": \"str\", \"recommended\": \"bool\", \"filters\": \"empty list\", \"price\": \"str\", \"24hVolume\": \"str\", \"_list_length\": 50}]}}", "metadata": {}}
{"_id": "292", "title": "", "text": "category_name:Finance, tool_name:Coinmill Currency, api_name:Coinmill, api_description:, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "293", "title": "", "text": "category_name:Communication, tool_name:Mojitok Sticker Store SDK, api_name:/stickers/trending, api_description:API that provides information on creators and stickerpacks of 16 popular stickers, required_params: [], optional_params: [], return_schema: {\"data\": [{\"id\": \"str\", \"images\": [{\"spec\": \"str\", \"url\": \"str\", \"_list_length\": 2}], \"packageId\": \"str\", \"stickerPackId\": \"str\", \"stickerPack\": {\"id\": \"str\", \"description\": [{\"content\": \"str\", \"language\": \"str\", \"_list_length\": 1}], \"name\": [{\"content\": \"str\", \"language\": \"str\", \"_list_length\": 1}], \"thumbnailUrl\": \"str\", \"thumbnails\": [{\"spec\": \"str\", \"url\": \"str\", \"_list_length\": 1}]}, \"package\": {\"id\": \"str\", \"description\": [{\"content\": \"str\", \"language\": \"str\", \"_list_length\": 1}], \"name\": [{\"content\": \"str\", \"language\": \"str\", \"_list_length\": 1}], \"thumbnailUrl\": \"str\", \"thumbnails\": [{\"spec\": \"str\", \"url\": \"str\", \"_list_length\": 1}]}, \"_list_length\": 1}], \"meta\": {}}", "metadata": {}}
{"_id": "294", "title": "", "text": "category_name:Media, tool_name:Giphy, api_name:STICKER Roulette, api_description:Returns a spotaneously selected sticker from Giphy's sticker collection. Optionally limit scope of result to a specific tag. Like the GIF random endpoint, Punctuation will be stripped and ignored. Use a hyphen for phrases. Example oops, birthday or thank-you. Search terms should be URL encoded., required_params: [{\"name\": \"tag\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"data\": \"empty list\", \"meta\": {\"status\": \"int\", \"msg\": \"str\", \"response_id\": \"str\"}}", "metadata": {}}
{"_id": "295", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/alerts/active/area/{area}, api_description:A list of active alerts by area. The ATOM format returns items in CAP-ATOM., required_params: [{\"name\": \"area\", \"type\": \"STRING\", \"description\": \"area: a valid area, see list in counts endpoint\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 4}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "296", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/products/types/{typeId}/locations/{locationId}, api_description:A product for a location that has issued a product for a specific type.  Example: /products/types/AFD/locations/EAX, required_params: [{\"name\": \"locationId\", \"type\": \"STRING\", \"description\": \"locationId: an id of a valid location (list forthcoming)\"}, {\"name\": \"typeId\", \"type\": \"STRING\", \"description\": \"typeId: an id of a valid product type \"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 2}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "297", "title": "", "text": "category_name:Weather, tool_name:History, api_name:dailyWeatherZip, api_description:This endpoint returns the historical weather for a given day for a given location (Country and zip code), required_params: [{\"name\": \"country\", \"type\": \"STRING\", \"description\": \"The ISO Alpha-2 code of the country\"}, {\"name\": \"zip-code\", \"type\": \"STRING\", \"description\": \"The postal code for the requested country\"}, {\"name\": \"parameters\", \"type\": \"STRING\", \"description\": \"Define the parameter, you wish to request. Allowed options are \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"air_quality\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"anomaly\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"astronomy\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"weather\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"signal\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"pollen\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"occurrence\\\\\\\\\\\\\\\"\"}, {\"name\": \"day\", \"type\": \"STRING\", \"description\": \"The requested day in the format \\\\\\\\\\\\\\\"YYYYmmdd\\\\\\\\\\\\\\\"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "298", "title": "", "text": "category_name:Weather, tool_name:History, api_name:hourlyWeatherZip, api_description:This endpoint returns the historical weather on hourly level for a given day for a given location (country and zip-code), required_params: [{\"name\": \"parameters\", \"type\": \"STRING\", \"description\": \"Define the parameter, you wish to request. Allowed options are \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"air_quality\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"anomaly\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"astronomy\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"weather\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"signal\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"pollen\\\\\\\\\\\\\\\"\"}, {\"name\": \"zip-code\", \"type\": \"STRING\", \"description\": \"The postal code for the requested country\"}, {\"name\": \"day\", \"type\": \"STRING\", \"description\": \"The requested day in the format \\\\\\\\\\\\\\\"YYYYmmdd\\\\\\\\\\\\\\\"\"}, {\"name\": \"country\", \"type\": \"STRING\", \"description\": \"The ISO Alpha-2 code of the country\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "299", "title": "", "text": "category_name:Sports, tool_name:Live Sports Odds, api_name:/v4/sports, api_description:Returns a list of available sports and tournaments. Use the `sports_key` in requests for /odds and /scores endpoints., required_params: [], optional_params: [], return_schema: {\"key\": \"str\", \"group\": \"str\", \"title\": \"str\", \"description\": \"str\", \"active\": \"bool\", \"has_outrights\": \"bool\"}", "metadata": {}}
{"_id": "300", "title": "", "text": "category_name:Data, tool_name:Web Search, api_name:imageSearch, api_description:Get relevant images for a given query., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"The user's search query string.\"}, {\"name\": \"pageNumber\", \"type\": \"NUMBER\", \"description\": \"The page to view.\"}, {\"name\": \"pageSize\", \"type\": \"NUMBER\", \"description\": \"The number of items per page. The maximum value is 50.\"}, {\"name\": \"autoCorrect\", \"type\": \"BOOLEAN\", \"description\": \"Automatically correct spelling.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "301", "title": "", "text": "category_name:Sports, tool_name:Live Sports Odds, api_name:/v4/sports/{sport}/scores, api_description:Returns list of live and upcoming games for a given sport, and optionally recently completed games. Live and completed games will contain scores. **Currently in beta** and only available for selected sports. For more info, see the [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html), required_params: [{\"name\": \"sport\", \"type\": \"STRING\", \"description\": \"sport key for which to return games and odds\"}], optional_params: [], return_schema: {\"id\": \"str\", \"sport_key\": \"str\", \"sport_title\": \"str\", \"commence_time\": \"str\", \"completed\": \"bool\", \"home_team\": \"str\", \"away_team\": \"str\", \"scores\": \"NoneType\", \"last_update\": \"NoneType\"}", "metadata": {}}
{"_id": "302", "title": "", "text": "category_name:Data, tool_name:Web Search, api_name:spellCheck, api_description:Check spelling., required_params: [{\"name\": \"text\", \"type\": \"STRING\", \"description\": \"The text string to check for spelling errors.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "303", "title": "", "text": "category_name:Weather, tool_name:WeatherAPI.com, api_name:Future Weather API, api_description:Future weather API method returns weather in a 3 hourly interval in future for a date between 14 days and 300 days from today in the future., required_params: [{\"name\": \"dt\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"'dt' should be between 14 days and 300 days from today in the future in yyyy-MM-dd format (i.e. dt=2023-01-01)\"}, {\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Query parameter based on which data is sent back. It could be following:\\n\\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\\ncity name e.g.: q=Paris\\nUS zip e.g.: q=10001\\nUK postcode e.g: q=SW1\\nCanada postal code e.g: q=G2J\\nmetar:<metar code> e.g: q=metar:EGLL\\niata:<3 digit airport code> e.g: q=iata:DXB\\nauto:ip IP lookup e.g: q=auto:ip\\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "304", "title": "", "text": "category_name:Sports, tool_name:Free NBA, api_name:Get a Specific Team, api_description:This endpoint retrieves a specific team, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The ID of the team\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "305", "title": "", "text": "category_name:Sports, tool_name:Free NBA, api_name:Get Specific Player, api_description:This endpoint retrieves a specific player., required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"The ID of the player to retrieve\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "306", "title": "", "text": "category_name:Sports, tool_name:Free NBA, api_name:Get All Games, api_description:This endpoint retrieves all games.  Seasons are represented by the year they began. For example, 2018 represents season 2018-2019., required_params: [], optional_params: [], return_schema: {\"data\": [{\"id\": \"int\", \"date\": \"str\", \"home_team\": {\"id\": \"int\", \"abbreviation\": \"str\", \"city\": \"str\", \"conference\": \"str\", \"division\": \"str\", \"full_name\": \"str\", \"name\": \"str\"}, \"home_team_score\": \"int\", \"period\": \"int\", \"postseason\": \"bool\", \"season\": \"int\", \"status\": \"str\", \"time\": \"str\", \"visitor_team\": {\"id\": \"int\", \"abbreviation\": \"str\", \"city\": \"str\", \"conference\": \"str\", \"division\": \"str\", \"full_name\": \"str\", \"name\": \"str\"}, \"visitor_team_score\": \"int\", \"_list_length\": 25}], \"meta\": {\"total_pages\": \"int\", \"current_page\": \"int\", \"next_page\": \"int\", \"per_page\": \"int\", \"total_count\": \"int\"}}", "metadata": {}}
{"_id": "307", "title": "", "text": "category_name:Data, tool_name:Web Search, api_name:webSearch, api_description:Get relevant web pages for a given query., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"The user's search query string.\"}, {\"name\": \"autoCorrect\", \"type\": \"BOOLEAN\", \"description\": \"Automatically correct spelling.\"}, {\"name\": \"pageNumber\", \"type\": \"NUMBER\", \"description\": \"The page to view.\"}, {\"name\": \"pageSize\", \"type\": \"NUMBER\", \"description\": \"The number of items per page. The maximum value is 50.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "308", "title": "", "text": "category_name:Weather, tool_name:WeatherAPI.com, api_name:Forecast Weather API, api_description:Forecast weather API method returns upto next 14 day weather forecast and weather alert as json. It contains astronomy data, day weather forecast and hourly interval weather information for a given city., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Query parameter based on which data is sent back. It could be following:\\n\\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\\ncity name e.g.: q=Paris\\nUS zip e.g.: q=10001\\nUK postcode e.g: q=SW1\\nCanada postal code e.g: q=G2J\\nmetar:<metar code> e.g: q=metar:EGLL\\niata:<3 digit airport code> e.g: q=iata:DXB\\nauto:ip IP lookup e.g: q=auto:ip\\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1\"}], optional_params: [], return_schema: \"{\\\"location\\\": {\\\"name\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"country\\\": \\\"str\\\", \\\"lat\\\": \\\"float\\\", \\\"lon\\\": \\\"float\\\", \\\"tz_id\\\": \\\"str\\\", \\\"localtime_epoch\\\": \\\"int\\\", \\\"localtime\\\": \\\"str\\\"}, \\\"current\\\": {\\\"last_updated_epoch\\\": \\\"int\\\", \\\"last_updated\\\": \\\"str\\\", \\\"temp_c\\\": \\\"float\\\", \\\"temp_f\\\": \\\"float\\\", \\\"is_day\\\": \\\"int\\\", \\\"condition\\\": {\\\"text\\\": \\\"str\\\", \\\"icon\\\": \\\"str\\\", \\\"code\\\": \\\"int\\\"}, \\\"wind_mph\\\": \\\"float\\\", \\\"wind_kph\\\": \\\"float\\\", \\\"wind_degree\\\": \\\"int\\\", \\\"wind_dir\\\": \\\"str\\\", \\\"pressure_mb\\\": \\\"float\\\", \\\"pressure_in\\\": \\\"float\\\", \\\"precip_mm\\\": \\\"float\\\", \\\"precip_in\\\": \\\"float\\\", \\\"humidity\\\": \\\"int\\\", \\\"cloud\\\": \\\"int\\\", \\\"feelslike_c\\\": \\\"float\\\", \\\"feelslike_f\\\": \\\"float\\\", \\\"vis_km\\\": \\\"float\\\", \\\"vis_miles\\\": \\\"float\\\", \\\"uv\\\": \\\"float\\\", \\\"gust_mph\\\": \\\"float\\\", \\\"gust_kph\\\": \\\"float\\\"}, \\\"forecast\\\": {\\\"forecastday\\\": [{\\\"date\\\": \\\"str\\\", \\\"date_epoch\\\": \\\"int\\\", \\\"day\\\": {\\\"maxtemp_c\\\": \\\"float\\\", \\\"maxtemp_f\\\": \\\"float\\\", \\\"mintemp_c\\\": \\\"float\\\", \\\"mintemp_f\\\": \\\"float\\\", \\\"avgtemp_c\\\": \\\"float\\\", \\\"avgtemp_f\\\": \\\"float\\\", \\\"maxwind_mph\\\": \\\"float\\\", \\\"maxwind_kph\\\": \\\"float\\\", \\\"totalprecip_mm\\\": \\\"float\\\", \\\"totalprecip_in\\\": \\\"float\"", "metadata": {}}
{"_id": "309", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Places Near Location, api_description:Get places near the given location, filtering by optional criteria., required_params: [{\"name\": \"radius\", \"type\": \"STRING\", \"description\": \"The location radius within which to find places\"}, {\"name\": \"locationid\", \"type\": \"STRING\", \"description\": \"Only cities near this location. Latitude/longitude in ISO-6709 format: \\u00b1DD.DDDD\\u00b1DDD.DDDD\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "310", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:City Time, api_description:Get the city current time in ISO-8601 format: HHmmss.SSSZ, required_params: [{\"name\": \"cityid\", \"type\": \"STRING\", \"description\": \"The city id (either native id or wikiDataId)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "311", "title": "", "text": "category_name:Finance, tool_name:BraveNewCoin, api_name:Asset, api_description:List the UUID and details for all assets or provide an optional query parameter to search.\nAssets may have a status . Active assets will be available at both AssetTicker and DailyOHLCV endpoints. Inactive assets are not available for AssetTickers but may provide some historical OHLCV data if available., required_params: [], optional_params: [], return_schema: {}", "metadata": {}}
{"_id": "312", "title": "", "text": "category_name:Finance, tool_name:BraveNewCoin, api_name:MarketById, api_description:Retrieves the details of an individual market. Supply the unique identifier (UUID) of the market.\n\nThe full list of all market UUIDs can be obtained from the Market endpoint., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"UUID. The unique resource identifier of a market e.g.  BTC/USD = 6ea0d2ef-6dd0-4adb-ad32-f7f3db58ccbe\"}], optional_params: [], return_schema: {\"status\": \"str\", \"timestamp\": \"str\", \"message\": \"str\"}", "metadata": {}}
{"_id": "313", "title": "", "text": "category_name:Data, tool_name:Web Search, api_name:autoComplete, api_description:Suggest as-you-type completion., required_params: [{\"name\": \"text\", \"type\": \"STRING\", \"description\": \"The prefix to complete\"}], optional_params: [], return_schema: {}", "metadata": {}}
{"_id": "314", "title": "", "text": "category_name:Weather, tool_name:WeatherAPI.com, api_name:History Weather API, api_description:History weather API method returns historical weather for a date on or after 1st Jan, 2010 (depending upon subscription level) as json., required_params: [{\"name\": \"dt\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"For history API 'dt' should be on or after 1st Jan, 2010 in yyyy-MM-dd format\"}, {\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Query parameter based on which data is sent back. It could be following:\\n\\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\\ncity name e.g.: q=Paris\\nUS zip e.g.: q=10001\\nUK postcode e.g: q=SW1\\nCanada postal code e.g: q=G2J\\nmetar:<metar code> e.g: q=metar:EGLL\\niata:<3 digit airport code> e.g: q=iata:DXB\\nauto:ip IP lookup e.g: q=auto:ip\\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1\"}], optional_params: [], return_schema: {\"error\": {\"code\": \"int\", \"message\": \"str\"}}", "metadata": {}}
{"_id": "315", "title": "", "text": "category_name:Data, tool_name:Local Business Data, api_name:Business Details, api_description:Get full business details including emails and social contacts. Supports batching of up to 20 Business Ids., required_params: [{\"name\": \"business_id\", \"type\": \"STRING\", \"description\": \"Unique Business Id. Batching of up to 20 Business Ids are supported in a single request using a comma separated list (e.g. business_id=id1,id2).\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "316", "title": "", "text": "category_name:Data, tool_name:Local Business Data, api_name:Search, api_description:Search local businesses on Google Maps., required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"Search query / keyword.\\n\\n**e.g.** `Plumbers near New-York, USA`\\n**e.g.** `Bars in 94102, USA`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "317", "title": "", "text": "category_name:eCommerce, tool_name:Real-Time Product Search, api_name:Product Reviews, api_description:Get all product reviews. Infinite pagination/scrolling is supported using the *limit* and *offset* parameters., required_params: [{\"name\": \"product_id\", \"type\": \"STRING\", \"description\": \"Product id of the product for which to fetch reviews.\"}], optional_params: [], return_schema: {\"status\": \"str\", \"request_id\": \"str\", \"error\": {\"message\": \"str\", \"code\": \"int\"}}", "metadata": {}}
{"_id": "318", "title": "", "text": "category_name:Sports, tool_name:Football Prediction, api_name:Predictions, api_description:This endpoint returns a list of the football predictions scheduled to start in the next 48hours. URL parameters can be specified to show past predictions or to filter by federation and prediction market., required_params: [], optional_params: [], return_schema: {\"data\": [{\"home_team\": \"str\", \"away_team\": \"str\", \"id\": \"int\", \"market\": \"str\", \"competition_name\": \"str\", \"prediction\": \"str\", \"competition_cluster\": \"str\", \"status\": \"str\", \"federation\": \"str\", \"is_expired\": \"bool\", \"season\": \"str\", \"result\": \"str\", \"start_date\": \"str\", \"last_update_at\": \"str\", \"odds\": {\"1\": \"float\", \"X\": \"float\", \"2\": \"float\", \"1X\": \"float\", \"X2\": \"float\", \"12\": \"float\"}, \"_list_length\": 138}]}", "metadata": {}}
{"_id": "319", "title": "", "text": "category_name:Sports, tool_name:Football Prediction, api_name:Performance stats for past predictions, api_description:Returns information about the accuracy of past predictions. (in the last day, 7 days, 14 days and 30 days) Can be additionally filtered by federation and market. If no market filter is provided it defaults to classic, required_params: [], optional_params: [], return_schema: {\"data\": {\"market\": \"str\", \"accuracy\": {\"last_30_days\": \"float\", \"yesterday\": \"float\", \"last_7_days\": \"float\", \"last_14_days\": \"float\"}, \"details\": {\"last_30_days\": {\"total\": \"int\", \"won\": \"int\", \"lost\": \"int\", \"postponed\": \"int\", \"pending\": \"int\"}, \"yesterday\": {\"total\": \"int\", \"won\": \"int\", \"lost\": \"int\", \"postponed\": \"int\", \"pending\": \"int\"}, \"last_7_days\": {\"total\": \"int\", \"won\": \"int\", \"lost\": \"int\", \"postponed\": \"int\", \"pending\": \"int\"}, \"last_14_days\": {\"total\": \"int\", \"won\": \"int\", \"lost\": \"int\", \"postponed\": \"int\", \"pending\": \"int\"}}}}", "metadata": {}}
{"_id": "320", "title": "", "text": "category_name:Data, tool_name:Local Business Data, api_name:Business Reviews, api_description:Get all business reviews. Supports pagination, query and several sort options., required_params: [{\"name\": \"business_id\", \"type\": \"STRING\", \"description\": \"Unique Business Id of the business for which to get reviews.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "321", "title": "", "text": "category_name:Data, tool_name:Local Business Data, api_name:Business Photos, api_description:Get all business photos., required_params: [{\"name\": \"business_id\", \"type\": \"STRING\", \"description\": \"Unique Business Id of the business for which to get photos.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "322", "title": "", "text": "category_name:Data, tool_name:Local Business Data, api_name:Search Nearby, api_description:Search businesses near by specific geographic coordinates. To see it in action, right click on a specific point in the map on Google Maps and select \"Search nearby\", enter a query and search., required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"Search query / keyword.\\n\\n**e.g.** `Bars and pubs`\\n**e.g.** `Plumbers`\"}, {\"name\": \"lng\", \"type\": \"NUMBER\", \"description\": \"Longitude of the geographic coordinates to search near by.\"}, {\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"Latitude of the geographic coordinates to search near by.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "323", "title": "", "text": "category_name:Travel, tool_name:webcams.travel, api_name:/webcams/list/limit={limit},{offset}, api_description:This is a modifier. Returns the list of webcams sliced by {limit}. The optional offset is given by {offset}. Required: {limit}. The maximum value for {limit} is 50. {offset} defaults to 0. If limit is not given, then a default of limit=10 is applied., required_params: [{\"name\": \"limit\", \"type\": \"NUMBER\", \"description\": \"Maximum number of webcams in the result list.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "324", "title": "", "text": "category_name:Travel, tool_name:webcams.travel, api_name:/webcams/list/property={property}[,{property}[,...]], api_description:This is a modifier. Returns a list of webcams according to the listed {property}. Multiple {property} must be separated by comma. Required: at least one {property}. Possible values are \"editors\" (featured from the editors), \"hd\" (high resolution webcams), and \"live\" (webcams with a live stream)., required_params: [{\"name\": \"property\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "325", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Cities Near Location, api_description:Get cities near the given location, filtering by optional criteria., required_params: [{\"name\": \"locationid\", \"type\": \"STRING\", \"description\": \"Only cities near this location. Latitude/longitude in ISO-6709 format: \\u00b1DD.DDDD\\u00b1DDD.DDDD\"}, {\"name\": \"radius\", \"type\": \"STRING\", \"description\": \"The location radius within which to find cities\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "326", "title": "", "text": "category_name:eCommerce, tool_name:Real-Time Product Search, api_name:Search, api_description:Search for product offers - both free-form queries and GTIN/EAN are supported. Each page contains up to 30 product offers. Infinite pagination/scrolling is supported using the *page* parameter., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Free-form search query or a GTIN/EAN (e.g. *0194252014233*).\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "327", "title": "", "text": "category_name:eCommerce, tool_name:Real-Time Product Search, api_name:Product Offers, api_description:Get all offers available for a product., required_params: [{\"name\": \"product_id\", \"type\": \"STRING\", \"description\": \"Product id of the product for which to fetch offers.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "328", "title": "", "text": "category_name:Travel, tool_name:webcams.travel, api_name:/webcams/list/{modifier}[/{modifier}[/...]], api_description:Returns a list of webcams according to the applied {modifier}s. Initially, the list contains all webcams. The resulting list of webcams from applying a modifer will be used as input for the following modifier. modifiers are processed from left to right. With every applied modifier, the list of webcams will be narrowed down. Possible values for {modifier} are: \"webcam\" (initial list of webcams), \"nearby\" (list of webcams around a position), \"bbox\" (list of webcams in an area), \"category\" (list of webcams in a category), \"continent\" (list of webcams in a continent), \"country\" (list of webcams in a country), \"region\" (list of webcams in a region of a country), \"exclude\" (exclude webcams from a list of webcams), \"orderby\" (order the list of webcams), \"limit\" (slice the list of webcams). \"webcam\", if given, is always applied first. \"exclude\", \"orderby\", and \"limit\" are always applied (even if not explicitly given) in this order and always after \"webcam\", \"nearby\", \"bbox\", \"category\", \"continent\", \"country\", and \"region\" have been applied.  If none of \"webcam\", \"nearby\", \"bbox\", \"category\", \"continent\", \"country\", and \"region\" are applied, then all webcams are in the list before applying \"exclude\", \"orderby\", and \"limit\".  Please refer to the description of the various {modifier}s to learn more about their parameter and defaults.  A {modifier} may be applied only once. If a {modifier} is listed multiple times, it may only applied once., required_params: [{\"name\": \"modifier\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "329", "title": "", "text": "category_name:Data, tool_name:JSearch, api_name:Estimated Salary, api_description:Get estimated salaries for a jobs around a location, required_params: [], optional_params: [], return_schema: {\"status\": \"str\", \"request_id\": \"str\", \"parameters\": {\"job_title\": \"str\", \"location\": \"str\", \"radius\": \"int\"}, \"data\": [{\"location\": \"str\", \"job_title\": \"str\", \"publisher_name\": \"str\", \"publisher_link\": \"str\", \"min_salary\": \"int\", \"max_salary\": \"int\", \"median_salary\": \"int\", \"salary_period\": \"str\", \"salary_currency\": \"str\", \"_list_length\": 3}]}", "metadata": {}}
{"_id": "330", "title": "", "text": "category_name:Data, tool_name:JSearch, api_name:Search, api_description:Search for jobs posted on job sites across the web., required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"Free-form jobs search query. It is highly recommended to include job title and location as part of the query, see query examples below.\\n\\n**Query examples**\\n- *web development in chicago*\\n- *marketing manager in new york via linkedin*\\n- *developer in germany 60306*\"}], optional_params: [], return_schema: {\"status\": \"str\", \"request_id\": \"str\", \"error\": {\"message\": \"str\", \"code\": \"int\"}}", "metadata": {}}
{"_id": "331", "title": "", "text": "category_name:Location, tool_name:Referential, api_name:Country by iso code, api_description:Get country by 2 letter iso code localized to a given language, required_params: [{\"name\": \"iso_code\", \"type\": \"string\", \"description\": \"2 letter iso country code. \"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "332", "title": "", "text": "category_name:Location, tool_name:Referential, api_name:State, api_description:List the sub-regions/states/provinces/departments of the world's countries, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "333", "title": "", "text": "category_name:Translation, tool_name:Deep Translate, api_name:languages, api_description:You can discover the supported languages of this API by sending an HTTP request using a URL of the following format, required_params: [], optional_params: [], return_schema: {\"languages\": [{\"language\": \"str\", \"name\": \"str\", \"_list_length\": 121}]}", "metadata": {}}
{"_id": "334", "title": "", "text": "category_name:Education, tool_name:Quotes, api_name:quote, api_description:Get a random Quote, required_params: [], optional_params: [], return_schema: {\"quote\": \"str\", \"author\": \"str\"}", "metadata": {}}
{"_id": "335", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Billboard Global 200 (YEAR-END), api_description:Provide the YEAR-END Billboard Global 200 chart information\n\nIf `year` is not supplied, will default to last year., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "336", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Finland Songs, api_description:Provide the Finland Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "337", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Alternative Songs, api_description:Provide the Greatest of All Time Alternative Songs chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "338", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Get albums, api_description:Get one or more albums, required_params: [{\"name\": \"ids\", \"type\": \"STRING\", \"description\": \"Album IDs (you can use commas)\"}], optional_params: [], return_schema: \"{\\\"albums\\\": [{\\\"album_type\\\": \\\"str\\\", \\\"artists\\\": [{\\\"external_urls\\\": {\\\"spotify\\\": \\\"str\\\"}, \\\"id\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"copyrights\\\": [{\\\"text\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"_list_length\\\": 2}], \\\"external_ids\\\": {\\\"upc\\\": \\\"str\\\"}, \\\"external_urls\\\": {\\\"spotify\\\": \\\"str\\\"}, \\\"genres\\\": \\\"empty list\\\", \\\"id\\\": \\\"str\\\", \\\"images\\\": [{\\\"height\\\": \\\"int\\\", \\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"int\\\", \\\"_list_length\\\": 3}], \\\"is_playable\\\": \\\"bool\\\", \\\"label\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"popularity\\\": \\\"int\\\", \\\"release_date\\\": \\\"str\\\", \\\"release_date_precision\\\": \\\"str\\\", \\\"total_tracks\\\": \\\"int\\\", \\\"tracks\\\": {\\\"items\\\": [{\\\"artists\\\": [{\\\"external_urls\\\": {\\\"spotify\\\": \\\"str\\\"}, \\\"id\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"disc_number\\\": \\\"int\\\", \\\"duration_ms\\\": \\\"int\\\", \\\"explicit\\\": \\\"bool\\\", \\\"external_urls\\\": {\\\"spotify\\\": \\\"str\\\"}, \\\"id\\\": \\\"str\\\", \\\"is_local\\\": \\\"bool\\\", \\\"is_playable\\\": \\\"bool\\\", \\\"name\\\": \\\"str\\\", \\\"preview_url\\\": \\\"str\\\", \\\"track_number\\\": \\\"int\\\", \\\"type\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\", \\\"_list_length\\\": 10}], \\\"limit\\\": \\\"int\"", "metadata": {}}
{"_id": "339", "title": "", "text": "category_name:Entertainment, tool_name:SongMeanings, api_name:comments.get, api_description:Get comments from our database for a specific song., required_params: [{\"name\": \"artist_name\", \"type\": \"STRING\", \"description\": \"The artist name\"}, {\"name\": \"lyric_title\", \"type\": \"STRING\", \"description\": \"The song, track or lyric title\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "340", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Hot 100 Songs by Women, api_description:Provide the Greatest of All Time Hot 100 Songs by Women chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "341", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Germany Songs, api_description:Provide the Germany Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "342", "title": "", "text": "category_name:Entertainment, tool_name:SongMeanings, api_name:artists.search, api_description:Search the SongMeanings database for artist names and aliases., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Query string\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "343", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Get Episode, api_description:Get Episode, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Episode ID\"}], optional_params: [], return_schema: \"{\\\"data\\\": {\\\"episodeUnionV2\\\": {\\\"__typename\\\": \\\"str\\\", \\\"id\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"contents\\\": \\\"empty list\\\", \\\"htmlDescription\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\", \\\"coverArt\\\": {\\\"sources\\\": [{\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"int\\\", \\\"height\\\": \\\"int\\\", \\\"_list_length\\\": 3}]}, \\\"creator\\\": \\\"NoneType\\\", \\\"audio\\\": {\\\"items\\\": [{\\\"url\\\": \\\"str\\\", \\\"format\\\": \\\"str\\\", \\\"fileId\\\": \\\"str\\\", \\\"_list_length\\\": 5}]}, \\\"audioPreview\\\": {\\\"url\\\": \\\"str\\\", \\\"format\\\": \\\"str\\\"}, \\\"duration\\\": {\\\"totalMilliseconds\\\": \\\"int\\\"}, \\\"contentRating\\\": {\\\"label\\\": \\\"str\\\"}, \\\"releaseDate\\\": {\\\"isoString\\\": \\\"str\\\"}, \\\"playedState\\\": {\\\"playPositionMilliseconds\\\": \\\"int\\\", \\\"state\\\": \\\"str\\\"}, \\\"mediaTypes\\\": [\\\"list of str with length 1\\\"], \\\"restrictions\\\": {\\\"paywallContent\\\": \\\"bool\\\"}, \\\"playability\\\": {\\\"playable\\\": \\\"bool\\\", \\\"reason\\\": \\\"str\\\", \\\"unplayabilityReasons\\\": \\\"empty list\\\"}, \\\"sharingInfo\\\": {\\\"shareUrl\\\": \\\"str\\\", \\\"shareId\\\": \\\"str\\\"}, \\\"podcastV2\\\": {\\\"data\\\": {\\\"__typename\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"coverArt\\\": {\\\"sources\\\": [{\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"int\\\", \\\"height\\\": \\\"int\\\", \\\"_list_length\"", "metadata": {}}
{"_id": "344", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Auto complete, api_description:Gets airport and city ids for the air product related to words in passed string through the getAutoComplete endpoint, required_params: [{\"name\": \"string\", \"type\": \"STRING\", \"description\": \"Airport or City being searched\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "345", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Search - express results, api_description:Provides discounted Express (Cached) and Closed User Group (Live) Rates using the getExpress.Results endpoint., required_params: [{\"name\": \"check_out\", \"type\": \"STRING\", \"description\": \"Check In Date (YYYY-MM-DD or MM/DD/YYYY)\"}, {\"name\": \"check_in\", \"type\": \"STRING\", \"description\": \"Check In Date (YYYY-MM-DD or MM/DD/YYYY)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "346", "title": "", "text": "category_name:Email, tool_name:Mailcheap, api_name:Get status, api_description:Fetch API status, required_params: [], optional_params: [], return_schema: {\"status\": \"str\"}", "metadata": {}}
{"_id": "347", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Download areas, api_description:Downloads an Area list, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "348", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get coins, api_description:Get a list of coins. Coins are by default ordered by their rank, which - somewhat simplified - means that they are ordered on marketcap. The response not only returns a list of coins, but also statistics regarding the requested list, such as the volume in the last 24 hours., required_params: [], optional_params: [], return_schema: {\"status\": \"str\", \"data\": {\"stats\": {\"total\": \"int\", \"totalCoins\": \"int\", \"totalMarkets\": \"int\", \"totalExchanges\": \"int\", \"totalMarketCap\": \"str\", \"total24hVolume\": \"str\"}, \"coins\": [{\"uuid\": \"str\", \"symbol\": \"str\", \"name\": \"str\", \"color\": \"str\", \"iconUrl\": \"str\", \"marketCap\": \"str\", \"price\": \"str\", \"listedAt\": \"int\", \"tier\": \"int\", \"change\": \"str\", \"rank\": \"int\", \"sparkline\": [\"list of str with length 24\"], \"lowVolume\": \"bool\", \"coinrankingUrl\": \"str\", \"24hVolume\": \"str\", \"btcPrice\": \"str\", \"_list_length\": 50}]}}", "metadata": {}}
{"_id": "349", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get exchanges index, api_description:List of all exchanges currently available on Coinranking, for indexing purposes.\nThis endpoint requires the **ultra** plan or higher., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "350", "title": "", "text": "category_name:Financial, tool_name:CurrencyAPI.net, api_name:Rates, api_description:Get live currency conversion rates of a given currency, required_params: [], optional_params: [], return_schema: \"{\\\"valid\\\": \\\"bool\\\", \\\"updated\\\": \\\"int\\\", \\\"base\\\": \\\"str\\\", \\\"rates\\\": {\\\"AED\\\": \\\"float\\\", \\\"AFN\\\": \\\"float\\\", \\\"ALL\\\": \\\"float\\\", \\\"AMD\\\": \\\"float\\\", \\\"ANG\\\": \\\"float\\\", \\\"AOA\\\": \\\"float\\\", \\\"ARS\\\": \\\"float\\\", \\\"AUD\\\": \\\"float\\\", \\\"AWG\\\": \\\"float\\\", \\\"AZN\\\": \\\"float\\\", \\\"BAM\\\": \\\"float\\\", \\\"BBD\\\": \\\"float\\\", \\\"BCH\\\": \\\"float\\\", \\\"BDT\\\": \\\"float\\\", \\\"BGN\\\": \\\"float\\\", \\\"BHD\\\": \\\"float\\\", \\\"BIF\\\": \\\"float\\\", \\\"BMD\\\": \\\"int\\\", \\\"BND\\\": \\\"float\\\", \\\"BOB\\\": \\\"float\\\", \\\"BRL\\\": \\\"float\\\", \\\"BSD\\\": \\\"float\\\", \\\"BTC\\\": \\\"float\\\", \\\"BTG\\\": \\\"float\\\", \\\"BWP\\\": \\\"float\\\", \\\"BZD\\\": \\\"float\\\", \\\"CAD\\\": \\\"float\\\", \\\"CDF\\\": \\\"float\\\", \\\"CHF\\\": \\\"float\\\", \\\"CLP\\\": \\\"float\\\", \\\"CNH\\\": \\\"float\\\", \\\"CNY\\\": \\\"float\\\", \\\"COP\\\": \\\"float\\\", \\\"CRC\\\": \\\"float\\\", \\\"CUC\\\": \\\"int\\\", \\\"CUP\\\": \\\"float\\\", \\\"CVE\\\": \\\"float\\\", \\\"CZK\\\": \\\"float\\\", \\\"DASH\\\": \\\"float\\\", \\\"DJF\\\": \\\"float\\\", \\\"DKK\\\": \\\"float\\\", \\\"DOP\\\": \\\"float\\\", \\\"DZD\\\": \\\"float\\\", \\\"EGP\\\": \\\"float\\\", \\\"EOS\\\": \\\"float\\\", \\\"ETB\\\": \\\"float\\\", \\\"ETH\\\": \\\"float\\\", \\\"EUR\\\": \\\"float\\\", \\\"FJD\\\": \\\"float\\\", \\\"GBP\\\": \\\"float\\\", \\\"GEL\\\": \\\"float\\\", \\\"GHS\\\": \\\"float\\\", \\\"GIP\\\": \\\"float\\\", \\\"GMD\\\": \\\"float\\\", \\\"GNF\\\": \\\"float\\\", \\\"GTQ\\\": \\\"float\\\", \\\"GYD\\\": \\\"float\\\", \\\"HKD\\\": \\\"float\\\", \\\"HNL\\\": \\\"float\\\"\"", "metadata": {}}
{"_id": "351", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/points/{point}/forecast/hourly, api_description:Hourly forecast data for a point. This response is derrived from the /gridpoints endpoint and is intentionally less structured. If more structure is required, developers should use the /gridpoints endpoint directly. Example: /points/39.0693,-94.6716/forecast/hourly, required_params: [{\"name\": \"point\", \"type\": \"STRING\", \"description\": \"point: EPSG:4326 latitude, EPSG:4326 longitude\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "352", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/products/types, api_description:A list of product types with an active product, required_params: [], optional_params: [], return_schema: {\"@context\": {\"@version\": \"str\", \"@vocab\": \"str\"}, \"@graph\": [{\"productCode\": \"str\", \"productName\": \"str\", \"_list_length\": 338}]}", "metadata": {}}
{"_id": "353", "title": "", "text": "category_name:Data, tool_name:Tardis.dev, api_name:Exchanges, api_description:Gets the exchanges details: available symbols, availability dates, available channels, CSV datasets info, incidents etc., required_params: [{\"name\": \"exchange\", \"type\": \"ENUM\", \"description\": \"\"}], optional_params: [], return_schema: {\"code\": \"int\", \"message\": \"str\"}", "metadata": {}}
{"_id": "354", "title": "", "text": "category_name:Finance, tool_name:Global Ethereum Price Index - GEX, api_name:Custom Ticker, api_description:This endpoint can be used to generate a custom index in a certain currency. The “inex” path parameter represents “include” or “exclude”, you can choose to generate an index removing specified exchanges, or only including the few that you require., required_params: [{\"name\": \"inex\", \"type\": \"STRING\", \"description\": \"include - if you want the ticker to be calculated using only the exchanges sent as query parameter; exclude - if you want the price to be calculated using all exchanges, but the ones sent as query parameter.\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"ETH<fiat> where <fiat> is valid ISO currency (ex. ETHUSD)\"}], optional_params: [], return_schema: {\"timestamp\": \"int\", \"last\": {\"price\": \"float\"}, \"bid\": {\"price\": \"float\"}, \"ask\": {\"price\": \"float\"}}", "metadata": {}}
{"_id": "355", "title": "", "text": "category_name:Commerce, tool_name:27coupons, api_name:Popular Coupons, api_description:, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "356", "title": "", "text": "category_name:Advertising, tool_name:coupons, api_name:all, api_description:get all coupons, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "357", "title": "", "text": "category_name:Advertising, tool_name:coupons, api_name:getallcoupon, api_description:getallcoupon, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "358", "title": "", "text": "category_name:Commerce, tool_name:Free Coupon Codes, api_name:/api/vcodes-api.php?siteid={siteid}, api_description:Free Coupon Codes, required_params: [{\"name\": \"siteid\", \"type\": \"STRING\", \"description\": \"Site ID generated by Cashnjoy.com on registration. This identifies and attributes the transaction to particular website\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "359", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/stations/{stationId}, api_description:Metadata about a station. Similar to /stations endpoint with id parameter. Example: /stations/KMKC, required_params: [{\"name\": \"stationId\", \"type\": \"STRING\", \"description\": \"stationId: the id of a station from the /points/{point}/stations endpoint\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 1}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "360", "title": "", "text": "category_name:Data, tool_name:Solcast, api_name:Simple PV Power Forecast, api_description:The simple PV power request returns a first-guess PV power output forecast, based on your specified latitude and longitude plus some basic PV system characteristics., required_params: [{\"name\": \"capacity\", \"type\": \"NUMBER\", \"description\": \"The capacity of the system, in Watts.\"}, {\"name\": \"latitude\", \"type\": \"NUMBER\", \"description\": \"Latitude\"}, {\"name\": \"longitude\", \"type\": \"NUMBER\", \"description\": \"Longitude\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "361", "title": "", "text": "category_name:Data, tool_name:Solcast, api_name:Simple Radiation Forecast, api_description:The simple radiation request returns detailed solar radiation data for the next week based only on your latitude and longitude., required_params: [{\"name\": \"latitude\", \"type\": \"NUMBER\", \"description\": \"Latitude\"}, {\"name\": \"longitude\", \"type\": \"NUMBER\", \"description\": \"Longitude\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "362", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/alerts/active/zone/{zoneId}, api_description:A list of active alerts by zone id. The ATOM format returns items in CAP-ATOM. Example: /alerts/active/zone/ILZ081, required_params: [{\"name\": \"zoneId\", \"type\": \"STRING\", \"description\": \"zoneId: a valid zone, see list in counts endpoint\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 2}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "363", "title": "", "text": "category_name:Weather, tool_name:Air Quality, api_name:Air Quality History, api_description:Returns the past 24 hours of air quality observations for any point in the world given a lat/lon., required_params: [{\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"Latitude\"}, {\"name\": \"lon\", \"type\": \"NUMBER\", \"description\": \"Longitude\"}], optional_params: [], return_schema: {\"city_name\": \"str\", \"country_code\": \"str\", \"data\": [{\"aqi\": \"int\", \"co\": \"float\", \"datetime\": \"str\", \"no2\": \"float\", \"o3\": \"float\", \"pm10\": \"float\", \"pm25\": \"int\", \"so2\": \"int\", \"timestamp_local\": \"str\", \"timestamp_utc\": \"str\", \"ts\": \"int\", \"_list_length\": 72}], \"lat\": \"float\", \"lon\": \"float\", \"state_code\": \"str\", \"timezone\": \"str\"}", "metadata": {}}
{"_id": "364", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/stations, api_description:A list of stations and station metadata that can be filtered by parameters. If no parameters are provided, then all stations are returned. This list is not configured by field offices and only returns active stations. Example: /stations?limit=10&states=KS,MO, required_params: [], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 2}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "365", "title": "", "text": "category_name:Weather, tool_name:weather forecast 14 days, api_name:Search location by Name or zip code, api_description:Search location by Name or zip code and get the key for the forecast, required_params: [], optional_params: [], return_schema: {\"title\": \"str\", \"link\": \"str\", \"modified\": \"str\", \"description\": \"str\", \"generator\": \"str\", \"location\": [{\"wmo\": \"str\", \"city\": \"str\", \"country\": \"str\", \"country_name\": \"str\", \"_list_length\": 2}]}", "metadata": {}}
{"_id": "366", "title": "", "text": "category_name:Weather, tool_name:weather forecast 14 days, api_name:List of all Countries, api_description:List of all Countries, required_params: [], optional_params: [], return_schema: {\"link\": \"str\", \"modified\": \"str\", \"description\": \"str\", \"generator\": \"str\", \"Countries\": [{\"COUNTRY\": \"str\", \"name\": \"str\", \"_list_length\": 278}]}", "metadata": {}}
{"_id": "367", "title": "", "text": "category_name:Email, tool_name:Blaze Verify, api_name:Heartbeat, api_description:Returns API Status, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "368", "title": "", "text": "category_name:Email, tool_name:Blaze Verify, api_name:Get the status of a batch, api_description:GET requests to the batch endpoint will get the current status of the batch verification job specified in the \"id\" parameter.<br><br>When a credit card transaction is necessary to obtain enough credits to verify a batch, billing related messages will be returned if there is an error. These will be sent with a 402 response code.<br><br>, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The id of the batch.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "369", "title": "", "text": "category_name:Email, tool_name:Blaze Verify, api_name:Get account info, api_description:Get general account information like the email of the account owner and available credits., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "370", "title": "", "text": "category_name:Communication, tool_name:Quick Email Verification, api_name:/v1/verify, api_description:, required_params: [{\"name\": \"email\", \"type\": \"STRING\", \"description\": \"Enter email address to validate\"}], optional_params: [], return_schema: {\"success\": \"str\", \"message\": \"str\"}", "metadata": {}}
{"_id": "371", "title": "", "text": "category_name:Tools, tool_name:mailboxlayer, api_name:Validate email address, api_description:The main API endpoint for validating email addresses, required_params: [{\"name\": \"email\", \"type\": \"STRING\", \"description\": \"the email address to be validated\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"error\": {\"code\": \"int\", \"type\": \"str\", \"info\": \"str\"}}", "metadata": {}}
{"_id": "372", "title": "", "text": "category_name:Finance, tool_name:Alpaca Trading, api_name:Get the calendar, api_description:Returns the market calendar, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "373", "title": "", "text": "category_name:Finance, tool_name:Alpaca Trading, api_name:Get a list of orders, api_description:Retrieves a list of orders for the account, filtered by the supplied query parameters., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "374", "title": "", "text": "category_name:Finance, tool_name:Alpaca Trading, api_name:Get assets, api_description:, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "375", "title": "", "text": "category_name:Finance, tool_name:BraveNewCoin, api_name:Market, api_description:List the UUIDs for all markets or provide a query parameter to search.\n\nThe parameters are asset UUIDs. The full list of all asset details is available from the Asset endpoint., required_params: [], optional_params: [], return_schema: {\"content\": [{\"id\": \"str\", \"baseAssetId\": \"str\", \"quoteAssetId\": \"str\", \"_list_length\": 16210}]}", "metadata": {}}
{"_id": "376", "title": "", "text": "category_name:Finance, tool_name:Coinbase, api_name:Show individual order, api_description:Show an individual merchant order., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "377", "title": "", "text": "category_name:Finance, tool_name:Coinbase, api_name:List previously used emails, api_description:List emails the user has previously used for autocompletion., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "378", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get reference currencies, api_description:Get a list of reference currencies, which can be used as reference for coins. The response includes all the essentials for this use-case, such as the symbol (e.g. USD) and - if available - the sign (e.g. $)., required_params: [], optional_params: [], return_schema: {\"status\": \"str\", \"data\": {\"stats\": {\"total\": \"int\"}, \"currencies\": [{\"uuid\": \"str\", \"type\": \"str\", \"iconUrl\": \"str\", \"name\": \"str\", \"symbol\": \"str\", \"sign\": \"str\", \"_list_length\": 50}]}}", "metadata": {}}
{"_id": "379", "title": "", "text": "category_name:Finance, tool_name:BraveNewCoin, api_name:DailyOHLCV, api_description:This endpoint returns end-of-day open, high, low, close prices and volumes (OHLCV) for market weighted averages (MWA) or global weighted averages (GWA). The 24hr period for end of day is based on an open/close at 00:00:00 UTC. Parameters may be used to select the data required. \n\nBNC uses universal identifiers (UUIDs) for assets and markets. Each index type will have a UUID which identifies the constituent type used to build the index:\n\n| Index Type | Index Id  | Output |\n| -----------|:---------:|:---------:|\n| MWA        | Market Id | OHLCV for that market |\n| GWA        | Asset Id  | OHLCV for that coin / asset |\n\nThe UUIDs for assets or markets may be found from the Lookups with those names.\n\nIf no timestamp is provided, then only the latest values are returned. With a timestamp, records are returned in reverse date order, the number determining how far back  controlled by the size parameter. \n\nAn authentication token is required. Obtain a token valid for 24 hours from the GetToken endpoint., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "380", "title": "", "text": "category_name:Finance, tool_name:Coinbase, api_name:Get spot price, api_description:Get the spot price of bitcoin., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "381", "title": "", "text": "category_name:Financial, tool_name:CurrencyAPI.net, api_name:Currencies, api_description:Gets list of currencies we support, required_params: [], optional_params: [], return_schema: \"{\\\"valid\\\": \\\"bool\\\", \\\"currencies\\\": {\\\"AED\\\": \\\"str\\\", \\\"AFN\\\": \\\"str\\\", \\\"ALL\\\": \\\"str\\\", \\\"AMD\\\": \\\"str\\\", \\\"ANG\\\": \\\"str\\\", \\\"AOA\\\": \\\"str\\\", \\\"ARS\\\": \\\"str\\\", \\\"AUD\\\": \\\"str\\\", \\\"AWG\\\": \\\"str\\\", \\\"AZN\\\": \\\"str\\\", \\\"BAM\\\": \\\"str\\\", \\\"BBD\\\": \\\"str\\\", \\\"BCH\\\": \\\"str\\\", \\\"BDT\\\": \\\"str\\\", \\\"BGN\\\": \\\"str\\\", \\\"BHD\\\": \\\"str\\\", \\\"BIF\\\": \\\"str\\\", \\\"BMD\\\": \\\"str\\\", \\\"BND\\\": \\\"str\\\", \\\"BOB\\\": \\\"str\\\", \\\"BRL\\\": \\\"str\\\", \\\"BSD\\\": \\\"str\\\", \\\"BTC\\\": \\\"str\\\", \\\"BTG\\\": \\\"str\\\", \\\"BWP\\\": \\\"str\\\", \\\"BZD\\\": \\\"str\\\", \\\"CAD\\\": \\\"str\\\", \\\"CDF\\\": \\\"str\\\", \\\"CHF\\\": \\\"str\\\", \\\"CLP\\\": \\\"str\\\", \\\"CNH\\\": \\\"str\\\", \\\"CNY\\\": \\\"str\\\", \\\"COP\\\": \\\"str\\\", \\\"CRC\\\": \\\"str\\\", \\\"CUC\\\": \\\"str\\\", \\\"CUP\\\": \\\"str\\\", \\\"CVE\\\": \\\"str\\\", \\\"CZK\\\": \\\"str\\\", \\\"DASH\\\": \\\"str\\\", \\\"DJF\\\": \\\"str\\\", \\\"DKK\\\": \\\"str\\\", \\\"DOP\\\": \\\"str\\\", \\\"DZD\\\": \\\"str\\\", \\\"EGP\\\": \\\"str\\\", \\\"EOS\\\": \\\"str\\\", \\\"ETB\\\": \\\"str\\\", \\\"ETH\\\": \\\"str\\\", \\\"EUR\\\": \\\"str\\\", \\\"FJD\\\": \\\"str\\\", \\\"GBP\\\": \\\"str\\\", \\\"GEL\\\": \\\"str\\\", \\\"GHS\\\": \\\"str\\\", \\\"GIP\\\": \\\"str\\\", \\\"GMD\\\": \\\"str\\\", \\\"GNF\\\": \\\"str\\\", \\\"GTQ\\\": \\\"str\\\", \\\"GYD\\\": \\\"str\\\", \\\"HKD\\\": \\\"str\\\", \\\"HNL\\\": \\\"str\\\", \\\"HRK\\\": \\\"str\\\", \\\"HTG\\\": \\\"str\\\", \\\"HUF\\\": \\\"str\\\", \\\"IDR\\\": \\\"str\\\", \\\"ILS\\\": \\\"str\\\", \\\"INR\\\": \\\"str\\\", \\\"IQD\\\": \\\"str\\\", \\\"IRR\\\": \\\"str\\\", \\\"ISK\\\": \\\"str\\\", \\\"JMD\\\": \\\"str\\\", \"", "metadata": {}}
{"_id": "382", "title": "", "text": "category_name:Data, tool_name:Car Data, api_name:Makes, api_description:get a list of supported makes, required_params: [], optional_params: [], return_schema: {}", "metadata": {}}
{"_id": "383", "title": "", "text": "category_name:Transportation, tool_name:Car API, api_name:Mileages, api_description:To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n[{\"field\": \"combined_mpg\", \"op\": \">=\", \"val\": 20}, {\"field\": \"combined_mpg\", \"op\": \"<=\", \"val\": 30}]\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, combined_mpg, epa_city_mpg, epa_highway_mpg, range_city, range_highway, make_id, make_model_id, and make_model_trim_id., required_params: [], optional_params: [], return_schema: {\"exception\": \"str\", \"message\": \"str\", \"url\": \"str\", \"code\": \"int\"}", "metadata": {}}
{"_id": "384", "title": "", "text": "category_name:Transportation, tool_name:Car API, api_name:Trims, api_description:To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"year\", \"op\": \">=\", \"val\": 2010}, {\"field\": \"year\", \"op\": \"<=\", \"val\": 2020}]`\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, bodies.type, engines.cam_type, engines.cylinders, engines.drive_type, engines.engine_type, engines.fuel_type, engines.transmission, engines.valve_timing, engines.valves, make_id, make_model_id, make_model_trim_id, created, and modified., required_params: [], optional_params: [], return_schema: {\"exception\": \"str\", \"message\": \"str\", \"url\": \"str\", \"code\": \"int\"}", "metadata": {}}
{"_id": "385", "title": "", "text": "category_name:Data, tool_name:Car Data, api_name:Types, api_description:get a list of supported types, required_params: [], optional_params: [], return_schema: {}", "metadata": {}}
{"_id": "386", "title": "", "text": "category_name:Data, tool_name:Car Data, api_name:Years, api_description:get a list of supported years, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "387", "title": "", "text": "category_name:Transportation, tool_name:Car API, api_name:Interior Colors, api_description:To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n[{\"field\": \"name\", \"op\": \"in\", \"val\": [\"red\", \"blue\"]}]\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, name, rgb, make_id, make_model_id, and make_model_trim_i, required_params: [], optional_params: [], return_schema: {\"exception\": \"str\", \"message\": \"str\", \"url\": \"str\", \"code\": \"int\"}", "metadata": {}}
{"_id": "388", "title": "", "text": "category_name:Medical, tool_name:GetGuidelines, api_name:vac, api_description:Vaccinations only, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "389", "title": "", "text": "category_name:Science, tool_name:CarbonFootprint, api_name:CleanHydroToCarbonFootprint, api_description:Return the CO2e in Kg from the consumption of clean hydro energy, required_params: [{\"name\": \"energy\", \"type\": \"STRING\", \"description\": \"The source of the clean energy. Can be Solar, Wind, HydroElectric, Biomass, Geothermal, Tidal or OtherCleanEnergy\"}, {\"name\": \"consumption\", \"type\": \"STRING\", \"description\": \"The amount of energy consumed in KWH..\"}], optional_params: [], return_schema: {\"carbonEquivalent\": \"float\"}", "metadata": {}}
{"_id": "390", "title": "", "text": "category_name:Science, tool_name:CarbonFootprint, api_name:CarbonFootprintFromCarTravel, api_description:Returns the CO2e in Kg from a travel by car, required_params: [{\"name\": \"distance\", \"type\": \"STRING\", \"description\": \"The distance in KM.\"}, {\"name\": \"vehicle\", \"type\": \"STRING\", \"description\": \"The type of car, either SmallDieselCar, MediumDieselCar, LargeDieselCar, MediumHybridCar, LargeHybridCar, MediumLPGCar, LargeLPGCar, MediumCNGCar, LargeCNGCar, SmallPetrolVan, LargePetrolVan, SmallDielselVan, MediumDielselVan, LargeDielselVan, LPGVan, CNGVan, SmallPetrolCar, MediumPetrolCar, LargePetrolCar, SmallMotorBike, MediumMotorBike, LargeMotorBike\"}], optional_params: [], return_schema: {\"carbonEquivalent\": \"float\"}", "metadata": {}}
{"_id": "391", "title": "", "text": "category_name:Science, tool_name:CarbonFootprint, api_name:TraditionalHydroToCarbonFootprint, api_description:Calculate CO2e from the use of traditional hydro provider, required_params: [{\"name\": \"consumption\", \"type\": \"STRING\", \"description\": \"The KWH usage of hydro.\"}, {\"name\": \"location\", \"type\": \"STRING\", \"description\": \"The country or continent providing the hydro. Can be any of USA, Canada, UK, Europe, Africa, LatinAmerica, MiddleEast, OtherCountry\"}], optional_params: [], return_schema: {\"carbonEquivalent\": \"float\"}", "metadata": {}}
{"_id": "392", "title": "", "text": "category_name:Business, tool_name:Lake B2B, api_name:Email Marketing, api_description:Lake B2B provides best email marketing services and programs across the globe to meet your marketing needs thus helping business to run more efficiently., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "393", "title": "", "text": "category_name:Medical, tool_name:GetGuidelines, api_name:all, api_description:All guidelines, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "394", "title": "", "text": "category_name:Business, tool_name:Healthcaremailing, api_name:Healthcare mailing, api_description:Healthcare mailing, a direct marketing business founded on a base of many successful years of experience building list., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "395", "title": "", "text": "category_name:Science, tool_name:CarbonFootprint, api_name:CarbonFootprintFromFlight, api_description:Calculate CO2e in Kg from a travel by air., required_params: [{\"name\": \"distance\", \"type\": \"STRING\", \"description\": \"The flight distance in KM\"}, {\"name\": \"type\", \"type\": \"STRING\", \"description\": \"The type of flight, any of DomesticFlight, ShortEconomyClassFlight, ShortBusinessClassFlight, LongEconomyClassFlight, LongPremiumClassFlight, LongBusinessClassFlight, LongFirstClassFlight\"}], optional_params: [], return_schema: {\"carbonEquivalent\": \"float\"}", "metadata": {}}
{"_id": "396", "title": "", "text": "category_name:Science, tool_name:CarbonFootprint, api_name:FuelToCO2e, api_description:Transform liters of Diesel, Petrol or LPG into CO2 Equivalent in Kg., required_params: [{\"name\": \"type\", \"type\": \"STRING\", \"description\": \"The type can be Petrol, Diesel, LPG.\"}, {\"name\": \"litres\", \"type\": \"STRING\", \"description\": \"The number of litres to calculate from.\"}], optional_params: [], return_schema: {\"carbonEquivalent\": \"float\"}", "metadata": {}}
{"_id": "397", "title": "", "text": "category_name:Science, tool_name:CarbonFootprint, api_name:CarbonFootprintFromMotorBike, api_description:Returns the CO2e in Kg from a motorbike travel, required_params: [{\"name\": \"type\", \"type\": \"STRING\", \"description\": \"The type of motorbike, can be any of SmallMotorBike, MediumMotorBike, LargeMotorBike\"}, {\"name\": \"distance\", \"type\": \"STRING\", \"description\": \"The distance in KM\"}], optional_params: [], return_schema: {\"carbonEquivalent\": \"float\"}", "metadata": {}}
{"_id": "398", "title": "", "text": "category_name:Science, tool_name:CarbonFootprint, api_name:AirQualityHealthIndex, api_description:Return the official air quality health index (1 to 10) bases on key parameters.The national AQHI is based on three-hour average concentrations of ground-level ozone (O3), nitrogen dioxide (NO2), and fine particulate matter (PM2.5). O3 and NO2 are measured in parts per billion (ppb) while PM2.5 is \t measured in micrograms per cubic metre (ug/m3), required_params: [{\"name\": \"O3\", \"type\": \"STRING\", \"description\": \"The ground-level ozone (O3) in parts per billion (ppb).in \"}, {\"name\": \"NO2\", \"type\": \"STRING\", \"description\": \"The nitrogen dioxide (NO2),  in parts per billion (ppb)\"}, {\"name\": \"PM\", \"type\": \"STRING\", \"description\": \"The fine particulate matter (PM2.5), PM2.5 is \\t * measured in micrograms per cubic metre (ug/m3).\"}], optional_params: [], return_schema: {\"airQualityHealthIndex\": \"int\"}", "metadata": {}}
{"_id": "399", "title": "", "text": "category_name:Science, tool_name:CarbonFootprint, api_name:TreeEquivalent, api_description:Calculate how many trees it took to create paper., required_params: [{\"name\": \"weight\", \"type\": \"STRING\", \"description\": \"The weight of the paper\"}, {\"name\": \"unit\", \"type\": \"STRING\", \"description\": \"The unit (kg or lb) used for the weight\"}], optional_params: [], return_schema: {\"numberOfTrees\": \"float\"}", "metadata": {}}
{"_id": "400", "title": "", "text": "category_name:Sports, tool_name:Free NBA, api_name:Get a Specific Game, api_description:This endpoint retrieves a specific game, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"ID of the game\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "401", "title": "", "text": "category_name:Entertainment, tool_name:Love Calculator, api_name:getPercentage, api_description:getPercentage, required_params: [{\"name\": \"sname\", \"type\": \"STRING\", \"description\": \"Enter second name.\"}, {\"name\": \"fname\", \"type\": \"STRING\", \"description\": \"Enter first name.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "402", "title": "", "text": "category_name:Education, tool_name:Numbers, api_name:Get date fact, api_description:Get a fact about a day of year, required_params: [{\"name\": \"month\", \"type\": \"STRING\", \"description\": \"The 1-indexed month (eg. 6 for June)\"}, {\"name\": \"day\", \"type\": \"STRING\", \"description\": \"The day of the month\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "403", "title": "", "text": "category_name:Education, tool_name:Numbers, api_name:Get random fact, api_description:Get result by random number, required_params: [{\"name\": \"type\", \"type\": \"STRING\", \"description\": \"One of \\\"trivia\\\", \\\"math\\\", \\\"date\\\", or \\\"year\\\"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "404", "title": "", "text": "category_name:Data, tool_name:Currency Exchange, api_name:exchange, api_description:Get Currency Exchange by specifying the quotes of source (from) and destination (to), and optionally the source amount to calculate which to get the destination amount, by default the source amount will be 1., required_params: [{\"name\": \"from\", \"type\": \"STRING\", \"description\": \"Source Quote\"}, {\"name\": \"to\", \"type\": \"STRING\", \"description\": \"Destination Quote\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "405", "title": "", "text": "category_name:Sports, tool_name:Free NBA, api_name:Get All Teams, api_description:This endpoint retrieves all teams for the current season., required_params: [], optional_params: [], return_schema: {\"data\": [{\"id\": \"int\", \"abbreviation\": \"str\", \"city\": \"str\", \"conference\": \"str\", \"division\": \"str\", \"full_name\": \"str\", \"name\": \"str\", \"_list_length\": 30}], \"meta\": {\"total_pages\": \"int\", \"current_page\": \"int\", \"next_page\": \"int\", \"per_page\": \"int\", \"total_count\": \"int\"}}", "metadata": {}}
{"_id": "406", "title": "", "text": "category_name:Sports, tool_name:Free NBA, api_name:Get All Players, api_description:This endpoint retrieves all players from all seasons., required_params: [], optional_params: [], return_schema: {\"data\": [{\"id\": \"int\", \"first_name\": \"str\", \"height_feet\": \"NoneType\", \"height_inches\": \"NoneType\", \"last_name\": \"str\", \"position\": \"str\", \"team\": {\"id\": \"int\", \"abbreviation\": \"str\", \"city\": \"str\", \"conference\": \"str\", \"division\": \"str\", \"full_name\": \"str\", \"name\": \"str\"}, \"weight_pounds\": \"NoneType\", \"_list_length\": 25}], \"meta\": {\"total_pages\": \"int\", \"current_page\": \"int\", \"next_page\": \"int\", \"per_page\": \"int\", \"total_count\": \"int\"}}", "metadata": {}}
{"_id": "407", "title": "", "text": "category_name:Data, tool_name:Currency Exchange, api_name:listquotes, api_description:List the available quotes in JSON Array this API support, all the available quotes can be used in source and destination quote. Refer exchange endpoint for more information how to call the currency exchange from the source quote to destination quote., required_params: [], optional_params: [], return_schema: {}", "metadata": {}}
{"_id": "408", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Country Details, api_description:Get the details for a specific country, including number of regions., required_params: [{\"name\": \"countryid\", \"type\": \"STRING\", \"description\": \"An ISO-3166 country code or WikiData id\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "409", "title": "", "text": "category_name:Travel, tool_name:Hotels, api_name:properties/get-hotel-photos (Deprecated), api_description:Get all available photos of property, required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"The value of id field that received from .../properties/list endpoint\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "410", "title": "", "text": "category_name:Travel, tool_name:Hotels, api_name:locations/v2/search (Deprecated), api_description:Search for related locations and suggestions, required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"Name of countries, cities, districts, places, etc...\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "411", "title": "", "text": "category_name:Transportation, tool_name:ADSBx Flight Sim Traffic, api_name:LiveTraffic, api_description:Returns all aircraft within 25nm radius of specified Lat/Lon, required_params: [{\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"Latitude (-90 to 90)\"}, {\"name\": \"lon\", \"type\": \"NUMBER\", \"description\": \"Longitude (-180 to 180) Hint: US is negative longitude!\"}], optional_params: [], return_schema: {\"ERR\": \"str\", \"V\": \"str\"}", "metadata": {}}
{"_id": "412", "title": "", "text": "category_name:Commerce, tool_name:Apfelpreise, api_name:price, api_description:Get latest average price for manufacturer number, required_params: [{\"name\": \"manufacturerNumBase64Encoded\", \"type\": \"string\", \"description\": \"A manufacturer number of an apple product, base64 encoded, e.g for a Apple MacBook Pro 13\\\\\\\\\\\\\\\" 2020 with manufacturer number MWP72D/A -> TVdQNzJEL0E=\"}, {\"name\": \"condition\", \"type\": \"ENUM\", \"description\": \"ENUM, valid values are: USED, NEW, DEFECT, REFURBISHED\\n\\nNote: Until now in v1, only values USED and REFURBISHED are allowed and give the same results (no distringuish between USED or REFURBISHED, so use any of the two.\\nIn a future release, the other values will be also supported.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "413", "title": "", "text": "category_name:Mapping, tool_name:MapTiles, api_name:getMapTilewithEnglishLabels, api_description:Raster Map Tiles with English Labels. Please see our [tutorials page](https://rapidapi.com/MapTilesApi/api/maptiles/tutorials) on how to use this., required_params: [{\"name\": \"x\", \"type\": \"NUMBER\", \"description\": \"X-number of tile (see documentation)\"}, {\"name\": \"z\", \"type\": \"NUMBER\", \"description\": \"zoom (from 0 up to zoom 19)\"}, {\"name\": \"y\", \"type\": \"NUMBER\", \"description\": \"Y-number of tile (see documentation)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "414", "title": "", "text": "category_name:Communication, tool_name:Maytapi WhatsApp, api_name:contacts, api_description:Returns the contacts in the current whatsapp instance., required_params: [{\"name\": \"phone_id\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"message\": \"str\"}", "metadata": {}}
{"_id": "415", "title": "", "text": "category_name:Data, tool_name:Messages, api_name:getMsgs, api_description:GetMsg, required_params: [{\"name\": \"category\", \"type\": \"STRING\", \"description\": \"Select a category to get unlimited messages.Eg: Love,quotes,friendship,Good night,Good morning,funny,Birthday,Sad,Sweet,Random\"}], optional_params: [], return_schema: {\"Category\": \"str\", \"Message\": \"str\"}", "metadata": {}}
{"_id": "416", "title": "", "text": "category_name:Communication, tool_name:Maytapi WhatsApp, api_name:getListPhones, api_description:Gets the list of phones with their id's and numbers that are registered to the given product id., required_params: [], optional_params: [], return_schema: {}", "metadata": {}}
{"_id": "417", "title": "", "text": "category_name:Communication, tool_name:Maytapi WhatsApp, api_name:getProduct, api_description:Gets the product id and webhook url of the account., required_params: [], optional_params: [], return_schema: {\"pid\": \"str\", \"webhook\": \"NoneType\", \"ack_delivery\": \"bool\", \"phone_limit\": \"int\", \"package\": \"str\", \"instagram_limit\": \"int\", \"telegram_limit\": \"int\"}", "metadata": {}}
{"_id": "418", "title": "", "text": "category_name:SMS, tool_name:sms77io, api_name:Get Status, api_description:Get a delivery report for a message ID sent with your API key., required_params: [{\"name\": \"msg_id\", \"type\": \"NUMBER\", \"description\": \"The message ID of the SMS.\\nCan be obtained by setting parameter *JSON*, *return_msg_id* or *details* to **1** when sending SMS via the API.\\nAlternatively it can be retrieved from the message journal in the user area.\"}, {\"name\": \"p\", \"type\": \"STRING\", \"description\": \"API Key\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "419", "title": "", "text": "category_name:Communication, tool_name:Maytapi WhatsApp, api_name:getQRCode, api_description:Gets the image of QR-Code., required_params: [{\"name\": \"phone_id\", \"type\": \"STRING\", \"description\": \"Enter phone id\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"message\": \"str\"}", "metadata": {}}
{"_id": "420", "title": "", "text": "category_name:SMS, tool_name:sms77io, api_name:Get Contacts, api_description:Retrieves all contacts for a given API key., required_params: [{\"name\": \"p\", \"type\": \"STRING\", \"description\": \"API Key from [Sms77.io](https://sms77.io).\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "421", "title": "", "text": "category_name:Communication, tool_name:PubNub Network, api_name:History, api_description:Get older messages., required_params: [{\"name\": \"callback\", \"type\": \"STRING\", \"description\": \"JSONP Callback\"}, {\"name\": \"limit\", \"type\": \"STRING\", \"description\": \"Limit of messages to return\"}, {\"name\": \"subscribe_key\", \"type\": \"STRING\", \"description\": \"Subscribe Key\"}, {\"name\": \"channel\", \"type\": \"STRING\", \"description\": \"Channel Name\"}], optional_params: [], return_schema: {}", "metadata": {}}
{"_id": "422", "title": "", "text": "category_name:Communication, tool_name:PubNub Network, api_name:Time, api_description:Timetoken from PubNub Network, required_params: [{\"name\": \"callback\", \"type\": \"STRING\", \"description\": \"JSONP Callback\"}], optional_params: [], return_schema: {}", "metadata": {}}
{"_id": "423", "title": "", "text": "category_name:Communication, tool_name:LINE Messaging, api_name:Get profile, api_description:Gets user profile information., required_params: [{\"name\": \"userId\", \"type\": \"STRING\", \"description\": \"User ID that is returned in a webhook event object. Do not use the LINE ID found on LINE.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "424", "title": "", "text": "category_name:SMS, tool_name:sms77io, api_name:Get Pricing, api_description:Retrieves pricing information for a single country or all., required_params: [{\"name\": \"p\", \"type\": \"STRING\", \"description\": \"API Key from [Sms77.io](https://sms77.io).\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "425", "title": "", "text": "category_name:Communication, tool_name:LINE Messaging, api_name:Get number of sent reply messages, api_description:Gets the number of messages sent with the /bot/message/reply endpoint., required_params: [{\"name\": \"date\\t\", \"type\": \"STRING\", \"description\": \"Date the messages were sent. Format: yyyyMMdd (Example: 20191231) Timezone: UTC+9\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "426", "title": "", "text": "category_name:SMS, tool_name:sms77io, api_name:Get Balance, api_description:Retrieves the account balance for the given API key., required_params: [{\"name\": \"p\", \"type\": \"STRING\", \"description\": \"Your API key from [Sms77.io](https://sms77.io).\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "427", "title": "", "text": "category_name:Communication, tool_name:LINE Messaging, api_name:Get rich menu list, api_description:Gets a list of all uploaded rich menus., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "428", "title": "", "text": "category_name:Communication, tool_name:LINE Messaging, api_name:Get rich menu, api_description:Gets a rich menu via a rich menu ID., required_params: [{\"name\": \"richMenuId\", \"type\": \"STRING\", \"description\": \"ID of an uploaded rich menu\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "429", "title": "", "text": "category_name:SMS, tool_name:SMSAPI.com, api_name:/sms/sendernames/{sender}, api_description: , required_params: [{\"name\": \"sender\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\", \"error\": \"str\", \"errors\": \"NoneType\", \"developer_description\": \"NoneType\"}", "metadata": {}}
{"_id": "430", "title": "", "text": "category_name:SMS, tool_name:SMSAPI.com, api_name:/profile/prices, api_description: , required_params: [], optional_params: [], return_schema: {\"message\": \"str\", \"error\": \"str\", \"errors\": \"NoneType\", \"developer_description\": \"NoneType\"}", "metadata": {}}
{"_id": "431", "title": "", "text": "category_name:Communication, tool_name:Maytapi WhatsApp, api_name:getScreen, api_description:Returns the screenshot of the screen in the current session, required_params: [{\"name\": \"phone_id\", \"type\": \"STRING\", \"description\": \"Enter phone id\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"message\": \"str\"}", "metadata": {}}
{"_id": "432", "title": "", "text": "category_name:Communication, tool_name:LINE Messaging, api_name:Download rich menu image, api_description:Downloads an image associated with a rich menu., required_params: [{\"name\": \"richMenuId\", \"type\": \"STRING\", \"description\": \"ID of the rich menu with the image to be downloaded\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "433", "title": "", "text": "category_name:Communication, tool_name:Maytapi WhatsApp, api_name:logs, api_description:Gets logs., required_params: [{\"name\": \"page\", \"type\": \"STRING\", \"description\": \"Enter which page\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"data\": {\"count\": \"str\", \"list\": [{\"id\": \"int\", \"pid\": \"str\", \"phone\": \"int\", \"created_at\": \"str\", \"updated_at\": \"str\", \"data\": {\"body\": {\"pid\": \"str\", \"type\": \"str\", \"status\": \"str\", \"phoneId\": \"int\", \"phone_id\": \"int\", \"product_id\": \"str\"}, \"webhook\": \"NoneType\", \"response\": {\"message\": \"str\"}}, \"type\": \"str\", \"_list_length\": 1}]}}", "metadata": {}}
{"_id": "434", "title": "", "text": "category_name:SMS, tool_name:SMSAPI.com, api_name:/blacklist/phone_numbers, api_description: , required_params: [], optional_params: [], return_schema: {\"message\": \"str\", \"error\": \"str\", \"errors\": \"NoneType\", \"developer_description\": \"NoneType\"}", "metadata": {}}
{"_id": "435", "title": "", "text": "category_name:SMS, tool_name:SMSAPI.com, api_name:/sms/sendernames, api_description: , required_params: [], optional_params: [], return_schema: {\"message\": \"str\", \"error\": \"str\", \"errors\": \"NoneType\", \"developer_description\": \"NoneType\"}", "metadata": {}}
{"_id": "436", "title": "", "text": "category_name:SMS, tool_name:SMSAPI.com, api_name:/profile/regional_settings/available_languages, api_description: , required_params: [], optional_params: [], return_schema: {\"message\": \"str\", \"error\": \"str\", \"errors\": \"NoneType\", \"developer_description\": \"NoneType\"}", "metadata": {}}
{"_id": "437", "title": "", "text": "category_name:SMS, tool_name:SMSAPI.com, api_name:/short_url/links/{id}, api_description:Get short URL., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Short URL ID\"}], optional_params: [], return_schema: {\"message\": \"str\", \"error\": \"str\", \"errors\": \"NoneType\", \"developer_description\": \"NoneType\"}", "metadata": {}}
{"_id": "438", "title": "", "text": "category_name:Communication, tool_name:Maytapi WhatsApp, api_name:purgeQueue, api_description:Clears phone's send message queue., required_params: [{\"name\": \"phone_id\", \"type\": \"STRING\", \"description\": \"Enter phone id\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"message\": \"str\"}", "metadata": {}}
{"_id": "439", "title": "", "text": "category_name:SMS, tool_name:SMSAPI.com, api_name:/profile/regional_settings, api_description: , required_params: [], optional_params: [], return_schema: {\"message\": \"str\", \"error\": \"str\", \"errors\": \"NoneType\", \"developer_description\": \"NoneType\"}", "metadata": {}}
{"_id": "440", "title": "", "text": "category_name:Communication, tool_name:Maytapi WhatsApp, api_name:checkNumberStatus, api_description:Check phone number status., required_params: [{\"name\": \"number\", \"type\": \"STRING\", \"description\": \"Phone Number\"}, {\"name\": \"phone_id\", \"type\": \"STRING\", \"description\": \"Enter phone id\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"message\": \"str\"}", "metadata": {}}
{"_id": "441", "title": "", "text": "category_name:Education, tool_name:Helioviewer v1, api_name:getMovieStatus, api_description:, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Unique movie identifier (provided by the response to a `queueMovie` request).\"}, {\"name\": \"format\", \"type\": \"STRING\", \"description\": \"Movie format (`mp4`, `webm`, or `flv`).\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "442", "title": "", "text": "category_name:Education, tool_name:Helioviewer v1, api_name:getJP2Header, api_description:Get the XML header embedded in a JPEG2000 image. Includes the FITS header as well as a section of Helioviewer-specific metadata., required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"Unique JP2 image identifier.\"}], optional_params: [], return_schema: {\"error\": \"str\", \"errno\": \"int\"}", "metadata": {}}
{"_id": "443", "title": "", "text": "category_name:Education, tool_name:Helioviewer v1, api_name:playMovie, api_description:Output an HTML web page with the requested movie embedded within., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Unique movie identifier (provided by the response to a `queueMovie` request).\"}, {\"name\": \"format\", \"type\": \"STRING\", \"description\": \"Movie format (mp4, webm, or flv).\"}, {\"name\": \"height\", \"type\": \"STRING\", \"description\": \"Height of embedded movie player in pixels. Defaults to the actual height of the movie itself.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "444", "title": "", "text": "category_name:Business, tool_name:Indeed, api_name:Search, api_description:, required_params: [{\"name\": \"v\", \"type\": \"STRING\", \"description\": \"Version. Which version of the API you wish to use. All publishers should be using version 2. Currently available versions are 1 and 2. This parameter is required.\"}, {\"name\": \"format\", \"type\": \"STRING\", \"description\": \"Format. Which output format of the API you wish to use. The options are \\\"xml\\\" and \\\"json.\\\" If omitted or invalid, the XML format is used.\"}, {\"name\": \"callback\", \"type\": \"STRING\", \"description\": \"Callback. The name of a javascript function to use as a callback to which the results of the search are passed. This only applies when format=json. For security reasons, the callback name is restricted letters, numbers, and the underscore character.\"}, {\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Callback. The name of a javascript function to use as a callback to which the results of the search are passed. This only applies when format=json. For security reasons, the callback name is restricted letters, numbers, and the underscore character.\"}, {\"name\": \"l\", \"type\": \"STRING\", \"description\": \"Location. Use a postal code or a \\\"city, state/province/region\\\" combination.\"}, {\"name\": \"sort\", \"type\": \"STRING\", \"description\": \"Sort by relevance or date. Default is relevance.\"}, {\"name\": \"radius\", \"type\": \"STRING\", \"description\": \"Distance from search location (\\\"as the crow flies\\\"). Default is 25.\"}, {\"name\": \"st\", \"type\": \"STRING\", \"description\": \"Site type. To show only jobs from job boards use 'jobsite'. For jobs from direct employer websites use 'employer'.\"}, {\"name\": \"jt\", \"type\": \"STRING\", \"description\": \"Job type. Allowed values: \\\"fulltime\\\", \\\"parttime\\\", \\\"contract\\\", \\\"internship\\\", \\\"temporary\\\".\"}, {\"name\": \"start\", \"type\": \"STRING\", \"description\": \"Start results at this result number, beginning with 0. Default is 0.\"}, {\"name\": \"limit\", \"type\": \"STRING\", \"description\": \"Maximum number of results returned per query. Default is 10\"}, {\"name\": \"fromage\", \"type\": \"STRING\", \"description\": \"Number of days back to search.\"}, {\"name\": \"highlight\", \"type\": \"STRING\", \"description\": \"Setting this value to 1 will bold terms in the snippet that are also present in q. Default is 0.\"}, {\"name\": \"filter\", \"type\": \"STRING\", \"description\": \"Filter duplicate results. 0 turns off duplicate job filtering. Default is 1.\"}, {\"name\": \"latlong\", \"type\": \"STRING\", \"description\": \"If latlong=1, returns latitude and longitude information for each job result. Default is 0.\"}, {\"name\": \"co\", \"type\": \"STRING\", \"description\": \"Search within country specified. Default is us. See below for a complete list of supported countries.\"}, {\"name\": \"chnl\", \"type\": \"STRING\", \"description\": \"Channel Name: Group API requests to a specific channel\"}, {\"name\": \"userip\", \"type\": \"STRING\", \"description\": \"The IP number of the end-user to whom the job results will be displayed. This field is required.\"}, {\"name\": \"useragent\", \"type\": \"STRING\", \"description\": \"The User-Agent (browser) of the end-user to whom the job results will be displayed. This can be obtained from the \\\"User-Agent\\\" HTTP request header from the end-user. This field is required.\"}], optional_params: [], return_schema: {\"error\": \"str\"}", "metadata": {}}
{"_id": "445", "title": "", "text": "category_name:Travel, tool_name:British Airways Flight Info, api_name:Search today's arrivals by time, api_description:, required_params: [{\"name\": \"arrivallocation-starttime-starttime-endtime-endtime\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"arrivalLocation\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"startTime\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"endTime\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "446", "title": "", "text": "category_name:Travel, tool_name:British Airways Flight Info, api_name:Search departures by flight, api_description:, required_params: [{\"name\": \"flightnumber-scheduleddeparturedate-scheduleddeparturedate\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"flightNumber\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"scheduledDepartureDate\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "447", "title": "", "text": "category_name:Travel, tool_name:Flightera Flight Data, api_name:airportFlights, api_description:Returns a list of flights for an airport, direction and time. The list is sorted ascending by scheduled departure time for direction==\"departure\" and sorted descending by scheduled arrival time for direction==\"arrival\".\nThe next departure/arrival time is returned for pagination.\nThe dates returned for each flight represent the scheduled departure date in local time and can be used to query flight data via /flight/info., required_params: [{\"name\": \"direction\", \"type\": \"STRING\", \"description\": \"Direction, one of \\\"arrival\\\", \\\"departure\\\"\"}, {\"name\": \"time\", \"type\": \"STRING\", \"description\": \"Timestamp in UTC. If direction is \\\"arrival\\\", show flights with scheduled arrival time prior to this timestamp. If direction is \\\"departure\\\", show flights with scheduled departure time after this timestamp. Expected in any valid format, such as 2022-01-01T12:00:00.000Z. Maximum range of flights returned is 30 days.\"}, {\"name\": \"ident\", \"type\": \"STRING\", \"description\": \"Ident of the airport to request. Ident is the unique identifier as returned by /airport/search or /airport/info endpoints.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "448", "title": "", "text": "category_name:Travel, tool_name:Flightera Flight Data, api_name:airportInfo, api_description:Returns detailed airport information for airports identified by the provided identifiers. In most cases the list should contain only one entry.\nHowever, due to the nature of the data, it is possible that multiple entries are returned.\nIf searched by ident, only one airport is returned.\nOne of ident, iata, icao, localID must be provided., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "449", "title": "", "text": "category_name:Transportation, tool_name:TimeTable Lookup , api_name:airports - Carriers operating out of an airport, api_description:Return a list of carriers operating out of an airport, required_params: [{\"name\": \"airportiatacode\", \"type\": \"string\", \"description\": \"Airport IATA Code\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "450", "title": "", "text": "category_name:Transportation, tool_name:TimeTable Lookup , api_name:airports - Nonstop and direct routes for an airport, api_description:Returns a list of nonstop and direct routes for an airport, required_params: [{\"name\": \"airportiatacode\", \"type\": \"string\", \"description\": \"Airport IATA Code\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "451", "title": "", "text": "category_name:Translation, tool_name:Microsoft Translator Text, api_name:Languages, api_description:Gets the set of languages currently supported by other operations of the Translator Text API., required_params: [{\"name\": \"api-version\", \"type\": \"STRING\", \"description\": \"Version of the API requested by the client. Value must be **3.0**.\"}], optional_params: [], return_schema: {\"error\": {\"code\": \"int\", \"message\": \"str\"}}", "metadata": {}}
{"_id": "452", "title": "", "text": "category_name:Education, tool_name:Numbers Translator, api_name:Numbers Translator, api_description:Numbers Translator, required_params: [], optional_params: [], return_schema: {\"success\": {\"total\": \"int\"}, \"contents\": {\"translated\": \"str\", \"text\": \"str\", \"translation\": \"str\"}}", "metadata": {}}
{"_id": "453", "title": "", "text": "category_name:Tools, tool_name:Shakespeare Translator, api_name:shakespeare, api_description:Shakespeare Translator, required_params: [{\"name\": \"text\", \"type\": \"STRING\", \"description\": \"Text to convert to Shakespeare style English.\"}], optional_params: [], return_schema: {\"success\": {\"total\": \"int\"}, \"contents\": {\"translated\": \"str\", \"text\": \"str\", \"translation\": \"str\"}}", "metadata": {}}
{"_id": "454", "title": "", "text": "category_name:Business, tool_name:MyMemory - Translation Memory, api_name:set contribution, api_description:The SET api is used to save a contribution. You can either save a contribution privately with your private TM key or add it to the public collaborative TM., required_params: [{\"name\": \"seg\", \"type\": \"STRING\", \"description\": \"The source segment\"}, {\"name\": \"tra\", \"type\": \"STRING\", \"description\": \"The translation of the source segment\"}, {\"name\": \"langpair\", \"type\": \"STRING\", \"description\": \"Source and language pair, separated by the | symbol. Use ISO standard names or RFC3066\"}], optional_params: [], return_schema: {\"responseData\": {\"translatedText\": \"str\"}, \"quotaFinished\": \"NoneType\", \"mtLangSupported\": \"NoneType\", \"responseDetails\": \"str\", \"responseStatus\": \"str\", \"responderId\": \"NoneType\", \"exception_code\": \"NoneType\", \"matches\": \"str\"}", "metadata": {}}
{"_id": "455", "title": "", "text": "category_name:Data, tool_name:Dicolink, api_name:Get Expressions, api_description:Get Expression with a specific word, required_params: [{\"name\": \"mot\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"mot\": \"str\", \"expression\": \"str\", \"semantique\": \"str\", \"contexte\": \"str\"}", "metadata": {}}
{"_id": "456", "title": "", "text": "category_name:Data, tool_name:Dicolink, api_name:Get Scrabble score, api_description:Get Scrabble score for a word, required_params: [{\"name\": \"mot\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"mot\": \"str\", \"score\": \"int\"}", "metadata": {}}
{"_id": "457", "title": "", "text": "category_name:Data, tool_name:Dicolink, api_name:Get Lexical Field, api_description:Get Lexical Field for a word, required_params: [{\"name\": \"mot\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"mot\": \"str\", \"dicolinkUrl\": \"str\"}", "metadata": {}}
{"_id": "458", "title": "", "text": "category_name:Business, tool_name:MyMemory - Translation Memory, api_name:create key, api_description:MyMemory provides a specific API to create a new private TM key. Such key can be then used in the API call to identify a private TM or to privately contribute to a TM. Every contribution that has been created with a private TM key will be only shown if the same private TM key is used in the GET call; no other users will see private contributions without the right private TM key., required_params: [], optional_params: [], return_schema: {\"key\": \"str\", \"error\": \"str\", \"code\": \"int\", \"id\": \"str\", \"pass\": \"str\"}", "metadata": {}}
{"_id": "459", "title": "", "text": "category_name:Travel, tool_name:Hotels, api_name:locations/v3/search, api_description:Search for related locations and suggestions, required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Name of countries, cities, districts, places, etc...\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "460", "title": "", "text": "category_name:Travel, tool_name:Hotels, api_name:get-meta-data (Deprecated), api_description:Get locale meta data, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "461", "title": "", "text": "category_name:Medical, tool_name:EndlessMedicalAPI, api_name:GetOutcomes, api_description:GetOutcomes, required_params: [], optional_params: [], return_schema: {\"status\": \"str\", \"data\": [\"list of str with length 385\"]}", "metadata": {}}
{"_id": "462", "title": "", "text": "category_name:Medical, tool_name:EndlessMedicalAPI, api_name:GetFeatures, api_description:GetFeatures, required_params: [], optional_params: [], return_schema: {\"status\": \"str\", \"data\": [\"list of str with length 837\"]}", "metadata": {}}
{"_id": "463", "title": "", "text": "category_name:Data, tool_name:Corona virus World and India data, api_name:COVID-19 India data state and district wise, api_description:COVID-19 India data state and district wise, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "464", "title": "", "text": "category_name:Data, tool_name:Corona virus World and India data, api_name:COVID-19 World data country wise, api_description:COVID-19 World data country wise, required_params: [], optional_params: [], return_schema: {\"countries_stat\": [{\"country_name\": \"str\", \"cases\": \"str\", \"deaths\": \"str\", \"region\": \"str\", \"total_recovered\": \"str\", \"new_deaths\": \"str\", \"new_cases\": \"str\", \"serious_critical\": \"str\", \"active_cases\": \"str\", \"total_cases_per_1m_population\": \"str\", \"deaths_per_1m_population\": \"str\", \"total_tests\": \"str\", \"tests_per_1m_population\": \"str\", \"_list_length\": 228}], \"statistic_taken_at\": \"str\", \"world_total\": {\"total_cases\": \"str\", \"new_cases\": \"str\", \"total_deaths\": \"str\", \"new_deaths\": \"str\", \"total_recovered\": \"str\", \"active_cases\": \"str\", \"serious_critical\": \"str\", \"total_cases_per_1m_population\": \"str\", \"deaths_per_1m_population\": \"str\", \"statistic_taken_at\": \"str\"}}", "metadata": {}}
{"_id": "465", "title": "", "text": "category_name:Data, tool_name:Corona virus World and India data, api_name:India Timeline data starting from 30th Jan 2020, api_description:India timeline data, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "466", "title": "", "text": "category_name:Finance, tool_name:Global Ethereum Price Index - GEX, api_name:Short Ticker, api_description:Returns basic ticker denoting last and daily average price for all symbols, required_params: [{\"name\": \"market\", \"type\": \"STRING\", \"description\": \"Possible values: global, local\"}], optional_params: [], return_schema: {\"ETHEUR\": {\"last\": \"float\", \"averages\": {\"day\": \"float\"}, \"timestamp\": \"int\", \"ask\": \"float\", \"bid\": \"float\"}, \"ETHUSD\": {\"last\": \"float\", \"averages\": {\"day\": \"float\"}, \"timestamp\": \"int\", \"ask\": \"float\", \"bid\": \"float\"}}", "metadata": {}}
{"_id": "467", "title": "", "text": "category_name:Finance, tool_name:Global Ethereum Price Index - GEX, api_name:Ticker Changes, api_description:Returns ticker values and price changes for specified market and symbol., required_params: [{\"name\": \"market\", \"type\": \"STRING\", \"description\": \"Possible values: global, local\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Possible values: ETH<fiat> where <fiat> is valid ISO currency (ex. ETHUSD)\"}], optional_params: [], return_schema: {\"ask\": \"float\", \"bid\": \"float\", \"last\": \"float\", \"high\": \"float\", \"low\": \"float\", \"open\": {\"hour\": \"float\", \"day\": \"float\", \"week\": \"float\", \"month\": \"float\", \"month_3\": \"float\", \"month_6\": \"float\", \"year\": \"float\"}, \"averages\": {\"day\": \"float\", \"week\": \"float\", \"month\": \"float\"}, \"volume\": \"float\", \"changes\": {\"price\": {\"hour\": \"float\", \"day\": \"float\", \"week\": \"float\", \"month\": \"float\", \"month_3\": \"float\", \"month_6\": \"float\", \"year\": \"float\"}, \"percent\": {\"hour\": \"float\", \"day\": \"float\", \"week\": \"float\", \"month\": \"float\", \"month_3\": \"float\", \"month_6\": \"float\", \"year\": \"float\"}}, \"volume_percent\": \"float\", \"timestamp\": \"int\", \"display_timestamp\": \"str\", \"display_symbol\": \"str\"}", "metadata": {}}
{"_id": "468", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:getEthereumBalance, api_description:Returns the ethereum balance of a given address., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "469", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Cordano Balance, api_description:This endpoint will return back the Cordano balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "470", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Dogelon Mars Balance From Specific Network, api_description:This endpoint will return back the Dogelon Mars balance of an address in a specific network., required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"network\", \"type\": \"string\", \"description\": \"network can take the value : \\n- eth\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "471", "title": "", "text": "category_name:Finance, tool_name:Global Ethereum Price Index - GEX, api_name:Ticker Per Symbol, api_description:Returns ticker data for specified symbol, required_params: [{\"name\": \"market\", \"type\": \"STRING\", \"description\": \"Possible values: global, local\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"ETH<fiat>, where <fiat> is valid ISO currency (ex. ETHUSD, ETHEUR)\"}], optional_params: [], return_schema: {\"ask\": \"float\", \"bid\": \"float\", \"last\": \"float\", \"high\": \"float\", \"low\": \"float\", \"volume\": \"float\", \"open\": {\"hour\": \"float\", \"day\": \"float\", \"week\": \"float\", \"month\": \"float\", \"month_3\": \"float\", \"month_6\": \"float\", \"year\": \"float\"}, \"averages\": {\"day\": \"float\", \"week\": \"float\", \"month\": \"float\"}, \"changes\": {\"price\": {\"hour\": \"float\", \"day\": \"float\", \"week\": \"float\", \"month\": \"float\", \"month_3\": \"float\", \"month_6\": \"float\", \"year\": \"float\"}, \"percent\": {\"hour\": \"float\", \"day\": \"float\", \"week\": \"float\", \"month\": \"float\", \"month_3\": \"float\", \"month_6\": \"float\", \"year\": \"float\"}}, \"volume_percent\": \"float\", \"timestamp\": \"int\", \"display_timestamp\": \"str\", \"display_symbol\": \"str\"}", "metadata": {}}
{"_id": "472", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Solana Balance, api_description:This endpoint will return back the Solana balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "473", "title": "", "text": "category_name:Finance, tool_name:Trading View, api_name:news/list, api_description:List latest news with options and filters, required_params: [], optional_params: [], return_schema: {\"shortDescription\": \"str\", \"astDescription\": {\"type\": \"str\", \"children\": [{\"type\": \"str\", \"children\": [\"list of str with length 3\"], \"_list_length\": 5}]}, \"language\": \"str\", \"id\": \"str\", \"title\": \"str\", \"provider\": \"str\", \"sourceLogoId\": \"str\", \"published\": \"int\", \"source\": \"str\", \"urgency\": \"int\", \"permission\": \"str\", \"relatedSymbols\": [{\"symbol\": \"str\", \"logoid\": \"str\", \"_list_length\": 1}], \"storyPath\": \"str\"}", "metadata": {}}
{"_id": "474", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get PancakeSwap Balance From Specific Network, api_description:This endpoint will return back the PancakeSwap balance of an address in a specific network., required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"network\", \"type\": \"string\", \"description\": \"network can take the value : \\n- bsc\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "475", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get BNB Balance From Specific Network, api_description:This endpoint will return back the BNB balance of an address in a specific network., required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"network\", \"type\": \"string\", \"description\": \"network can take the value : \\n- bnb\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "476", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Cosmos Balance, api_description:This endpoint will return back the Cosmos balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "477", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Shiba Inu Balance From Specific Network, api_description:This endpoint will return back the Shiba Inu balance of an address in a specific network., required_params: [{\"name\": \"network\", \"type\": \"string\", \"description\": \"network can take the value : \\n- eth\"}, {\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "478", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Tezos Balance, api_description:This endpoint will return back the Tezos balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "479", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Dogecoin Balance, api_description:This endpoint will return back the Dogecoin balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "480", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get TRON Balance, api_description:This endpoint will return back the TRON balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "481", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Polygon Balance From Specific Network, api_description:This endpoint will return back the Polygon balance of an address in a specific network., required_params: [{\"name\": \"network\", \"type\": \"string\", \"description\": \"network can take the value : \\n- eth\"}, {\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "482", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Zilliqa Balance, api_description:This endpoint will return back the Zilliqa balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "483", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get VeThor Token Balance, api_description:This endpoint will return back the VeThor Token balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "484", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get coin price history, api_description:Coinranking keeps track of prices on all listed assets. The history endpoint lists prices and their timestamp for the requested time period, useful for making a chart., required_params: [{\"name\": \"uuid\", \"type\": \"string\", \"description\": \"UUID of the coin you want to request\"}], optional_params: [], return_schema: {\"status\": \"str\", \"data\": {\"change\": \"str\", \"history\": [{\"price\": \"str\", \"timestamp\": \"int\", \"_list_length\": 288}]}}", "metadata": {}}
{"_id": "485", "title": "", "text": "category_name:Finance, tool_name:Trading View, api_name:calendars/get-economic-calendar, api_description:Get economic calendar by specific date range and countries, required_params: [{\"name\": \"from\", \"type\": \"STRING\", \"description\": \"The date format is yyyy-MM-dd. Ex : 2022-08-21\"}, {\"name\": \"to\", \"type\": \"STRING\", \"description\": \"The date format is yyyy-MM-dd. Ex : 2022-09-05\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "486", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Holo Balance From Specific Network, api_description:This endpoint will return back the Holo balance of an address in a specific network., required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"network\", \"type\": \"string\", \"description\": \"network can take the value : \\n- eth\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "487", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get 1Inch Balance From Specific Network, api_description:This endpoint will return back the 1Inch balance of an address in a specific network., required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"network\", \"type\": \"string\", \"description\": \"network can take the value : \\n- eth\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "488", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:getLastBlockNumber, api_description:Returns the block number of the last mined ethereum block., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "489", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:listAddresses, api_description:Returns all ethereum addresses created with an account., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "490", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get search suggestions, api_description:Search suggestions are a quick and easy way to find data on coinranking. The endpoint only accepts one parameter; a query. With this query you can find currencies (including fiat), exchanges and markets, by their symbol or name. The response always returns a set of the most prominent coins, exchanges and markets matching your query., required_params: [], optional_params: [], return_schema: {\"status\": \"str\", \"data\": {\"coins\": [{\"uuid\": \"str\", \"iconUrl\": \"str\", \"name\": \"str\", \"symbol\": \"str\", \"price\": \"str\", \"_list_length\": 8}], \"exchanges\": [{\"uuid\": \"str\", \"iconUrl\": \"str\", \"name\": \"str\", \"recommended\": \"bool\", \"_list_length\": 3}], \"markets\": [{\"uuid\": \"str\", \"baseSymbol\": \"str\", \"quoteSymbol\": \"str\", \"baseUuid\": \"str\", \"quoteUuid\": \"str\", \"exchangeIconUrl\": \"str\", \"exchangeName\": \"str\", \"exchangeUuid\": \"str\", \"recommended\": \"bool\", \"_list_length\": 3}]}}", "metadata": {}}
{"_id": "491", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get markets, api_description:Get a list of markets. Markets are ranked by their volume over the last 24 hours. Use our filters to get a subset of the markets.\nThis endpoint requires the **ultra** plan or higher., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "492", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get exchange, api_description:Find information on a specific exchange listed on coinranking. An exchange is a place where cryptocurrencies are traded.\nThis endpoint requires the **ultra** plan or higher., required_params: [{\"name\": \"uuid\", \"type\": \"string\", \"description\": \"UUID of the exchange you want to request\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "493", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Search flights, api_description:Search flights. Set type: `ONE_WAY` or `ROUND_TRIP`. Set location_departure and location_arrival, use `/flights/locations` api point. You can filter out tickets by price, max duration and number of stops, required_params: [{\"name\": \"date_departure\", \"type\": \"STRING\", \"description\": \"Departure date\"}, {\"name\": \"location_departure\", \"type\": \"STRING\", \"description\": \"Departure location code. Use `Search locations` api point\"}, {\"name\": \"class_type\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"sort_order\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"itinerary_type\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"location_arrival\", \"type\": \"STRING\", \"description\": \"Arrival location  code\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "494", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Downalods hotels, api_description:Downalods a list of Hotels, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "495", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Booking details of the hotel, api_description:Get hotel descriptions, prices and available booking options. Indicate the hotel_id, check-in and check-out date, required_params: [{\"name\": \"date_checkin\", \"type\": \"STRING\", \"description\": \"Checkin date\"}, {\"name\": \"hotel_id\", \"type\": \"NUMBER\", \"description\": \"Hotel id\"}, {\"name\": \"date_checkout\", \"type\": \"STRING\", \"description\": \"Checkout date\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "496", "title": "", "text": "category_name:Entertainment, tool_name:SongMeanings, api_name:lyrics.get, api_description:Retrieves lyrics and lyric related data for a specific song., required_params: [{\"name\": \"sm_lid\", \"type\": \"STRING\", \"description\": \"SongMeanings Lyric ID. When specified, this parameter will bypass any other lyric identification parameters.\"}, {\"name\": \"lyric_title\", \"type\": \"STRING\", \"description\": \"Song or track title.\"}, {\"name\": \"artist_name\", \"type\": \"STRING\", \"description\": \"Artist name.\"}, {\"name\": \"format\", \"type\": \"STRING\", \"description\": \"Decide the output type (either xml or json); xml is default.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "497", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:BILLBOARD JAPAN HOT 100, api_description:Provide the BILLBOARD JAPAN HOT 100 chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"max range(1-100)\"}], optional_params: [], return_schema: \"{\\\"info\\\": {\\\"category\\\": \\\"str\\\", \\\"chart\\\": \\\"str\\\", \\\"date\\\": \\\"str\\\", \\\"source\\\": \\\"str\\\"}, \\\"content\\\": {\\\"1\\\": {\\\"rank\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"artist\\\": \\\"str\\\", \\\"weeks at no.1\\\": \\\"str\\\", \\\"award\\\": \\\"bool\\\", \\\"last week\\\": \\\"str\\\", \\\"peak position\\\": \\\"str\\\", \\\"weeks on chart\\\": \\\"str\\\", \\\"detail\\\": \\\"str\\\"}, \\\"2\\\": {\\\"rank\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"artist\\\": \\\"str\\\", \\\"award\\\": \\\"bool\\\", \\\"last week\\\": \\\"str\\\", \\\"peak position\\\": \\\"str\\\", \\\"weeks on chart\\\": \\\"str\\\", \\\"detail\\\": \\\"str\\\"}, \\\"3\\\": {\\\"rank\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"artist\\\": \\\"str\\\", \\\"award\\\": \\\"bool\\\", \\\"last week\\\": \\\"str\\\", \\\"peak position\\\": \\\"str\\\", \\\"weeks on chart\\\": \\\"str\\\", \\\"detail\\\": \\\"str\\\"}, \\\"4\\\": {\\\"rank\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"artist\\\": \\\"str\\\", \\\"award\\\": \\\"bool\\\", \\\"last week\\\": \\\"str\\\", \\\"peak position\\\": \\\"str\\\", \\\"weeks on chart\\\": \\\"str\\\", \\\"detail\\\": \\\"str\\\"}, \\\"5\\\": {\\\"rank\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"artist\\\": \\\"str\\\", \\\"award\\\": \\\"bool\\\", \\\"last week\\\": \\\"str\\\", \\\"peak position\\\": \\\"str\\\", \\\"weeks on chart\\\": \\\"str\\\", \\\"detail\\\": \\\"str\\\"}, \\\"6\\\": {\\\"rank\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"artist\\\": \\\"str\\\", \\\"award\\\": \\\"bool\\\", \\\"last week\\\": \\\"str\\\", \\\"peak\"", "metadata": {}}
{"_id": "498", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:songs/list-artist-top-tracks (Deprecated), api_description:List top tracks of specific artist, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The id field inside artists json object returned from .../songs/detect or .../search endpoint\"}], optional_params: [], return_schema: \"{\\\"tracks\\\": [{\\\"layout\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"key\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"subtitle\\\": \\\"str\\\", \\\"share\\\": {\\\"subject\\\": \\\"str\\\", \\\"text\\\": \\\"str\\\", \\\"href\\\": \\\"str\\\", \\\"image\\\": \\\"str\\\", \\\"twitter\\\": \\\"str\\\", \\\"html\\\": \\\"str\\\", \\\"avatar\\\": \\\"str\\\", \\\"snapchat\\\": \\\"str\\\"}, \\\"images\\\": {\\\"background\\\": \\\"str\\\", \\\"coverart\\\": \\\"str\\\", \\\"coverarthq\\\": \\\"str\\\", \\\"joecolor\\\": \\\"str\\\"}, \\\"hub\\\": {\\\"type\\\": \\\"str\\\", \\\"image\\\": \\\"str\\\", \\\"actions\\\": [{\\\"name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"id\\\": \\\"str\\\", \\\"_list_length\\\": 2}], \\\"options\\\": [{\\\"caption\\\": \\\"str\\\", \\\"actions\\\": [{\\\"name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\", \\\"_list_length\\\": 2}], \\\"beacondata\\\": {\\\"type\\\": \\\"str\\\", \\\"providername\\\": \\\"str\\\"}, \\\"image\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"listcaption\\\": \\\"str\\\", \\\"overflowimage\\\": \\\"str\\\", \\\"colouroverflowimage\\\": \\\"bool\\\", \\\"providername\\\": \\\"str\\\", \\\"_list_length\\\": 2}], \\\"providers\\\": [{\\\"caption\\\": \\\"str\\\", \\\"images\\\": {\\\"overflow\\\": \\\"str\\\", \\\"default\\\": \\\"str\\\"}, \\\"actions\\\": [{\\\"name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"type\\\": \\\"str\\\", \\\"_list_length\\\": 2}], \\\"explicit\\\": \\\"bool\\\", \\\"displayname\\\": \\\"str\\\"}, \"", "metadata": {}}
{"_id": "499", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Holiday 100 Songs, api_description:Provide the Greatest of All Time Holiday 100 Songs chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "500", "title": "", "text": "category_name:Entertainment, tool_name:SongMeanings, api_name:users.favorite.get, api_description:Get a user’s favorites by specified type., required_params: [{\"name\": \"sm_uid\", \"type\": \"STRING\", \"description\": \"User ID to grab favorites for\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "501", "title": "", "text": "category_name:Music, tool_name:Shazam, api_name:shazam-songs/list-similarities, api_description:Get similar (You may also like) songs, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of 'related-tracks->id' field returned in .../shazam-songs/get-details endpoint\"}], optional_params: [], return_schema: \"{\\\"data\\\": [{\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"resources\\\": {\\\"shazam-song-lists\\\": {\\\"track-similarities-id-424767377\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"relationships\\\": {\\\"tracks\\\": {\\\"data\\\": [{\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"_list_length\\\": 20}]}}}}, \\\"albums\\\": {\\\"1533678938\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"attributes\\\": {\\\"artistName\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"releaseDate\\\": \\\"str\\\"}}, \\\"1387814084\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"attributes\\\": {\\\"artistName\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"releaseDate\\\": \\\"str\\\"}}, \\\"793285794\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"attributes\\\": {\\\"artistName\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"releaseDate\\\": \\\"str\\\"}}, \\\"1530573299\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"attributes\\\": {\\\"artistName\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"releaseDate\\\": \\\"str\\\"}}, \\\"850585388\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"attributes\\\": {\\\"artistName\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"releaseDate\\\": \\\"str\\\"}}, \\\"1505862984\\\": {\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"attributes\\\": {\\\"artistName\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"releaseDate\\\": \\\"str\\\"}}, \\\"1217911994\\\": {\\\"id\\\": \\\"str\\\", \\\"t\"", "metadata": {}}
{"_id": "502", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Top Artists - Male, api_description:Provide the YEAR-END Top Artists - Male chart information\n\nIf `year` is not supplied, will default to last year., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "503", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Mainstream Rock Artists, api_description:Provide the Greatest of All Time Mainstream Rock Artists chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "504", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Hungary Songs, api_description:Provide the Hungary Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "505", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Luxembourg Songs, api_description:Provide the Luxembourg Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "506", "title": "", "text": "category_name:Entertainment, tool_name:Deezer, api_name:Playlist, api_description:A playlist object, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The playlist's Deezer id\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "507", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Hot 100 Artists, api_description:Provide the Greatest of All Time Hot 100 Artists chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "508", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Switzerland Songs, api_description:Provide the Switzerland Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "509", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Slovakia Songs, api_description:Provide the Slovakia Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "510", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Adult Pop Songs Artists, api_description:Provide the Greatest of All Time Adult Pop Songs Artists chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "511", "title": "", "text": "category_name:Entertainment, tool_name:SongMeanings, api_name:songs.search, api_description:, required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Query string\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "512", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Singapore Songs, api_description:Provide the Singapore Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "513", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Hot 100 Songs, api_description:Provide the YEAR-END Hot 100 Songs chart information\n\nIf `year` is not supplied, will default to last year., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "514", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Top R&B/Hip-Hop Artists, api_description:Provide the Greatest of All Time Top R&B/Hip-Hop Artists chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "515", "title": "", "text": "category_name:Food, tool_name:Yummly, api_name:feeds/list-similarities, api_description:List similar recipes by name and author, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of id field returned in feeds/list and feeds/search API\"}, {\"name\": \"limit\", \"type\": \"NUMBER\", \"description\": \"Number of items returned per response\"}, {\"name\": \"start\", \"type\": \"NUMBER\", \"description\": \"The offset of items to be ignored in response for paging\"}], optional_params: [], return_schema: \"{\\\"feed\\\": [{\\\"seo\\\": {\\\"web\\\": {\\\"noindex\\\": \\\"bool\\\", \\\"canonical-term\\\": \\\"str\\\", \\\"meta-tags\\\": {\\\"title\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\"}, \\\"link-tags\\\": [{\\\"rel\\\": \\\"str\\\", \\\"href\\\": \\\"str\\\", \\\"_list_length\\\": 3}], \\\"image-url\\\": \\\"str\\\", \\\"redirect\\\": {\\\"permanent\\\": \\\"bool\\\", \\\"path\\\": \\\"str\\\", \\\"locale\\\": \\\"str\\\", \\\"domain\\\": \\\"str\\\"}}, \\\"spotlightSearch\\\": {\\\"keywords\\\": [\\\"list of str with length 20\\\"], \\\"noindex\\\": \\\"bool\\\"}, \\\"firebase\\\": {\\\"webUrl\\\": \\\"str\\\", \\\"appUrl\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\"}}, \\\"tracking-id\\\": \\\"str\\\", \\\"locale\\\": \\\"str\\\", \\\"content\\\": {\\\"description\\\": {\\\"mobileSectionName\\\": \\\"str\\\", \\\"text\\\": \\\"str\\\", \\\"shortText\\\": \\\"NoneType\\\"}, \\\"urbSubmitters\\\": \\\"empty list\\\", \\\"tags\\\": {\\\"course\\\": [{\\\"display-name\\\": \\\"str\\\", \\\"tag-url\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"cuisine\\\": [{\\\"display-name\\\": \\\"str\\\", \\\"tag-url\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"difficulty\\\": [{\\\"display-name\\\": \\\"str\\\", \\\"tag-url\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"nutrition\\\": [{\\\"display-name\\\": \\\"str\\\", \\\"tag-url\\\": \\\"str\\\", \\\"_list_length\\\": 5}]}, \\\"preparationSteps\\\": [\\\"list of str with length 7\\\"], \\\"vid\"", "metadata": {}}
{"_id": "516", "title": "", "text": "category_name:Weather, tool_name:Plant Hardiness Zone, api_name:Retrieve the Hardiness Zone, api_description:Pass a ZIP code in the endpoint path to return an object that includes the ZIP code and USDA Plant Hardiness Zone., required_params: [{\"name\": \"zipcode\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"hardiness_zone\": \"str\", \"zipcode\": \"str\"}", "metadata": {}}
{"_id": "517", "title": "", "text": "category_name:Food, tool_name:Yummly, api_name:categories/list, api_description:List all categories of recipes, required_params: [], optional_params: [], return_schema: {\"browse-categories\": [{\"promoted\": \"bool\", \"tracking-id\": \"str\", \"display\": {\"displayName\": \"str\", \"iconImage\": \"str\", \"categoryImage\": \"str\", \"tag\": \"str\"}, \"content\": {}, \"type\": \"str\", \"_list_length\": 12}], \"shopping-categories\": [{\"promoted\": \"bool\", \"tracking-id\": \"str\", \"display\": {\"displayName\": \"str\", \"categoryImage\": \"str\", \"tag\": \"str\"}, \"content\": {}, \"type\": \"str\", \"_list_length\": 14}]}", "metadata": {}}
{"_id": "518", "title": "", "text": "category_name:Finance, tool_name:Currency Conversion and Exchange Rates, api_name:Recent Exchange Rates, api_description:Retrieve the latest exchange rate data. Refresh rate will depend on your subscription: updated every 60 minutes, every 10 minutes or every 60 seconds., required_params: [], optional_params: [], return_schema: \"{\\\"timestamp\\\": \\\"int\\\", \\\"base\\\": \\\"str\\\", \\\"success\\\": \\\"bool\\\", \\\"date\\\": \\\"str\\\", \\\"rates\\\": {\\\"ANG\\\": \\\"float\\\", \\\"SVC\\\": \\\"float\\\", \\\"CAD\\\": \\\"float\\\", \\\"XCD\\\": \\\"float\\\", \\\"MVR\\\": \\\"float\\\", \\\"HRK\\\": \\\"float\\\", \\\"AUD\\\": \\\"float\\\", \\\"MWK\\\": \\\"float\\\", \\\"XAG\\\": \\\"float\\\", \\\"MAD\\\": \\\"float\\\", \\\"PHP\\\": \\\"float\\\", \\\"NAD\\\": \\\"float\\\", \\\"GNF\\\": \\\"float\\\", \\\"KES\\\": \\\"float\\\", \\\"MZN\\\": \\\"float\\\", \\\"BTN\\\": \\\"float\\\", \\\"MGA\\\": \\\"float\\\", \\\"AZN\\\": \\\"float\\\", \\\"XAU\\\": \\\"float\\\", \\\"RON\\\": \\\"float\\\", \\\"CHF\\\": \\\"float\\\", \\\"EGP\\\": \\\"float\\\", \\\"BSD\\\": \\\"float\\\", \\\"TWD\\\": \\\"float\\\", \\\"GGP\\\": \\\"float\\\", \\\"LVL\\\": \\\"float\\\", \\\"MMK\\\": \\\"float\\\", \\\"WST\\\": \\\"float\\\", \\\"ILS\\\": \\\"float\\\", \\\"BHD\\\": \\\"float\\\", \\\"GBP\\\": \\\"float\\\", \\\"TZS\\\": \\\"float\\\", \\\"SDG\\\": \\\"float\\\", \\\"LAK\\\": \\\"float\\\", \\\"DJF\\\": \\\"float\\\", \\\"BYN\\\": \\\"float\\\", \\\"MRO\\\": \\\"float\\\", \\\"RWF\\\": \\\"float\\\", \\\"PEN\\\": \\\"float\\\", \\\"EUR\\\": \\\"int\\\", \\\"ZMK\\\": \\\"float\\\", \\\"RSD\\\": \\\"float\\\", \\\"INR\\\": \\\"float\\\", \\\"MUR\\\": \\\"float\\\", \\\"BWP\\\": \\\"float\\\", \\\"GEL\\\": \\\"float\\\", \\\"KMF\\\": \\\"float\\\", \\\"UZS\\\": \\\"float\\\", \\\"RUB\\\": \\\"float\\\", \\\"CUC\\\": \\\"float\\\", \\\"BGN\\\": \\\"float\\\", \\\"JOD\\\": \\\"float\\\", \\\"NGN\\\": \\\"float\\\", \\\"BDT\\\": \\\"float\\\", \\\"PKR\\\": \\\"float\\\", \\\"BRL\\\": \\\"float\\\", \\\"KZT\\\": \\\"float\\\", \\\"CVE\\\": \\\"fl\"", "metadata": {}}
{"_id": "519", "title": "", "text": "category_name:Finance, tool_name:Currency Conversion and Exchange Rates, api_name:Time-Series Endpoint, api_description:Retrieve historical rates between two specified dates.\n\n`Maximum of 365 day time range`, required_params: [{\"name\": \"start_date\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"end_date\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"{\\\"start_date\\\": \\\"str\\\", \\\"base\\\": \\\"str\\\", \\\"success\\\": \\\"bool\\\", \\\"end_date\\\": \\\"str\\\", \\\"timeseries\\\": \\\"bool\\\", \\\"rates\\\": {\\\"2019-01-02\\\": {\\\"ANG\\\": \\\"float\\\", \\\"SVC\\\": \\\"float\\\", \\\"CAD\\\": \\\"float\\\", \\\"XCD\\\": \\\"float\\\", \\\"MVR\\\": \\\"float\\\", \\\"HRK\\\": \\\"float\\\", \\\"AUD\\\": \\\"float\\\", \\\"MWK\\\": \\\"float\\\", \\\"XAG\\\": \\\"float\\\", \\\"MAD\\\": \\\"float\\\", \\\"PHP\\\": \\\"float\\\", \\\"NAD\\\": \\\"float\\\", \\\"GNF\\\": \\\"float\\\", \\\"KES\\\": \\\"float\\\", \\\"MZN\\\": \\\"float\\\", \\\"BTN\\\": \\\"float\\\", \\\"MGA\\\": \\\"float\\\", \\\"AZN\\\": \\\"float\\\", \\\"XAU\\\": \\\"float\\\", \\\"RON\\\": \\\"float\\\", \\\"CHF\\\": \\\"float\\\", \\\"EGP\\\": \\\"float\\\", \\\"BSD\\\": \\\"float\\\", \\\"TWD\\\": \\\"float\\\", \\\"GGP\\\": \\\"float\\\", \\\"LVL\\\": \\\"float\\\", \\\"MMK\\\": \\\"float\\\", \\\"WST\\\": \\\"float\\\", \\\"ILS\\\": \\\"float\\\", \\\"BHD\\\": \\\"float\\\", \\\"GBP\\\": \\\"float\\\", \\\"TZS\\\": \\\"float\\\", \\\"SDG\\\": \\\"float\\\", \\\"LAK\\\": \\\"float\\\", \\\"DJF\\\": \\\"float\\\", \\\"BYN\\\": \\\"float\\\", \\\"MRO\\\": \\\"float\\\", \\\"RWF\\\": \\\"float\\\", \\\"PEN\\\": \\\"float\\\", \\\"EUR\\\": \\\"int\\\", \\\"ZMK\\\": \\\"float\\\", \\\"RSD\\\": \\\"float\\\", \\\"INR\\\": \\\"float\\\", \\\"MUR\\\": \\\"float\\\", \\\"BWP\\\": \\\"float\\\", \\\"GEL\\\": \\\"float\\\", \\\"KMF\\\": \\\"float\\\", \\\"UZS\\\": \\\"float\\\", \\\"RUB\\\": \\\"float\\\", \\\"CUC\\\": \\\"float\\\", \\\"BGN\\\": \\\"float\\\", \\\"JOD\\\": \\\"float\\\", \\\"NGN\\\": \\\"float\\\", \\\"BDT\\\": \\\"float\\\", \\\"PKR\\\": \\\"float\\\", \"", "metadata": {}}
{"_id": "520", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Top Country Artists, api_description:Provide the Greatest of All Time Top Country Artists chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "521", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Billboard 200 Albums by Women, api_description:Provide the Greatest of All Time Billboard 200 Albums by Women chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "522", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Songs of the '80s, api_description:Provide the Greatest of All Time Songs of the '80s chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "523", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Sweden Songs, api_description:Provide the Sweden Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "524", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Colombia Songs, api_description:Provide the Colombia Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "525", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:New Zealand Songs, api_description:Provide the New Zealand Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "526", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Hot R&B/Hip-Hop Songs, api_description:Provide the Greatest of All Time Hot R&B/Hip-Hop Songs chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "527", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Top Holiday Albums, api_description:Provide the Greatest of All Time Top Holiday Albums chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "528", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:U.K. Songs, api_description:Provide the U.K. Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "529", "title": "", "text": "category_name:Search, tool_name:Bing Entity Search, api_name:Entities Search, api_description:Get entities and places results for a given query., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"The user's search term.\"}], optional_params: [], return_schema: {\"_type\": \"str\", \"errors\": [{\"code\": \"str\", \"subCode\": \"str\", \"message\": \"str\", \"moreDetails\": \"str\", \"parameter\": \"str\", \"value\": \"str\", \"_list_length\": 3}]}", "metadata": {}}
{"_id": "530", "title": "", "text": "category_name:Search, tool_name:Bing Autosuggest, api_name:Suggestions, api_description:This operation provides suggestions for a given query or partial query., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"The user's search term.\"}], optional_params: [], return_schema: {\"_type\": \"str\", \"errors\": [{\"code\": \"str\", \"subCode\": \"str\", \"message\": \"str\", \"moreDetails\": \"str\", \"parameter\": \"str\", \"value\": \"str\", \"_list_length\": 2}]}", "metadata": {}}
{"_id": "531", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get coin, api_description:Find information about a specific coin., required_params: [{\"name\": \"uuid\", \"type\": \"string\", \"description\": \"UUID of the coin you want to request. UUIDs of coins can be found using the Get coins endpoint or by checking the URL on coinranking.com, e.g. https://coinranking.com/coin/Qwsogvtv82FCd+bitcoin-btc is the URL for Bitcoin, and the part before the + (Qwsogvtv82FCd) is the UUID.\"}], optional_params: [], return_schema: {\"status\": \"str\", \"data\": {\"coin\": {\"uuid\": \"str\", \"symbol\": \"str\", \"name\": \"str\", \"description\": \"str\", \"color\": \"str\", \"iconUrl\": \"str\", \"websiteUrl\": \"str\", \"links\": [{\"name\": \"str\", \"type\": \"str\", \"url\": \"str\", \"_list_length\": 9}], \"supply\": {\"confirmed\": \"bool\", \"supplyAt\": \"int\", \"max\": \"str\", \"total\": \"str\", \"circulating\": \"str\"}, \"numberOfMarkets\": \"int\", \"numberOfExchanges\": \"int\", \"24hVolume\": \"str\", \"marketCap\": \"str\", \"fullyDilutedMarketCap\": \"str\", \"price\": \"str\", \"btcPrice\": \"str\", \"priceAt\": \"int\", \"change\": \"str\", \"rank\": \"int\", \"sparkline\": [\"list of str with length 24\"], \"allTimeHigh\": {\"price\": \"str\", \"timestamp\": \"int\"}, \"coinrankingUrl\": \"str\", \"tier\": \"int\", \"lowVolume\": \"bool\", \"listedAt\": \"int\", \"hasContent\": \"bool\", \"notices\": \"NoneType\", \"tags\": [\"list of str with length 2\"]}}}", "metadata": {}}
{"_id": "532", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get exchanges, api_description:Get a list of exchanges. Exchanges are ranked based on their trading volume in the last 24 hours.\nThis endpoint requires the **ultra** plan or higher., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "533", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get coin price, api_description:With the price endpoint the price can be requested for a specific coin on a specific time. The response is just a single price nearest to the requested time, including its timestamp., required_params: [{\"name\": \"uuid\", \"type\": \"string\", \"description\": \"UUID of the coin you need the price\"}], optional_params: [], return_schema: {\"status\": \"str\", \"data\": {\"price\": \"str\", \"timestamp\": \"int\"}}", "metadata": {}}
{"_id": "534", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get coins index, api_description:List of all coins currently available on coinranking, for indexing purposes.\nThis endpoint requires the **ultra** plan or higher., required_params: [], optional_params: [], return_schema: {\"status\": \"str\", \"coins\": [\"list of list with length 26694\"]}", "metadata": {}}
{"_id": "535", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get coin issuance blockchains, api_description:Get the issuance blockchains on which the coin is issued.\nThis endpoint requires the **ultra** plan or higher., required_params: [{\"name\": \"uuid\", \"type\": \"string\", \"description\": \"UUID of the coin you want to request the blockchains for\"}], optional_params: [], return_schema: {\"status\": \"str\", \"data\": {\"total\": \"int\", \"issuanceBlockchains\": [{\"name\": \"str\", \"referenceName\": \"str\", \"reference\": \"NoneType\", \"blockExplorerUrl\": \"str\", \"_list_length\": 1}]}}", "metadata": {}}
{"_id": "536", "title": "", "text": "category_name:Mapping, tool_name:NAVITIME Maps, api_name:map_image(GET), api_description:Get a static map image of the location, range and zoom value specified in the parameter., required_params: [{\"name\": \"width\", \"type\": \"NUMBER\", \"description\": \"Width of the map.\\n(Minimum value: 1, Maximum value: 999)\"}, {\"name\": \"center\", \"type\": \"STRING\", \"description\": \"Center of the map.\"}, {\"name\": \"zoom\", \"type\": \"NUMBER\", \"description\": \"Zoom level.\\n(Minimum value: 6, Maximum value: 19)\"}, {\"name\": \"height\", \"type\": \"NUMBER\", \"description\": \"Height of the map.\\n(Minimum value: 1, Maximum value: 999)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "537", "title": "", "text": "category_name:Mapping, tool_name:NAVITIME Maps, api_name:map_script, api_description:Get a JavaScript file to control the tile map that runs on the browser., required_params: [{\"name\": \"host\", \"type\": \"STRING\", \"description\": \"A domain name of your website.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "538", "title": "", "text": "category_name:Location, tool_name:IP Address Geolocation, api_name:IP Geolocation, api_description:Returns the geolocation of the given IP address, required_params: [{\"name\": \"ip\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "539", "title": "", "text": "category_name:Mapping, tool_name:Mexico ZIP Codes, api_name:Search zip codes, api_description:Search for valid zip codes with starting digits, required_params: [{\"name\": \"codigo_postal\", \"type\": \"STRING\", \"description\": \"Part of a zip code\"}], optional_params: [], return_schema: {\"codigos_postales\": [\"list of str with length 20\"]}", "metadata": {}}
{"_id": "540", "title": "", "text": "category_name:Mapping, tool_name:Mexico ZIP Codes, api_name:Zip Code Information, api_description:Retrieves the information of a particular zip code, required_params: [{\"name\": \"zip_code\", \"type\": \"STRING\", \"description\": \"A zip code\"}], optional_params: [], return_schema: {\"codigo_postal\": \"str\", \"municipio\": \"str\", \"estado\": \"str\", \"colonias\": [\"list of str with length 5\"]}", "metadata": {}}
{"_id": "541", "title": "", "text": "category_name:Data, tool_name:Zippopotam.us, api_name:Get Zip Code info, api_description:, required_params: [{\"name\": \"country\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"postal_code\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"post code\": \"str\", \"country\": \"str\", \"country abbreviation\": \"str\", \"places\": [{\"place name\": \"str\", \"longitude\": \"str\", \"state\": \"str\", \"state abbreviation\": \"str\", \"latitude\": \"str\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "542", "title": "", "text": "category_name:Tools, tool_name:Famous  Quotes, api_name:Get Random Quotes, api_description:Get multiple random quotes from chosen category or send **all** to get results from multiple categories.\nYou can view all categories on the Category endpoint, required_params: [{\"name\": \"count\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"category\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"author\": \"str\", \"category\": \"str\", \"text\": \"str\", \"id\": \"int\"}", "metadata": {}}
{"_id": "543", "title": "", "text": "category_name:Data, tool_name:WikiHow, api_name:Steps, api_description:Gets a random selection of WikiHow steps., required_params: [{\"name\": \"count\", \"type\": \"NUMBER\", \"description\": \"The number of step strings to retrieve (maximum 100)\"}], optional_params: [], return_schema: {\"1\": \"str\", \"2\": \"str\", \"3\": \"str\"}", "metadata": {}}
{"_id": "544", "title": "", "text": "category_name:Data, tool_name:WikiHow, api_name:Images, api_description:Gets the src URL for random WikiHow images, required_params: [{\"name\": \"count\", \"type\": \"NUMBER\", \"description\": \"The number of image URLs to retrieve (maximum 100)\"}], optional_params: [], return_schema: {\"1\": \"str\", \"2\": \"str\", \"3\": \"str\"}", "metadata": {}}
{"_id": "545", "title": "", "text": "category_name:Entertainment, tool_name:TVMaze, api_name:/shows/{id}, api_description:Get show information, required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "546", "title": "", "text": "category_name:Movies, tool_name:Streaming Availability, api_name:Get Ultra, api_description:Get the details of a show via IMDb or TMDb id, including the global streaming availability info, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "547", "title": "", "text": "category_name:Entertainment, tool_name:Minecraft-Forge-Optifine, api_name:minecraftVersionList, api_description:Return Minecraft version list in JSON format., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "548", "title": "", "text": "category_name:Entertainment, tool_name:Minecraft-Forge-Optifine, api_name:downloadOptimize, api_description:Redirect to download Optimize., required_params: [{\"name\": \"optifineversion\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "549", "title": "", "text": "category_name:Entertainment, tool_name:Minecraft-Forge-Optifine, api_name:optifineVersionList, api_description:Get Optifine version list., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "550", "title": "", "text": "category_name:Finance, tool_name:BB Finance, api_name:stories/list, api_description:Get a list of stories related to a sticker, required_params: [{\"name\": \"template\", \"type\": \"STRING\", \"description\": \"One of the followings : COMMODITY|CURRENCY|INDEX|INDEXFUTURE|RATE|STOCK\"}, {\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of id field returned in .../market/auto-complete endpoint\"}], optional_params: [], return_schema: {\"stories\": [{\"resourceType\": \"str\", \"card\": \"str\", \"title\": \"str\", \"published\": \"int\", \"internalID\": \"str\", \"label\": \"str\", \"thumbnailImage\": \"str\", \"primarySite\": \"str\", \"shortURL\": \"str\", \"longURL\": \"str\", \"_list_length\": 10}], \"title\": \"str\"}", "metadata": {}}
{"_id": "551", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Forex Pairs List, api_description:This API call return array of forex pairs available at Twelve Data API. This list is daily updated., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "552", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:MIDPOINT, api_description:MidPoint over period(MIDPOINT) is calculated as (highest value + lowest value) / 2., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "553", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Country Places, api_description:Get the places in the given country., required_params: [{\"name\": \"countryId\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "554", "title": "", "text": "category_name:eCommerce, tool_name:Forever21, api_name:products/search (Deprecated), api_description:Search for product by name, required_params: [{\"name\": \"start\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"rows\", \"type\": \"STRING\", \"description\": \"The number of records to return\"}, {\"name\": \"query\", \"type\": \"STRING\", \"description\": \"The name of products to look for\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "555", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:City Date-Time, api_description:Get the city current date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ, required_params: [{\"name\": \"cityid\", \"type\": \"STRING\", \"description\": \"The city id (either native id or wikiDataId)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "556", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Earnings Calendar, api_description:This API method returns earning data as a calendar for a given date range. By default today’s earning is returned. To call a custom period, use start_date and end_date parameters.\n\nAvailability: Pro plan\nData weighting: 40 API credits per symbol, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "557", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:market/v2/get-movers, api_description:Get movers, such as : actives, gainers, losers,  etc..., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "558", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/portfolio/get-holdings, api_description:Get holdings as displayed in the Portfolio tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "559", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:market/get-summary, api_description:Get live summary information at the request time, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "560", "title": "", "text": "category_name:Finance, tool_name:Investors Exchange (IEX) Trading, api_name:Time Series, api_description:Alternate way to access the chart endpoint, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "561", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/portfolio/get-maturity-schedule, api_description:Get maturity schedule as displayed in the Portfolio tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "562", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/analysis/get-comparables, api_description:Get Morningstar's analysis comparables related to an ETF or FUND, required_params: [{\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}, {\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "563", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-operating-performance, api_description:Mapped to Operating Performance tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "564", "title": "", "text": "category_name:Events, tool_name:Working days, api_name:/1.3/add_working_hours, api_description:Add an amount of working time to a given start date/time, required_params: [{\"name\": \"start_date\", \"type\": \"STRING\", \"description\": \"The start date (YYYY-MM-DD)\"}, {\"name\": \"country_code\", \"type\": \"STRING\", \"description\": \"The ISO country code (2 letters).  See <a href=https://api.workingdays.org/api-countries >available countries & configurations</a>\"}, {\"name\": \"start_time\", \"type\": \"STRING\", \"description\": \"The start time in a 24 hours format with leading zeros.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "565", "title": "", "text": "category_name:Communication, tool_name:31Events - Send Native Calendar Invites, api_name:AccoungGet, api_description:, required_params: [{\"name\": \"customer_id\", \"type\": \"STRING\", \"description\": \"Customer ID\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "566", "title": "", "text": "category_name:Communication, tool_name:31Events - Send Native Calendar Invites, api_name:EventGet, api_description:, required_params: [{\"name\": \"event_id\", \"type\": \"STRING\", \"description\": \"Event ID\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "567", "title": "", "text": "category_name:Events, tool_name:Working days, api_name:/1.3/define_custom_period, api_description:Defining a custom period (typically days of vacations of an employee or days of annual closure of a company) can be done from the working days websites user interface but can also be done programmatically from the API. A typical use case would be to retrieve the vacations of the workers out of the human ressources software and insert them into a custom calendar, then being able to query available working days., required_params: [{\"name\": \"description\", \"type\": \"STRING\", \"description\": \"A textual description of the custom period (up to 30 caracters)\"}, {\"name\": \"profile_id\", \"type\": \"STRING\", \"description\": \"The ID of the calendar we are customizing.\"}, {\"name\": \"start_date\", \"type\": \"STRING\", \"description\": \"The start date of the custom period (YYYY-MM-DD)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "568", "title": "", "text": "category_name:Communication, tool_name:31Events - Send Native Calendar Invites, api_name:EventResponses, api_description:, required_params: [{\"name\": \"event_id\", \"type\": \"STRING\", \"description\": \"Event ID\"}, {\"name\": \"response_type\", \"type\": \"STRING\", \"description\": \"one of \\\"accepted\\\", \\\"attended\\\", \\\"declined\\\", \\\"noreply\\\"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "569", "title": "", "text": "category_name:Events, tool_name:Working days, api_name:/1.3/analyse, api_description:Analyse a period (you provide a start_date and an end_date over a given calendar, we respond with the period analysis), required_params: [{\"name\": \"start_date\", \"type\": \"STRING\", \"description\": \"The start date (YYYY-MM-DD)\"}, {\"name\": \"end_date\", \"type\": \"STRING\", \"description\": \"The end date (YYYY-MM-DD)\"}, {\"name\": \"country_code\", \"type\": \"STRING\", \"description\": \"The ISO country code (2 letters).  See <a href=https://api.workingdays.org/api-countries >available countries & configurations</a>\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "570", "title": "", "text": "category_name:Events, tool_name:Working days, api_name:/1.3/delete_custom_period, api_description:Removing a previously defined custom period, required_params: [{\"name\": \"start_date\", \"type\": \"STRING\", \"description\": \"The start date of the custom period (YYYY-MM-DD)\"}, {\"name\": \"profile_id\", \"type\": \"STRING\", \"description\": \"The ID of the calendar we are customizing.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "571", "title": "", "text": "category_name:Translation, tool_name:Simple & Elegant Translation Service, api_name:To get a list all the supported languages by this API Endpoint, api_description:To get a list all the supported languages, execute this API, https://translate.pregnya.com/getSupportedLanguages, required_params: [], optional_params: [], return_schema: \"{\\\"languages\\\": {\\\"af\\\": \\\"str\\\", \\\"am\\\": \\\"str\\\", \\\"ar\\\": \\\"str\\\", \\\"az\\\": \\\"str\\\", \\\"be\\\": \\\"str\\\", \\\"bg\\\": \\\"str\\\", \\\"bn\\\": \\\"str\\\", \\\"bs\\\": \\\"str\\\", \\\"ca\\\": \\\"str\\\", \\\"ceb\\\": \\\"str\\\", \\\"co\\\": \\\"str\\\", \\\"cs\\\": \\\"str\\\", \\\"cy\\\": \\\"str\\\", \\\"da\\\": \\\"str\\\", \\\"de\\\": \\\"str\\\", \\\"el\\\": \\\"str\\\", \\\"en\\\": \\\"str\\\", \\\"eo\\\": \\\"str\\\", \\\"es\\\": \\\"str\\\", \\\"et\\\": \\\"str\\\", \\\"eu\\\": \\\"str\\\", \\\"fa\\\": \\\"str\\\", \\\"fi\\\": \\\"str\\\", \\\"fil\\\": \\\"str\\\", \\\"fr\\\": \\\"str\\\", \\\"fy\\\": \\\"str\\\", \\\"ga\\\": \\\"str\\\", \\\"gd\\\": \\\"str\\\", \\\"gl\\\": \\\"str\\\", \\\"gu\\\": \\\"str\\\", \\\"ha\\\": \\\"str\\\", \\\"haw\\\": \\\"str\\\", \\\"he\\\": \\\"str\\\", \\\"hi\\\": \\\"str\\\", \\\"hmn\\\": \\\"str\\\", \\\"hr\\\": \\\"str\\\", \\\"ht\\\": \\\"str\\\", \\\"hu\\\": \\\"str\\\", \\\"hy\\\": \\\"str\\\", \\\"id\\\": \\\"str\\\", \\\"ig\\\": \\\"str\\\", \\\"is\\\": \\\"str\\\", \\\"it\\\": \\\"str\\\", \\\"iw\\\": \\\"str\\\", \\\"ja\\\": \\\"str\\\", \\\"jw\\\": \\\"str\\\", \\\"ka\\\": \\\"str\\\", \\\"kk\\\": \\\"str\\\", \\\"km\\\": \\\"str\\\", \\\"kn\\\": \\\"str\\\", \\\"ko\\\": \\\"str\\\", \\\"ku\\\": \\\"str\\\", \\\"ky\\\": \\\"str\\\", \\\"la\\\": \\\"str\\\", \\\"lb\\\": \\\"str\\\", \\\"lo\\\": \\\"str\\\", \\\"lt\\\": \\\"str\\\", \\\"lv\\\": \\\"str\\\", \\\"mg\\\": \\\"str\\\", \\\"mi\\\": \\\"str\\\", \\\"mk\\\": \\\"str\\\", \\\"ml\\\": \\\"str\\\", \\\"mn\\\": \\\"str\\\", \\\"mr\\\": \\\"str\\\", \\\"ms\\\": \\\"str\\\", \\\"mt\\\": \\\"str\\\", \\\"my\\\": \\\"str\\\", \\\"ne\\\": \\\"str\\\", \\\"nl\\\": \\\"str\\\", \\\"no\\\": \\\"str\\\", \\\"ny\\\": \\\"str\\\", \\\"pa\\\": \\\"str\\\", \\\"pl\\\": \\\"str\\\", \\\"ps\\\": \\\"str\\\", \\\"pt\\\": \\\"str\\\", \\\"ro\\\": \"", "metadata": {}}
{"_id": "572", "title": "", "text": "category_name:Social, tool_name:Instagram Data, api_name:User information(metadata) by User ID, api_description:Get user information(followers, followings and etc) by using user id (numbers), required_params: [{\"name\": \"user_id\", \"type\": \"NUMBER\", \"description\": \"Instagram username\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "573", "title": "", "text": "category_name:Social, tool_name:Instagram Data, api_name:User Tagged Feed, api_description:Get user tagged feed, post where user was tagged\n\n**NOTE:** Profile should be public(not private)\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster, required_params: [], optional_params: [], return_schema: {\"data\": {\"user\": {\"edge_user_to_photos_of_you\": {\"count\": \"int\", \"page_info\": {\"has_next_page\": \"bool\", \"end_cursor\": \"str\"}, \"edges\": [{\"node\": {\"id\": \"str\", \"__typename\": \"str\", \"edge_media_to_caption\": {\"edges\": [{\"node\": {\"text\": \"str\"}, \"_list_length\": 1}]}, \"shortcode\": \"str\", \"edge_media_to_comment\": {\"count\": \"int\"}, \"comments_disabled\": \"bool\", \"taken_at_timestamp\": \"int\", \"dimensions\": {\"height\": \"int\", \"width\": \"int\"}, \"display_url\": \"str\", \"edge_liked_by\": {\"count\": \"int\"}, \"edge_media_preview_like\": {\"count\": \"int\"}, \"owner\": {\"id\": \"str\", \"username\": \"str\"}, \"thumbnail_src\": \"str\", \"is_video\": \"bool\", \"has_upcoming_event\": \"bool\", \"accessibility_caption\": \"str\"}, \"_list_length\": 11}]}}}, \"extensions\": {\"is_final\": \"bool\"}, \"status\": \"str\"}", "metadata": {}}
{"_id": "574", "title": "", "text": "category_name:Social, tool_name:Instagram Data, api_name:User Reels Feed, api_description:Get user reels feed\n\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "575", "title": "", "text": "category_name:Social, tool_name:Social Media Data TT, api_name:User followings list, api_description:Get user followings:\n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs, required_params: [], optional_params: [], return_schema: {\"has_more\": \"bool\", \"total_following\": \"int\", \"max_cursor\": \"str\", \"following\": [{\"unique_id\": \"str\", \"uid\": \"str\", \"nickname\": \"str\", \"sec_uid\": \"str\", \"is_private\": \"bool\", \"country\": \"str\", \"avatar_medium\": \"str\", \"avatar_large\": \"str\", \"_list_length\": 40}]}", "metadata": {}}
{"_id": "576", "title": "", "text": "category_name:Business, tool_name:Free Cashback, api_name:Cashabck, api_description:Access this for cashback feed, required_params: [{\"name\": \"ctype\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"limit\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"cid\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"sid\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "577", "title": "", "text": "category_name:eCommerce, tool_name:HM - Hennes Mauritz, api_name:products/list, api_description:List products from H&M with options to sort, filter, or search for products by name, required_params: [{\"name\": \"lang\", \"type\": \"STRING\", \"description\": \"The language code that is gotten from /regions/list endpoint\"}, {\"name\": \"currentpage\", \"type\": \"NUMBER\", \"description\": \"The page index to get data, start from 0\"}, {\"name\": \"country\", \"type\": \"STRING\", \"description\": \"The country code that is gotten from /regions/list endpoint\"}, {\"name\": \"pagesize\", \"type\": \"NUMBER\", \"description\": \"The number of records to return in each page\"}], optional_params: [], return_schema: {\"results\": \"empty list\", \"pagination\": {\"pageSize\": \"int\", \"currentPage\": \"int\", \"sort\": \"str\", \"numberOfPages\": \"int\", \"totalNumberOfResults\": \"int\", \"totalNumberOfResultsUnfiltered\": \"int\"}, \"facets\": [{\"code\": \"str\", \"priority\": \"int\", \"category\": \"bool\", \"multiSelect\": \"bool\", \"visible\": \"bool\", \"values\": [{\"code\": \"str\", \"count\": \"int\", \"selected\": \"bool\", \"_list_length\": 6}], \"_list_length\": 35}], \"freeTextSearch\": \"str\", \"categoryCode\": \"str\", \"rangeFacets\": \"empty list\", \"baseUrl\": \"str\"}", "metadata": {}}
{"_id": "578", "title": "", "text": "category_name:eCommerce, tool_name:HM - Hennes Mauritz, api_name:categories/list, api_description:List all categories from H&M, required_params: [{\"name\": \"country\", \"type\": \"STRING\", \"description\": \"The country code that is gotten from /regions/list endpoint\"}, {\"name\": \"lang\", \"type\": \"STRING\", \"description\": \"The language code that is gotten from /regions/list endpoint\"}], optional_params: [], return_schema: {\"CatName\": \"str\", \"CategoryValue\": \"str\", \"CategoriesArray\": [{\"CatName\": \"str\", \"CategoryValue\": \"str\", \"CategoriesArray\": [{\"CatName\": \"str\", \"CategoryValue\": \"str\", \"tagCodes\": [\"list of str with length 2\"], \"_list_length\": 5}], \"tagCodes\": \"empty list\", \"_list_length\": 8}], \"tagCodes\": [\"list of str with length 1\"]}", "metadata": {}}
{"_id": "579", "title": "", "text": "category_name:Tools, tool_name:bitly, api_name:shorten, api_description:Given a long URL, returns a bitly short URL., required_params: [{\"name\": \"longUrl\", \"type\": \"STRING\", \"description\": \"a long URL to be shortened (example: http://betaworks.com/).\"}], optional_params: [], return_schema: {\"status_code\": \"int\", \"status_txt\": \"str\", \"data\": \"empty list\"}", "metadata": {}}
{"_id": "580", "title": "", "text": "category_name:Advertising, tool_name:URL Link Shortener, api_name:Get a list of domains, api_description:Get a list of domains, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "581", "title": "", "text": "category_name:Advertising, tool_name:URL Link Shortener, api_name:Create a new link, api_description:Create a new link, required_params: [{\"name\": \"destination\", \"type\": \"STRING\", \"description\": \"The destination URL you want your branded short link to point to\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "582", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Alternative Artists, api_description:Provide the Greatest of All Time Alternative Artists chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "583", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Songs of the '90s, api_description:Provide the Greatest of All Time Songs of the '90s chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "584", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Top Artists - Female, api_description:Provide the YEAR-END Top Artists - Female chart information\n\nIf `year` is not supplied, will default to last year., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "585", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:India Songs, api_description:Provide the India Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "586", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Hot 100 Songs (Greatest of All Time), api_description:Provide the Greatest of All Time Hot 100 Songs chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "587", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Adult Alternative Songs, api_description:Provide the Greatest of All Time Adult Alternative Songs chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "588", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:HOT 100, api_description:Provide the HOT 100 chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"max range(1-100)\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "589", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Adult Alternative Artists, api_description:Provide the Greatest of All Time Adult Alternative Artists chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "590", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Indonesia Songs, api_description:Provide the Indonesia Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "591", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Greece Songs, api_description:Provide the Greece Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "592", "title": "", "text": "category_name:Education, tool_name:Learn to read and write Japanese kanji, api_name:Kunyomi reading, api_description:The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required., required_params: [{\"name\": \"kun\", \"type\": \"STRING\", \"description\": \"Hiragana or romaji\"}], optional_params: [], return_schema: {\"kanji\": {\"character\": \"str\", \"stroke\": \"int\"}, \"radical\": {\"character\": \"str\", \"stroke\": \"int\", \"order\": \"int\"}}", "metadata": {}}
{"_id": "593", "title": "", "text": "category_name:Education, tool_name:Learn to read and write Japanese kanji, api_name:Onyomi reading, api_description:The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required., required_params: [{\"name\": \"on\", \"type\": \"STRING\", \"description\": \"Katakana or romaji\"}], optional_params: [], return_schema: {\"kanji\": {\"character\": \"str\", \"stroke\": \"int\"}, \"radical\": {\"character\": \"str\", \"stroke\": \"int\", \"order\": \"int\"}}", "metadata": {}}
{"_id": "594", "title": "", "text": "category_name:Education, tool_name:Learn to read and write Japanese kanji, api_name:Radical stroke number, api_description:The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required., required_params: [{\"name\": \"rs\", \"type\": \"STRING\", \"description\": \"Positive integer\"}], optional_params: [], return_schema: {\"kanji\": {\"character\": \"str\", \"stroke\": \"int\"}, \"radical\": {\"character\": \"str\", \"stroke\": \"int\", \"order\": \"int\"}}", "metadata": {}}
{"_id": "595", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:.net, api_description:Check if .net domain is registered, required_params: [{\"name\": \"name\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "596", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Instagram, api_description:Check username on Instagram, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "597", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Wikipedia, api_description:Check username on Wikipedia, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "598", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:.com, api_description:Check a .com domain, required_params: [{\"name\": \"name\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "599", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:.co, api_description:Check if .co domain is registered, required_params: [{\"name\": \"name\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "600", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Steam, api_description:Check username on Steam, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "601", "title": "", "text": "category_name:Location, tool_name:IP Address Tracker - Free, api_name:Auto IP Lookup, api_description:This endpoint will automatically look up the ip of your users, required_params: [], optional_params: [], return_schema: {\"status\": \"str\", \"ip\": \"str\", \"city\": \"str\", \"state\": \"str\", \"country\": \"str\", \"zip\": \"str\", \"lat\": \"str\", \"lon\": \"str\", \"isp\": \"str\", \"timezone\": \"str\"}", "metadata": {}}
{"_id": "602", "title": "", "text": "category_name:Data, tool_name:Diffbot, api_name:Article API, api_description:The Article API is used to extract clean article text from news articles, blog posts, and other text-heavy web pages., required_params: [{\"name\": \"url\", \"type\": \"STRING\", \"description\": \"URL to extract article from (URLEncoded)\"}], optional_params: [], return_schema: {\"errorCode\": \"int\", \"error\": \"str\"}", "metadata": {}}
{"_id": "603", "title": "", "text": "category_name:Data, tool_name:Diffbot, api_name:Frontpage, api_description:The Frontpage API takes in a multifaceted “homepage” and returns individual page elements., required_params: [{\"name\": \"url\", \"type\": \"STRING\", \"description\": \"Frontpage URL from which to extract items\"}], optional_params: [], return_schema: {\"errorCode\": \"int\", \"error\": \"str\"}", "metadata": {}}
{"_id": "604", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:properties/list-by-map, api_description:List properties by coordinate of bounding box, required_params: [{\"name\": \"arrival_date\", \"type\": \"STRING\", \"description\": \"The check-in date at hotel, the format is yyyy-MM-dd. Ex : 2022-08-14\"}, {\"name\": \"room_qty\", \"type\": \"STRING\", \"description\": \"The number of rooms\"}, {\"name\": \"departure_date\", \"type\": \"STRING\", \"description\": \"The check-out date, the format is yyyy-MM-dd. Ex : 2022-08-15\"}, {\"name\": \"guest_qty\", \"type\": \"STRING\", \"description\": \"The number of adults\"}, {\"name\": \"bbox\", \"type\": \"STRING\", \"description\": \"Coordinate of bounding box - latitude (bottom left),latitude (top right),longitude (bottom left),longitude (top right)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "605", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:properties/get-facilities, api_description:Get facilities of property by id, required_params: [{\"name\": \"hotel_ids\", \"type\": \"NUMBER\", \"description\": \"The value of hotel_id field from properties/list API\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "606", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Place Details, api_description:Get the details for a specific place, including location coordinates, population, and elevation above sea-level (if available)., required_params: [{\"name\": \"placeId\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "607", "title": "", "text": "category_name:Location, tool_name:Referential, api_name:Timezone by id, api_description:Lookup a time zone, required_params: [{\"name\": \"timezone\", \"type\": \"string\", \"description\": \"Timezone\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "608", "title": "", "text": "category_name:Commerce, tool_name:AliExpress unofficial, api_name:/feedbacks/{id}, api_description: , required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "609", "title": "", "text": "category_name:eCommerce, tool_name:Magic AliExpress, api_name:/api/products/search, api_description:Search a product by his name, required_params: [{\"name\": \"name\", \"type\": \"STRING\", \"description\": \"Filter the products compatible with the name\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "610", "title": "", "text": "category_name:Data, tool_name:Scraper's Proxy, api_name:Standard GET, api_description:Basic proxy GET request, required_params: [{\"name\": \"url\", \"type\": \"STRING\", \"description\": \" Pass in `url` to specify the url that you want to fetch. If you require  query parameters you can include a query string in the url or specify a json serialized object in the `params` parameter\"}], optional_params: [], return_schema: {\"errors\": [{\"value\": \"str\", \"property\": \"str\", \"message\": \"str\", \"_list_length\": 2}]}", "metadata": {}}
{"_id": "611", "title": "", "text": "category_name:Tools, tool_name:Ephemeral Proxies, api_name:Check residential proxies service status, api_description:It returns the current status of the service, including the total number of residential proxies available and grouped by country.\n, required_params: [], optional_params: [], return_schema: {\"success\": \"bool\", \"service_status\": {\"availability\": {\"total\": {\"proxies\": \"int\"}, \"by_country\": [{\"country_iso\": \"str\", \"proxies\": \"int\", \"_list_length\": 32}]}}}", "metadata": {}}
{"_id": "612", "title": "", "text": "category_name:Tools, tool_name:Ephemeral Proxies, api_name:Get user's traffic balance, api_description:It returns the user's traffic balance for current monthly subscription.\n, required_params: [], optional_params: [], return_schema: {\"success\": \"bool\", \"balance\": {\"consumed_megabytes\": \"int\", \"limit_megabytes\": \"int\"}}", "metadata": {}}
{"_id": "613", "title": "", "text": "category_name:Business, tool_name:Rotating Proxies, api_name:Rotating Proxy API, api_description:API will respond with a random proxy currently active in the pool upon each request., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "614", "title": "", "text": "category_name:Tools, tool_name:Ephemeral Proxies, api_name:Extend expiration time of a datacenter proxy, api_description:By calling this endpoint the expiration time of an already allocated proxy will be extended by 30 mins.\nSuccessive calls will keep incrementing the expiration time, up to a maximum of 24 hours.\n, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The proxy identifier to extend the expiration time. This identifier can be obtained from the response of /v2/datacenter/proxy, field proxy.id.\\n\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"message\": \"str\"}", "metadata": {}}
{"_id": "615", "title": "", "text": "category_name:Tools, tool_name:Ephemeral Proxies, api_name:Check datacenter proxies service status, api_description:It returns the current status of the service, including the total number of datacenter proxies available and grouped by country.\n, required_params: [], optional_params: [], return_schema: {\"success\": \"bool\", \"service_status\": {\"availability\": {\"total\": {\"proxies\": \"int\"}, \"by_country\": [{\"country_iso\": \"str\", \"proxies\": \"int\", \"_list_length\": 13}]}}}", "metadata": {}}
{"_id": "616", "title": "", "text": "category_name:Tools, tool_name:Bulk Whatsapp Validator, api_name:Is a business?, api_description:Requests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not., required_params: [{\"name\": \"phone\", \"type\": \"NUMBER\", \"description\": \"The whatsapp number must be written as: `countrycode` and `number`; do NOT include any non-number character, spaces, or anything which is not a number.\\nExamples: of correct numbers are: `34123456789` (for spain) or `491234567890` (for Germany).\\nCountry codes can be checked here: https://countrycode.org/\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "617", "title": "", "text": "category_name:Social, tool_name:Whatsapp Scraper, api_name:About, api_description:This endpoint will return the `About` info of the Whatsapp for business number, and when the value was set., required_params: [{\"name\": \"phone\", \"type\": \"NUMBER\", \"description\": \"The phone number must be written as a number (including countrycode); \\ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "618", "title": "", "text": "category_name:Social, tool_name:Whatsapp Scraper, api_name:Is registered on whatsapp? (get free token), api_description:Free token needed, click [here](https://wa.me/34631428039?text=get-token) to get it. This endpoint returns `true` if the phone is registered on whatsapp.\nLearn how to use this endpoint on this [video](https://youtu.be/txPQ4ROpfuc)., required_params: [{\"name\": \"phone\", \"type\": \"NUMBER\", \"description\": \"The phone number must be written as a number (including countrycode); \\ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.\"}, {\"name\": \"token\", \"type\": \"STRING\", \"description\": \"To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "619", "title": "", "text": "category_name:Social, tool_name:Whatsapp Scraper, api_name:Fetch profile picture, api_description:Gets the whatsapp number profile picture, you can select its resolution (`high` or `low`) and the response format: `png` file, `url` or `base64` encoded file., required_params: [{\"name\": \"phone\", \"type\": \"NUMBER\", \"description\": \"The phone number must be written as a number (including countrycode); \\ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "620", "title": "", "text": "category_name:Communication, tool_name:whin, api_name:signup, api_description:This endpoint is **ONLY** used to enter the code you received to signup. Follow this [video](https://youtu.be/uOZ-oH4kP58), or read the [tutorial](https://rapidapi.com/inutil-inutil-default/api/whin2/tutorials/what-to-do-to-start-using-whin%3F-1), to learn how to start using whin., required_params: [{\"name\": \"code\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "621", "title": "", "text": "category_name:Communication, tool_name:Maytapi WhatsApp, api_name:queue, api_description:Returns the queue info of the phone., required_params: [{\"name\": \"phone_id\", \"type\": \"STRING\", \"description\": \"Enter phone id\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"message\": \"str\"}", "metadata": {}}
{"_id": "622", "title": "", "text": "category_name:Tools, tool_name:Bulk WHOIS, api_name:Get WHOIS batch, api_description:Get WHOIS batch., required_params: [{\"name\": \"batch_id\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"error\": \"str\"}", "metadata": {}}
{"_id": "623", "title": "", "text": "category_name:Tools, tool_name:Bulk WHOIS, api_name:Get your WHOIS batches, api_description:Get a list of your batches., required_params: [], optional_params: [], return_schema: {\"batches\": \"empty list\"}", "metadata": {}}
{"_id": "624", "title": "", "text": "category_name:Finance, tool_name:Fidelity Investments, api_name:market/get-international, api_description:Get international markets information, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "625", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/parent/get-top-medalist-rated-investments, api_description:Get top medalist rated investments as displayed in the Parent tab, required_params: [{\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}, {\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "626", "title": "", "text": "category_name:Events, tool_name:Public Holiday, api_name:Public Holidays, api_description:Returns the public holidays from a given year and country., required_params: [{\"name\": \"CountryCode\", \"type\": \"STRING\", \"description\": \"CountryCode\"}, {\"name\": \"Year\", \"type\": \"STRING\", \"description\": \"Year\"}], optional_params: [], return_schema: {\"date\": \"str\", \"localName\": \"str\", \"name\": \"str\", \"countryCode\": \"str\", \"fixed\": \"bool\", \"global\": \"bool\", \"counties\": \"NoneType\", \"launchYear\": \"NoneType\", \"type\": \"str\"}", "metadata": {}}
{"_id": "627", "title": "", "text": "category_name:Finance, tool_name:Fidelity Investments, api_name:market/get-sectors, api_description:Get sectors performance, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "628", "title": "", "text": "category_name:Finance, tool_name:Quandl, api_name:Get metadata for a time-series database, api_description:You can retrieve metadata for a specified time-series database, required_params: [{\"name\": \"database_code\", \"type\": \"STRING\", \"description\": \"The code for the database this time-series belongs to\"}, {\"name\": \"return_format\", \"type\": \"STRING\", \"description\": \"json, xml or csv\"}], optional_params: [], return_schema: {\"database\": {\"id\": \"int\", \"name\": \"str\", \"database_code\": \"str\", \"description\": \"str\", \"datasets_count\": \"int\", \"downloads\": \"int\", \"premium\": \"bool\", \"image\": \"str\", \"favorite\": \"bool\", \"url_name\": \"str\", \"exclusive\": \"bool\"}}", "metadata": {}}
{"_id": "629", "title": "", "text": "category_name:Finance, tool_name:Quandl, api_name:Get time-series data, api_description:This call returns data from a specified time-series., required_params: [{\"name\": \"return_format\", \"type\": \"STRING\", \"description\": \"How you want the data returned (json, xml, or csv)\"}, {\"name\": \"dataset_code\", \"type\": \"STRING\", \"description\": \"The code for this time-series\"}, {\"name\": \"database_code\", \"type\": \"STRING\", \"description\": \"The code for the database this time-series belongs to\"}], optional_params: [], return_schema: {\"dataset_data\": {\"limit\": \"NoneType\", \"transform\": \"NoneType\", \"column_index\": \"NoneType\", \"column_names\": [\"list of str with length 13\"], \"start_date\": \"str\", \"end_date\": \"str\", \"frequency\": \"str\", \"data\": [\"list of list with length 1472\"], \"collapse\": \"NoneType\", \"order\": \"NoneType\"}}", "metadata": {}}
{"_id": "630", "title": "", "text": "category_name:Finance, tool_name:Quandl, api_name:Get time-series metadata, api_description:This call returns metadata for a specified time-series., required_params: [{\"name\": \"return_format\", \"type\": \"STRING\", \"description\": \"json, xml or csv\"}, {\"name\": \"database_code\", \"type\": \"STRING\", \"description\": \"The code for the database this time-series belongs to\"}, {\"name\": \"dataset_code\", \"type\": \"STRING\", \"description\": \"The code for this time-series\"}], optional_params: [], return_schema: {\"dataset\": {\"id\": \"int\", \"dataset_code\": \"str\", \"database_code\": \"str\", \"name\": \"str\", \"description\": \"str\", \"refreshed_at\": \"str\", \"newest_available_date\": \"str\", \"oldest_available_date\": \"str\", \"column_names\": [\"list of str with length 13\"], \"frequency\": \"str\", \"type\": \"str\", \"premium\": \"bool\", \"database_id\": \"int\"}}", "metadata": {}}
{"_id": "631", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/parent/get-recent-investment-rating-change, api_description:Get recent investment rating change as displayed in the Parent tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "632", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-financial-details, api_description:Mapped to Expand Details View section found in Financials  tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "633", "title": "", "text": "category_name:Business, tool_name:360 Business Tool, api_name:GetAllRecords, api_description:Get all data, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "634", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-short-interest, api_description:Mapped to Short Interest section in Quote tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "635", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/get-quote, api_description:Get quote related to an ETF or FUND, required_params: [{\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}, {\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "636", "title": "", "text": "category_name:Mapping, tool_name:MapToolkit, api_name:Elevation, api_description:Global elevation service., required_params: [{\"name\": \"points\", \"type\": \"STRING\", \"description\": \"JSON Array of [latitdue, longitude] Objects.\"}], optional_params: [], return_schema: {}", "metadata": {}}
{"_id": "637", "title": "", "text": "category_name:Mapping, tool_name:MapToolkit, api_name:Routing, api_description:Global routing engine., required_params: [{\"name\": \"points\", \"type\": \"STRING\", \"description\": \"Value: `{lat},{lng}[|{lat},{lng} ...]`\\nDefine multiple routing waypoints, consisting of latitude and longitude. At least 2 points are needed.\"}], optional_params: [], return_schema: {\"info\": {\"copyrights\": [\"list of str with length 2\"], \"took\": \"int\"}, \"paths\": [{\"distance\": \"float\", \"snapped_waypoints\": \"str\", \"weight\": \"float\", \"descend\": \"float\", \"ascend\": \"float\", \"points_encoded\": \"bool\", \"points\": \"str\", \"bbox\": [\"list of float with length 4\"], \"time\": \"int\", \"instructions\": [{\"distance\": \"float\", \"name\": \"str\", \"tags\": {\"surface\": \"str\", \"highway\": \"str\"}, \"text\": \"str\", \"interval\": [\"list of int with length 2\"], \"sign\": \"int\", \"pushbike\": \"bool\", \"annotations\": \"empty list\", \"time\": \"int\", \"coordinate\": [\"list of float with length 2\"], \"speed\": \"float\", \"_list_length\": 9}], \"_list_length\": 1}]}", "metadata": {}}
{"_id": "638", "title": "", "text": "category_name:Mapping, tool_name:MapToolkit, api_name:Hillshading, api_description:Global raster hillshading tiles., required_params: [{\"name\": \"x\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"y\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"z\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "639", "title": "", "text": "category_name:Mapping, tool_name:MapToolkit, api_name:Route Enhancement, api_description:Enhance your GPX-file with elevation, surface and mapmatching, required_params: [], optional_params: [], return_schema: {\"key\": \"str\", \"geometry\": {\"type\": \"str\", \"coordinates\": \"empty list\"}, \"elevation\": \"empty list\", \"surface\": \"empty list\", \"mapmatch\": \"empty list\"}", "metadata": {}}
{"_id": "640", "title": "", "text": "category_name:Location, tool_name:NAVITIME Geocoding, api_name:address_code, api_description:Return address information from address code of request parameters., required_params: [{\"name\": \"code\", \"type\": \"STRING\", \"description\": \"Address Code.\\nCan be specified multiple times, separated by a period.\"}], optional_params: [], return_schema: {\"items\": [{\"code\": \"str\", \"name\": \"str\", \"postal_code\": \"str\", \"coord\": {\"lat\": \"float\", \"lon\": \"float\"}, \"details\": [{\"code\": \"str\", \"name\": \"str\", \"ruby\": \"str\", \"level\": \"str\", \"_list_length\": 3}], \"_list_length\": 1}], \"unit\": {\"datum\": \"str\", \"coord_unit\": \"str\"}}", "metadata": {}}
{"_id": "641", "title": "", "text": "category_name:Location, tool_name:NAVITIME Geocoding, api_name:address_inclusion, api_description:緯度経度が住所コードの範囲内に含まれているかを判定します。, required_params: [{\"name\": \"code\", \"type\": \"STRING\", \"description\": \"Address Code.\\nCan be specified multiple times, separated by a period.\"}, {\"name\": \"coord\", \"type\": \"STRING\", \"description\": \"Latitude and longitude.\"}], optional_params: [], return_schema: {\"items\": [{\"included\": \"bool\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "642", "title": "", "text": "category_name:Food, tool_name:Tasty, api_name:recipes/list, api_description:List recipes by option filters or name, required_params: [{\"name\": \"size\", \"type\": \"NUMBER\", \"description\": \"Number of items returned per response\"}, {\"name\": \"from\", \"type\": \"NUMBER\", \"description\": \"The offset of items to be ignored in response for paging\"}], optional_params: [], return_schema: \"{\\\"count\\\": \\\"int\\\", \\\"results\\\": [{\\\"canonical_id\\\": \\\"str\\\", \\\"buzz_id\\\": \\\"NoneType\\\", \\\"video_ad_content\\\": \\\"str\\\", \\\"seo_title\\\": \\\"NoneType\\\", \\\"num_servings\\\": \\\"int\\\", \\\"is_one_top\\\": \\\"bool\\\", \\\"video_id\\\": \\\"int\\\", \\\"keywords\\\": \\\"NoneType\\\", \\\"price\\\": {\\\"consumption_total\\\": \\\"int\\\", \\\"consumption_portion\\\": \\\"int\\\", \\\"total\\\": \\\"int\\\", \\\"updated_at\\\": \\\"str\\\", \\\"portion\\\": \\\"int\\\"}, \\\"compilations\\\": [{\\\"country\\\": \\\"str\\\", \\\"draft_status\\\": \\\"str\\\", \\\"thumbnail_alt_text\\\": \\\"str\\\", \\\"video_url\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"is_shoppable\\\": \\\"bool\\\", \\\"keywords\\\": \\\"NoneType\\\", \\\"show\\\": [{\\\"name\\\": \\\"str\\\", \\\"id\\\": \\\"int\\\", \\\"_list_length\\\": 1}], \\\"created_at\\\": \\\"int\\\", \\\"description\\\": \\\"NoneType\\\", \\\"thumbnail_url\\\": \\\"str\\\", \\\"approved_at\\\": \\\"int\\\", \\\"aspect_ratio\\\": \\\"str\\\", \\\"language\\\": \\\"str\\\", \\\"beauty_url\\\": \\\"NoneType\\\", \\\"buzz_id\\\": \\\"NoneType\\\", \\\"promotion\\\": \\\"str\\\", \\\"facebook_posts\\\": \\\"empty list\\\", \\\"canonical_id\\\": \\\"str\\\", \\\"id\\\": \\\"int\\\", \\\"slug\\\": \\\"str\\\", \\\"video_id\\\": \\\"int\\\", \\\"_list_length\\\": 16}], \\\"show\\\": {\\\"name\\\": \\\"str\\\", \\\"id\\\": \\\"int\\\"}, \\\"total_time_minutes\\\": \\\"int\\\", \\\"servings_noun_plural\\\": \\\"str\\\", \\\"be\"", "metadata": {}}
{"_id": "643", "title": "", "text": "category_name:Location, tool_name:Geocoder - United States Census Bureau, api_name:Geocoding and Geolookup for an address, api_description:Returns a geocode and a geolookup for a specified address, required_params: [{\"name\": \"benchmark\", \"type\": \"STRING\", \"description\": \"A numerical ID or name that references what version of the locator should be searched.\"}, {\"name\": \"address\", \"type\": \"STRING\", \"description\": \"Address in one line\"}, {\"name\": \"format\", \"type\": \"STRING\", \"description\": \"json or html\"}], optional_params: [], return_schema: {\"errors\": [\"list of str with length 1\"], \"status\": \"str\"}", "metadata": {}}
{"_id": "644", "title": "", "text": "category_name:Travel, tool_name:webcams.travel, api_name:/webcams/map/{ne_lat},{ne_lng},{sw_lat},{sw_lng},{zoom}, api_description:Returns a list of webcams optimized for displaying on a map for a given bounding box and {zoom} level. The value for the zoom level is compatible with the Google Maps zoom level., required_params: [{\"name\": \"ne_lat\", \"type\": \"NUMBER\", \"description\": \"North-east WGS84 latitude of the bounding box.\"}, {\"name\": \"ne_lng\", \"type\": \"NUMBER\", \"description\": \"North-east WGS84 longitude of the bounding box.\"}, {\"name\": \"sw_lat\", \"type\": \"NUMBER\", \"description\": \"South-west WGS84 latitude of the bounding box.\"}, {\"name\": \"sw_lng\", \"type\": \"NUMBER\", \"description\": \"South-west WGS84 longitude of the bounding box.\"}, {\"name\": \"zoom\", \"type\": \"NUMBER\", \"description\": \"A zoom level compatible with Google Maps.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "645", "title": "", "text": "category_name:Mapping, tool_name:uk.boundaries.io, api_name:Retrieve UK Postal Sector Outline Boundaries, api_description:example: Query by \"W41,W42\" sectors., required_params: [{\"name\": \"postal-sector\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"type\": \"str\", \"features\": [{\"type\": \"str\", \"properties\": {\"postal-sector\": \"str\"}, \"geometry\": {\"type\": \"str\", \"coordinates\": [\"list of list with length 2\"]}, \"_list_length\": 5}]}", "metadata": {}}
{"_id": "646", "title": "", "text": "category_name:Mapping, tool_name:uk.boundaries.io, api_name:Query for Distance between two H3 Indexes, api_description:Query for Distance between two H3 Indexes, required_params: [], optional_params: [], return_schema: {\"type\": \"str\", \"features\": [{\"type\": \"str\", \"properties\": {\"bearing(degrees)\": \"float\", \"distance(miles)\": \"float\", \"distance to(h3)\": \"str\", \"between(h3)\": [\"list of str with length 2\"], \"h3-index\": \"str\", \"resolution\": \"int\"}, \"geometry\": {\"type\": \"str\", \"coordinates\": [\"list of list with length 1\"]}, \"_list_length\": 2}]}", "metadata": {}}
{"_id": "647", "title": "", "text": "category_name:Location, tool_name:Geocoder - United States Census Bureau, api_name:Geocoding for an address, api_description:Returns a geocode for a specified address, required_params: [{\"name\": \"benchmark\", \"type\": \"STRING\", \"description\": \"A numerical ID or name that references what version of the locator should be searched.\"}, {\"name\": \"address\", \"type\": \"STRING\", \"description\": \"A single line containing the full address to be searched\"}], optional_params: [], return_schema: {\"result\": {\"input\": {\"address\": {\"address\": \"str\"}, \"benchmark\": {\"isDefault\": \"bool\", \"benchmarkDescription\": \"str\", \"id\": \"str\", \"benchmarkName\": \"str\"}}, \"addressMatches\": \"empty list\"}}", "metadata": {}}
{"_id": "648", "title": "", "text": "category_name:Travel, tool_name:webcams.travel, api_name:/webcams/list/country={country}[,{country}[,...]], api_description:This is a modifier. Returns a list of webcams according to the listed country. Multiple countries must be separated by comma. Required: at least one {country}. Possible values are ISO 3166-1-alpha-2 codes., required_params: [{\"name\": \"country\", \"type\": \"STRING\", \"description\": \"Comma separated ISO 3166-1-alpha-2 codes for the countries.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "649", "title": "", "text": "category_name:Mapping, tool_name:uk.boundaries.io, api_name:Query for Hexagon by H3Index, api_description:Query for Hexagon by H3Index, required_params: [{\"name\": \"h3Index\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"type\": \"str\", \"features\": [{\"type\": \"str\", \"properties\": {\"h3-index\": \"str\", \"resolution\": \"int\"}, \"geometry\": {\"type\": \"str\", \"coordinates\": [\"list of list with length 1\"]}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "650", "title": "", "text": "category_name:Mapping, tool_name:uk.boundaries.io, api_name:Query for Postal Unit Boundary by H3Index, api_description:Query for Postal Unit Boundary by H3Index\n\nIf  a Postal Unit code exists within this hexagon a boundary is returned.\nadjusting the resolution(0-16) increases the hexagon area.\n\nhttps://eng.uber.com/, required_params: [{\"name\": \"h3ndex\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"type\": \"str\", \"features\": [{\"type\": \"str\", \"properties\": {\"postal-unit-within-count\": \"int\", \"h3-index\": \"str\", \"resolution\": \"int\", \"postal-unit-within\": \"str\"}, \"geometry\": {\"type\": \"str\", \"coordinates\": [\"list of list with length 1\"]}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "651", "title": "", "text": "category_name:Travel, tool_name:webcams.travel, api_name:/webcams/list/exclude={webcamid}[,{webcamid}[,...]], api_description:This is a modifier. Exclude the {webcamid} from a list. Multiple {webcamid} must be separated by comma. Required: at least one {webcamid}, required_params: [{\"name\": \"webcamid\", \"type\": \"STRING\", \"description\": \"Comma separated list of webcamids to exclude from result.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "652", "title": "", "text": "category_name:Data, tool_name:Holy Bible, api_name:GetBooks, api_description:Get List Of All Books., required_params: [], optional_params: [], return_schema: {\"The_Old_Testament\": \"str\", \"The_New_Testament\": \"str\"}", "metadata": {}}
{"_id": "653", "title": "", "text": "category_name:Education, tool_name:Uncovered Treasure, api_name:/random, api_description:Get random treasure, required_params: [], optional_params: [], return_schema: {\"results\": [{\"date\": \"str\", \"context\": \"str\", \"scriptures\": [\"list of str with length 1\"], \"text\": \"str\", \"topics\": \"empty list\", \"bookOrder\": \"int\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "654", "title": "", "text": "category_name:Education, tool_name:Uncovered Treasure, api_name:/search/{searchterm}, api_description:Search for treasure by term, e.g. \"wisdom\", required_params: [{\"name\": \"searchterm\", \"type\": \"STRING\", \"description\": \"e.g. \\\"God's plan\\\"\"}], optional_params: [], return_schema: {\"results\": \"empty list\"}", "metadata": {}}
{"_id": "655", "title": "", "text": "category_name:Education, tool_name:Uncovered Treasure, api_name:/topic/{topic}, api_description:Get entries from a specific topic, required_params: [{\"name\": \"topic\", \"type\": \"STRING\", \"description\": \"\\\"seek God\\\"\"}], optional_params: [], return_schema: {\"results\": \"empty list\"}", "metadata": {}}
{"_id": "656", "title": "", "text": "category_name:Entertainment, tool_name:World of Jokes, api_name:Get Jokes By Specific Category, api_description:Access our huge collection of jokes of specific category and paginate through them based on your desired limit and sorting criteria., required_params: [{\"name\": \"limit\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"page\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"category\", \"type\": \"STRING\", \"description\": \"Category of joke based on the jokes categories API\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "657", "title": "", "text": "category_name:Entertainment, tool_name:Humor-Jokes-and-Memes, api_name:search-jokes, api_description:Search for jokes.\nSee https://humorapi.com/docs/#Search-Jokes for more., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "658", "title": "", "text": "category_name:Entertainment, tool_name:Humor-Jokes-and-Memes, api_name:insult, api_description:Insult somebody for doing something.\nSee https://humorapi.com/docs/#Insult for more., required_params: [{\"name\": \"reason\", \"type\": \"STRING\", \"description\": \"The reason for the praise/insult.\"}, {\"name\": \"name\", \"type\": \"STRING\", \"description\": \"The person's name.\"}], optional_params: [], return_schema: {\"text\": \"str\"}", "metadata": {}}
{"_id": "659", "title": "", "text": "category_name:Entertainment, tool_name:Humor-Jokes-and-Memes, api_name:praise, api_description:Praise somebody for doing something.\nSee https://humorapi.com/docs/#Praise for more., required_params: [{\"name\": \"reason\", \"type\": \"STRING\", \"description\": \"The reason for the praise/insult.\"}, {\"name\": \"name\", \"type\": \"STRING\", \"description\": \"The person's name.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "660", "title": "", "text": "category_name:Entertainment, tool_name:Humor-Jokes-and-Memes, api_name:search-memes, api_description:Search for memes.\nSee https://humorapi.com/docs/#Search-Memes for more., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "661", "title": "", "text": "category_name:Entertainment, tool_name:Humor-Jokes-and-Memes, api_name:rate-word, api_description:Rate the funniness of a word.\nSee https://humorapi.com/docs/#Rate-Word for more., required_params: [{\"name\": \"word\", \"type\": \"STRING\", \"description\": \"The word to be rated.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "662", "title": "", "text": "category_name:Entertainment, tool_name:World of Jokes, api_name:Get Joke of the Day By Category, api_description:Get the joke of the day of specific category from a collection of most rated and most popular jokes., required_params: [{\"name\": \"category\", \"type\": \"STRING\", \"description\": \"Category of joke based on the jokes categories API\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "663", "title": "", "text": "category_name:Finance, tool_name:Investing - Cryptocurrency Markets, api_name:coins/get-news, api_description:Get news relating to specific cryptocurrency, required_params: [{\"name\": \"pair_ID\", \"type\": \"NUMBER\", \"description\": \"Value of pair&#95;id field returned in coins/list, coins/search, coins/list-pairs, etc...\"}], optional_params: [], return_schema: {\"data\": [{\"screen_ID\": \"str\", \"screen_data\": {\"ob\": \"str\", \"next_page\": \"int\", \"news\": [{\"news_ID\": \"int\", \"hash\": \"str\", \"providerId\": \"str\", \"itemCategoryTags\": \"str\", \"news_provider_name\": \"str\", \"last_updated\": \"str\", \"last_updated_uts\": \"int\", \"type\": \"str\", \"HEADLINE\": \"str\", \"BODY\": \"str\", \"news_link\": \"str\", \"third_party_url\": \"str\", \"related_image\": \"str\", \"related_image_big\": \"str\", \"vid_filename\": \"str\", \"comments_cnt\": \"str\", \"is_partial\": \"str\", \"itemType\": \"str\", \"news_type\": \"str\", \"_list_length\": 10}]}, \"screen_layout\": \"str\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "664", "title": "", "text": "category_name:Entertainment, tool_name:Hearthstone, api_name:All Cards, api_description:Returns all available Hearthstone cards including non collectible cards., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "665", "title": "", "text": "category_name:Gaming, tool_name:CheapShark - Game Deals, api_name:Stores Info, api_description:Returns a full list of store IDs and names, a flag specifying if store is active, and an array of image/logo sizes (relative URLs), required_params: [], optional_params: [], return_schema: {\"storeID\": \"str\", \"storeName\": \"str\", \"isActive\": \"int\", \"images\": {\"banner\": \"str\", \"logo\": \"str\", \"icon\": \"str\"}}", "metadata": {}}
{"_id": "666", "title": "", "text": "category_name:Entertainment, tool_name:Hearthstone, api_name:Single Card, api_description:Returns card by name or ID. This may return more then one card if they share the same name. Loatheb returns both the card and the boss., required_params: [{\"name\": \"name\", \"type\": \"STRING\", \"description\": \"The name or ID of the card. Example values: Ysera, EX1_572.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "667", "title": "", "text": "category_name:Data, tool_name:Diablo4 Smartable, api_name:GetPeople, api_description:Get Diablo 4 influencers and top players., required_params: [{\"name\": \"page\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"title\": \"str\", \"path\": \"str\", \"page\": \"int\", \"value\": [{\"path\": \"str\", \"title\": \"str\", \"excerpt\": \"str\", \"sourceUrl\": \"str\", \"webUrl\": \"str\", \"type\": \"str\", \"name\": \"str\", \"bio\": \"str\", \"location\": \"str\", \"website\": \"str\", \"twitter\": {\"username\": \"str\", \"url\": \"str\", \"followers\": \"int\"}, \"affiliation\": {\"path\": \"str\", \"name\": \"str\", \"domain\": \"str\", \"images\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"isCached\": \"bool\", \"_list_length\": 1}]}, \"topics\": [\"list of str with length 1\"], \"heat\": \"int\", \"images\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"title\": \"str\", \"isCached\": \"bool\", \"_list_length\": 1}], \"content\": \"str\", \"_list_length\": 8}]}", "metadata": {}}
{"_id": "668", "title": "", "text": "category_name:Media, tool_name:Giphy, api_name:Search, api_description:Search all Giphy GIFs for a word or phrase. Punctuation will be stripped and ignored. Use a plus or url encode for phrases., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"search query term or phrase\"}], optional_params: [], return_schema: {\"data\": \"empty list\", \"meta\": {\"status\": \"int\", \"msg\": \"str\", \"response_id\": \"str\"}}", "metadata": {}}
{"_id": "669", "title": "", "text": "category_name:Media, tool_name:Giphy, api_name:Sticker Search, api_description:Replicates the functionality and requirements of the classic Giphy search, but returns animated stickers rather than gifs., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"search query term or phrase\"}], optional_params: [], return_schema: {\"data\": \"empty list\", \"meta\": {\"status\": \"int\", \"msg\": \"str\", \"response_id\": \"str\"}}", "metadata": {}}
{"_id": "670", "title": "", "text": "category_name:Weather, tool_name:AI Weather by Meteosource, api_name:find_places_prefix, api_description:**Search places by beginning of the name** to get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information** (country, region, elevation, timezone, etc.) for a given location.\n\nThe response can contain multiple places, sorted by relevance. You can then identify the one you want by coordinates, country, region, or type.\n\nUnlike the *find_places* endpoint, you can specify only the prefix of the place you are looking for. You can search for cities, mountains, lakes, countries, etc., required_params: [{\"name\": \"text\", \"type\": \"STRING\", \"description\": \"Place name prefix to search for\"}], optional_params: [], return_schema: {\"name\": \"str\", \"place_id\": \"str\", \"adm_area1\": \"str\", \"adm_area2\": \"str\", \"country\": \"str\", \"lat\": \"str\", \"lon\": \"str\", \"timezone\": \"str\", \"type\": \"str\"}", "metadata": {}}
{"_id": "671", "title": "", "text": "category_name:Weather, tool_name:History, api_name:dailyWeatherSeries, api_description:This endpoint returns the historical weather for a given series of days for a given location (latitude and longitude), required_params: [{\"name\": \"lng\", \"type\": \"STRING\", \"description\": \"The longitude in decimal format of the requested point\"}, {\"name\": \"start_day\", \"type\": \"STRING\", \"description\": \"The requested start day in the format \\\\\\\"YYYYmmdd\\\\\\\"\"}, {\"name\": \"end_day\", \"type\": \"STRING\", \"description\": \"The requested end day in the format \\\\\\\"YYYYmmdd\\\\\\\"\"}, {\"name\": \"parameters\", \"type\": \"STRING\", \"description\": \"Define the parameter, you wish to request. Allowed options are \\\\\\\"all\\\\\\\", \\\\\\\"air_quality\\\\\\\", \\\\\\\"anomaly\\\\\\\", \\\\\\\"astronomy\\\\\\\", \\\\\\\"weather\\\\\\\", \\\\\\\"signal\\\\\\\", \\\\\\\"pollen\\\\\\\", \\\\\\\"occurrence\\\\\\\"\"}, {\"name\": \"lat\", \"type\": \"STRING\", \"description\": \"The latitude in decimal format of the requested point\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "672", "title": "", "text": "category_name:Weather, tool_name:History, api_name:dailyWeather, api_description:This endpoint returns the historical weather for a given day for a given location (latitude and longitude), required_params: [{\"name\": \"lng\", \"type\": \"STRING\", \"description\": \"The longitude in decimal format of the requested point\"}, {\"name\": \"lat\", \"type\": \"STRING\", \"description\": \"The latitude in decimal format of the requested point\"}, {\"name\": \"parameters\", \"type\": \"STRING\", \"description\": \"Define the parameter, you wish to request. Allowed options are \\\\\\\"all\\\\\\\", \\\\\\\"air_quality\\\\\\\", \\\\\\\"anomaly\\\\\\\", \\\\\\\"astronomy\\\\\\\", \\\\\\\"weather\\\\\\\", \\\\\\\"signal\\\\\\\", \\\\\\\"pollen\\\\\\\", \\\\\\\"occurrence\\\\\\\"\"}, {\"name\": \"day\", \"type\": \"STRING\", \"description\": \"The requested day in the format \\\\\\\"YYYYmmdd\\\\\\\"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "673", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/zones/{type}/{zoneId}/forecast, api_description:Forecast data for zone. Example: /zones/forecast/MOZ028/forecast, required_params: [{\"name\": \"type\", \"type\": \"STRING\", \"description\": \"type: a valid zone type (list forthcoming)\"}, {\"name\": \"zoneId\", \"type\": \"STRING\", \"description\": \"zoneId: a zone id (list forthcoming)\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 3}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "674", "title": "", "text": "category_name:Sports, tool_name:Free NBA, api_name:Get All Stats, api_description:Retrieves all stats, required_params: [], optional_params: [], return_schema: \"{\\\"data\\\": [{\\\"id\\\": \\\"int\\\", \\\"ast\\\": \\\"int\\\", \\\"blk\\\": \\\"int\\\", \\\"dreb\\\": \\\"int\\\", \\\"fg3_pct\\\": \\\"float\\\", \\\"fg3a\\\": \\\"int\\\", \\\"fg3m\\\": \\\"int\\\", \\\"fg_pct\\\": \\\"float\\\", \\\"fga\\\": \\\"int\\\", \\\"fgm\\\": \\\"int\\\", \\\"ft_pct\\\": \\\"float\\\", \\\"fta\\\": \\\"int\\\", \\\"ftm\\\": \\\"int\\\", \\\"game\\\": {\\\"id\\\": \\\"int\\\", \\\"date\\\": \\\"str\\\", \\\"home_team_id\\\": \\\"int\\\", \\\"home_team_score\\\": \\\"int\\\", \\\"period\\\": \\\"int\\\", \\\"postseason\\\": \\\"bool\\\", \\\"season\\\": \\\"int\\\", \\\"status\\\": \\\"str\\\", \\\"time\\\": \\\"str\\\", \\\"visitor_team_id\\\": \\\"int\\\", \\\"visitor_team_score\\\": \\\"int\\\"}, \\\"min\\\": \\\"str\\\", \\\"oreb\\\": \\\"int\\\", \\\"pf\\\": \\\"int\\\", \\\"player\\\": {\\\"id\\\": \\\"int\\\", \\\"first_name\\\": \\\"str\\\", \\\"height_feet\\\": \\\"NoneType\\\", \\\"height_inches\\\": \\\"NoneType\\\", \\\"last_name\\\": \\\"str\\\", \\\"position\\\": \\\"str\\\", \\\"team_id\\\": \\\"int\\\", \\\"weight_pounds\\\": \\\"NoneType\\\"}, \\\"pts\\\": \\\"int\\\", \\\"reb\\\": \\\"int\\\", \\\"stl\\\": \\\"int\\\", \\\"team\\\": {\\\"id\\\": \\\"int\\\", \\\"abbreviation\\\": \\\"str\\\", \\\"city\\\": \\\"str\\\", \\\"conference\\\": \\\"str\\\", \\\"division\\\": \\\"str\\\", \\\"full_name\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\"}, \\\"turnover\\\": \\\"int\\\", \\\"_list_length\\\": 25}], \\\"meta\\\": {\\\"total_pages\\\": \\\"int\\\", \\\"current_page\\\": \\\"int\\\", \\\"next_page\\\": \\\"int\\\", \\\"per_page\\\": \\\"int\\\", \\\"total_count\\\": \\\"i\"", "metadata": {}}
{"_id": "675", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Cities Near Division, api_description:Get cities near the given administrative division, filtering by optional criteria., required_params: [{\"name\": \"divisionId\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"radius\", \"type\": \"NUMBER\", \"description\": \"The location radius within which to find cities\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "676", "title": "", "text": "category_name:Data, tool_name:Real-Time Web Search, api_name:Search, api_description:Get real-time organic search results from across the web. Supports all Google Advanced Search operators such (e.g. inurl:, site:, intitle:, etc)., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Search query.  Supports all Google advanced search operators (*site:*, *inurl:*, *intitle:*, etc).\\n\\ne.g. `website builder`\\ne.g. ` site:youtube.com`\\ne.g. `nda filetype:pdf`\\ne.g. `cristiano -ronaldo`\"}], optional_params: [], return_schema: {\"status\": \"str\", \"request_id\": \"str\", \"data\": [{\"title\": \"str\", \"snippet\": \"str\", \"url\": \"str\", \"domain\": \"str\", \"position\": \"int\", \"_list_length\": 98}]}", "metadata": {}}
{"_id": "677", "title": "", "text": "category_name:Data, tool_name:Social Links Search, api_name:Search Social Links, api_description:Get social profile links by search query or keywords. The following social networks are supported: Facebook, TikTok, Instagram, Snapchat, Twitter, Youtube, LinkedIn, GitHub and Pinterest., required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"Social links search query.\"}], optional_params: [], return_schema: {\"status\": \"str\", \"request_id\": \"str\", \"data\": {\"facebook\": [\"list of str with length 12\"], \"instagram\": [\"list of str with length 6\"], \"twitter\": [\"list of str with length 19\"], \"linkedin\": [\"list of str with length 22\"], \"github\": [\"list of str with length 2\"], \"youtube\": [\"list of str with length 1\"], \"pinterest\": [\"list of str with length 20\"], \"tiktok\": [\"list of str with length 11\"], \"snapchat\": [\"list of str with length 5\"]}}", "metadata": {}}
{"_id": "678", "title": "", "text": "category_name:Travel, tool_name:webcams.travel, api_name:/webcams/list/orderby={order},{sort}, api_description:This is a modifier. Returns the list of webcams ordered by {order}. The optional sorting direction is given by {sort}. Required {order}., required_params: [{\"name\": \"sort\", \"type\": \"STRING\", \"description\": \"Possible values are: \\\"asc\\\" (ascending), or \\\"desc\\\" (descending).\"}, {\"name\": \"order\", \"type\": \"STRING\", \"description\": \"Possible values are: \\\"popularity\\\" (default order: \\\"desc\\\"), \\\"hotness\\\" (default order: \\\"desc\\\"), \\\"new\\\" (default order: \\\"desc\\\"), \\\"recent\\\" (default order: \\\"desc\\\"), \\\"random\\\" (default order: \\\"asc\\\"), or \\\"distance\\\" (default order: \\\"asc\\\", only available if the modifier \\\"nearby\\\" has been applied).\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "679", "title": "", "text": "category_name:Travel, tool_name:webcams.travel, api_name:/webcams/list/category={category}[,{category}[,...]], api_description:This is a modifier. Returns a list of webcams according to the listed categories. Multiple categories must be separated by comma. Required: at least one {category}., required_params: [{\"name\": \"category\", \"type\": \"STRING\", \"description\": \"Comma separated list of category names.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "680", "title": "", "text": "category_name:Sports, tool_name:Football Prediction, api_name:Get list of fixture IDs, api_description:Returns a list of fixture IDs that can be used to make requests to endpoints expecting a ID url parameter.\nCan be filtered by:\n\n- iso_date\n- market\n- federation, required_params: [], optional_params: [], return_schema: {\"data\": [\"list of int with length 5\"]}", "metadata": {}}
{"_id": "681", "title": "", "text": "category_name:Sports, tool_name:Football Prediction, api_name:Away Team Last 10 Matches, api_description:Grab the statistics and list of the last 10 matches played by the away team for a certain ID, required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"(use predictions endpoint to get list of IDs)\"}], optional_params: [], return_schema: {\"data\": \"empty list\", \"errors\": {\"id\": \"str\"}}", "metadata": {}}
{"_id": "682", "title": "", "text": "category_name:Data, tool_name:JSearch, api_name:Search Filters, api_description:Accepts all **Search** endpoint parameters (except for `page` and `num_pages`) and returns the relevant filters and their estimated result counts for later use in search or for analytics., required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"Free-form jobs search query. It is highly recommended to include job title and location as part of the query, see query examples below.\\n\\n**Query examples**\\n- *web development in chicago*\\n- *marketing manager in new york via linkedin*\\n- *developer in germany 60306*\"}], optional_params: [], return_schema: {\"status\": \"str\", \"request_id\": \"str\", \"error\": {\"message\": \"str\", \"code\": \"int\"}}", "metadata": {}}
{"_id": "683", "title": "", "text": "category_name:Travel, tool_name:webcams.travel, api_name:/webcams/list/continent={continent}[,{continent}[,...]], api_description:This is a modifier. Returns a list of webcams according to the listed continents. Multiple continents must be separated by comma. Required: at least one {continent}., required_params: [{\"name\": \"continent\", \"type\": \"STRING\", \"description\": \"Possible values for {continent} are: \\\"AF\\\" (Africa), \\\"AN\\\" (Antarctica), \\\"AS\\\" (Asia), \\\"EU\\\" (Europe), \\\"NA\\\" (North America), \\\"OC\\\" (Oceania), or \\\"SA\\\" (South America)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "684", "title": "", "text": "category_name:Location, tool_name:Referential, api_name:Timezones, api_description:List the world's time zones in 20 languages, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "685", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Artist albums, api_description:Get artist albums, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Artist ID\"}], optional_params: [], return_schema: {\"data\": {\"artist\": {\"discography\": {\"albums\": {\"totalCount\": \"int\", \"items\": [{\"releases\": {\"items\": [{\"id\": \"str\", \"uri\": \"str\", \"name\": \"str\", \"type\": \"str\", \"date\": {\"year\": \"int\", \"isoString\": \"str\"}, \"coverArt\": {\"sources\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 3}]}, \"playability\": {\"playable\": \"bool\", \"reason\": \"str\"}, \"sharingInfo\": {\"shareId\": \"str\", \"shareUrl\": \"str\"}, \"tracks\": {\"totalCount\": \"int\"}, \"_list_length\": 1}]}, \"_list_length\": 11}]}}}}, \"extensions\": \"empty list\"}", "metadata": {}}
{"_id": "686", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:User followers, api_description:Get user followers, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"User ID\"}], optional_params: [], return_schema: {\"profiles\": [{\"uri\": \"str\", \"name\": \"str\", \"followers_count\": \"int\", \"color\": \"int\", \"_list_length\": 1000}]}", "metadata": {}}
{"_id": "687", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Artist overview, api_description:Get artist overview, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Artist ID\"}], optional_params: [], return_schema: \"{\\\"data\\\": {\\\"artist\\\": {\\\"id\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\", \\\"following\\\": \\\"bool\\\", \\\"sharingInfo\\\": {\\\"shareUrl\\\": \\\"str\\\", \\\"shareId\\\": \\\"str\\\"}, \\\"profile\\\": {\\\"name\\\": \\\"str\\\", \\\"verified\\\": \\\"bool\\\", \\\"pinnedItem\\\": {\\\"comment\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"item\\\": {\\\"uri\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"images\\\": {\\\"items\\\": [{\\\"sources\\\": [{\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"NoneType\\\", \\\"height\\\": \\\"NoneType\\\", \\\"_list_length\\\": 1}], \\\"_list_length\\\": 1}]}}}, \\\"biography\\\": {\\\"text\\\": \\\"str\\\"}, \\\"externalLinks\\\": {\\\"items\\\": [{\\\"name\\\": \\\"str\\\", \\\"url\\\": \\\"str\\\", \\\"_list_length\\\": 4}]}, \\\"playlists\\\": {\\\"totalCount\\\": \\\"int\\\", \\\"items\\\": [{\\\"uri\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\", \\\"owner\\\": {\\\"name\\\": \\\"str\\\"}, \\\"images\\\": {\\\"items\\\": [{\\\"sources\\\": [{\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"NoneType\\\", \\\"height\\\": \\\"NoneType\\\", \\\"_list_length\\\": 1}], \\\"_list_length\\\": 1}]}, \\\"_list_length\\\": 8}]}}, \\\"visuals\\\": {\\\"gallery\\\": {\\\"items\\\": [{\\\"sources\\\": [{\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"int\\\", \\\"height\\\": \\\"int\\\", \\\"_list_length\\\": 1}], \\\"_list_length\\\": 5}]}, \\\"avatarImage\\\": {\\\"sources\\\": [{\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"int\\\", \\\"height\\\": \\\"int\\\", \\\"_\"", "metadata": {}}
{"_id": "688", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Concerts, api_description:Concerts, required_params: [{\"name\": \"gl\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"{\\\"headerImageUri\\\": \\\"str\\\", \\\"userLocation\\\": \\\"str\\\", \\\"userLocationGeonameId\\\": \\\"str\\\", \\\"events\\\": [{\\\"artists\\\": [\\\"list of str with length 2\\\"], \\\"venue\\\": \\\"str\\\", \\\"location\\\": \\\"str\\\", \\\"openingDate\\\": \\\"str\\\", \\\"closingDate\\\": \\\"str\\\", \\\"concerts\\\": [{\\\"concert\\\": {\\\"id\\\": \\\"str\\\", \\\"artistUris\\\": [\\\"list of str with length 2\\\"], \\\"artists\\\": [{\\\"uri\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"imageUri\\\": \\\"str\\\", \\\"topTrackUri\\\": \\\"str\\\", \\\"id\\\": \\\"str\\\", \\\"_list_length\\\": 2}], \\\"date\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"location\\\": \\\"str\\\", \\\"venue\\\": \\\"str\\\", \\\"lat\\\": \\\"float\\\", \\\"lon\\\": \\\"float\\\", \\\"partnerConcerts\\\": [{\\\"partnerId\\\": \\\"str\\\", \\\"concertId\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"startDate\\\": {\\\"date\\\": \\\"str\\\", \\\"utcOffset\\\": \\\"int\\\", \\\"localDate\\\": \\\"str\\\", \\\"unknownTime\\\": \\\"bool\\\"}, \\\"festival\\\": \\\"bool\\\", \\\"ticketing\\\": [{\\\"minPrice\\\": \\\"str\\\", \\\"maxPrice\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"artistNameTitle\\\": \\\"str\\\", \\\"carouselArtistGid\\\": \\\"str\\\", \\\"carouselImage\\\": \\\"str\\\", \\\"carouselArtistName\\\": \\\"str\\\", \\\"isParent\\\": \\\"bool\\\", \\\"category\\\": \\\"str\\\", \\\"isFirstParty\\\": \\\"bool\\\", \\\"ticketers\\\": [{\\\"partnerDisplayName\\\": \\\"str\\\", \\\"url\"", "metadata": {}}
{"_id": "689", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Search (express multi-contract), api_description:Provides hotel and multiple rates information per hotel using the getExpress.MultiContract endpoint., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "690", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Download countries, api_description:Downloads a list of countries, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "691", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Search hotels locations by geolocation, api_description:Search locations by coordinates. Set coordinates latitude and longitude, required_params: [{\"name\": \"latitude\", \"type\": \"NUMBER\", \"description\": \"Latitude\"}, {\"name\": \"longitude\", \"type\": \"NUMBER\", \"description\": \"Longitude\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "692", "title": "", "text": "category_name:Sports, tool_name:Horse Racing, api_name:Query races, api_description:The best way to search races., required_params: [], optional_params: [], return_schema: {\"summary\": {\"total_results\": \"str\", \"total_pages\": \"str\", \"current_page\": \"str\"}, \"races\": [{\"id_race\": \"str\", \"name\": \"str\", \"course\": \"str\", \"date\": \"str\", \"distance\": \"str\", \"class\": \"str\", \"_list_length\": 20}]}", "metadata": {}}
{"_id": "693", "title": "", "text": "category_name:Sports, tool_name:Horse Racing, api_name:Jockeys win rate, api_description:Get Jockeys stats in the last days.\nRuns, Wins and Win Rate in %., required_params: [], optional_params: [], return_schema: {\"info\": \"str\", \"win_rate\": [{\"wins\": \"str\", \"runs\": \"str\", \"win-rate\": \"str\", \"jockey\": \"str\", \"_list_length\": 148}]}", "metadata": {}}
{"_id": "694", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/points/{point}/forecast, api_description:Forecast data for a point. The DWML format is a temporary format to aid transition and will be sunset at a later date. This response is derrived from the /gridpoints endpoint and is intentionally less structured. If more structure is required, developers should use the /gridpoints endpoint directly. Example: /points/39.0693,-94.6716/forecast, required_params: [{\"name\": \"point\", \"type\": \"STRING\", \"description\": \"point: EPSG:4326 latitude, EPSG:4326 longitude\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "695", "title": "", "text": "category_name:Communication, tool_name:Veriphone, api_name:verify, api_description:Global phone number verification, required_params: [{\"name\": \"phone\", \"type\": \"STRING\", \"description\": \"The phone number to verify\"}], optional_params: [], return_schema: {\"status\": \"str\", \"phone\": \"str\", \"phone_valid\": \"bool\", \"phone_type\": \"str\", \"phone_region\": \"str\", \"country\": \"str\", \"country_code\": \"str\", \"country_prefix\": \"str\", \"international_number\": \"str\", \"local_number\": \"str\", \"e164\": \"str\", \"carrier\": \"str\"}", "metadata": {}}
{"_id": "696", "title": "", "text": "category_name:Tools, tool_name:ViewDNS, api_name:Spam Database Lookup, api_description:Find out if your mail server is listed in any spam databases., required_params: [{\"name\": \"ip\", \"type\": \"STRING\", \"description\": \"the IP address to test for spam blacklisting\"}, {\"name\": \"output\", \"type\": \"STRING\", \"description\": \"the output format required ('xml' or 'json')\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "697", "title": "", "text": "category_name:Weather, tool_name:weather forecast 14 days, api_name:Get forecastdata by lat/lon, api_description:get forecast for 14 days for the location Lat/Lon, required_params: [{\"name\": \"LAT\", \"type\": \"NUMBER\", \"description\": \"Latitude\"}, {\"name\": \"LON\", \"type\": \"NUMBER\", \"description\": \"Longitude\"}], optional_params: [], return_schema: {\"title\": \"str\", \"link\": \"str\", \"modified\": \"str\", \"description\": \"str\", \"generator\": \"str\", \"location\": {\"city\": \"str\", \"country\": \"str\", \"country_name\": \"str\", \"tz_long\": \"str\", \"lat\": \"str\", \"lon\": \"str\", \"wmo\": \"str\", \"SI\": \"str\", \"SIU\": \"str\", \"CEL\": \"str\"}, \"ActualsYesterday\": [{\"Tmax\": \"str\", \"Tmin\": \"str\", \"sunshine_hours\": \"str\", \"symbol\": \"str\", \"symbol_text\": \"str\", \"TIME\": {\"year\": \"str\", \"mon\": \"str\", \"mday\": \"str\", \"weekday\": \"str\"}, \"_list_length\": 1}], \"6_hourly_forecast\": [{\"FCTTIME\": \"str\", \"symbol\": \"str\", \"symbol_text\": \"str\", \"temp\": \"str\", \"tdew\": \"str\", \"rh\": \"str\", \"pres\": \"str\", \"wind_bft\": \"str\", \"wind\": \"str\", \"wind_direction\": \"str\", \"wind_direction_dez\": \"str\", \"wind_gust\": \"str\", \"rain\": \"str\", \"rain_chance_0.3mm\": \"str\", \"_list_length\": 57}]}", "metadata": {}}
{"_id": "698", "title": "", "text": "category_name:Weather, tool_name:weather forecast 14 days, api_name:List of cities in one Country, api_description:List of cities in one Country, required_params: [], optional_params: [], return_schema: {\"link\": \"str\", \"modified\": \"str\", \"description\": \"str\", \"generator\": \"str\", \"location\": {\"country\": \"str\", \"countryname\": \"str\", \"NumberOfCity\": \"str\"}, \"Cities\": [{\"wmo\": \"str\", \"name\": \"str\", \"latitude\": \"str\", \"longitude\": \"str\", \"countryCode\": \"str\", \"_list_length\": 700}]}", "metadata": {}}
{"_id": "699", "title": "", "text": "category_name:Weather, tool_name:climate data, api_name:Get climate data by lat/lon or Key, api_description:get climate for  the location Lat/Lon, required_params: [], optional_params: [], return_schema: {\"title\": \"str\", \"link\": \"str\", \"modified\": \"str\", \"description\": \"str\", \"generator\": \"str\", \"location\": {\"city\": \"str\", \"country\": \"str\", \"country_name\": \"str\", \"tz_long\": \"str\", \"lat\": \"str\", \"lon\": \"str\", \"SI\": \"str\", \"SIU\": \"str\", \"CEL\": \"str\", \"start_date\": \"str\", \"end_date\": \"str\"}, \"ClimateDataMonth\": [{\"tmax\": \"str\", \"temp\": \"str\", \"tmin\": \"str\", \"accumulated_rain\": \"str\", \"days_with_rain\": \"str\", \"sun_hours\": \"str\", \"rh\": \"str\", \"TIME\": \"str\", \"_list_length\": 12}]}", "metadata": {}}
{"_id": "700", "title": "", "text": "category_name:Weather, tool_name:climate data, api_name:Search location by Name or zip code, api_description:Search location by Name or zip code and get the key for the forecast, required_params: [], optional_params: [], return_schema: {\"title\": \"str\", \"link\": \"str\", \"modified\": \"str\", \"description\": \"str\", \"generator\": \"str\", \"location\": [{\"wmo\": \"str\", \"city\": \"str\", \"country\": \"str\", \"country_name\": \"str\", \"_list_length\": 2}]}", "metadata": {}}
{"_id": "701", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/products/types/{typeId}/locations, api_description:A list of locations that have issues products for a type. Example: /products/types/AFD/locations, required_params: [{\"name\": \"typeId\", \"type\": \"STRING\", \"description\": \"typeId: an id of a valid product type (list forthcoming)\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 1}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "702", "title": "", "text": "category_name:Transportation, tool_name:Car API, api_name:Trim View, api_description:Returns all data associated with the vehicle trim., required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"exception\": \"str\", \"message\": \"str\", \"url\": \"str\", \"code\": \"int\"}", "metadata": {}}
{"_id": "703", "title": "", "text": "category_name:Transportation, tool_name:Car API, api_name:Bodies, api_description:To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"doors\", \"op\": \">=\", \"val\": 4}, {\"field\": \"type\", \"op\": \"in\", \"val\": [\"SUV\",\"Van\"]}]`\n\nSee /api/vehicle-attributes for a complete list of vehicle attributes.\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, type, doors, make_id, make_model_id, and make_model_trim_id., required_params: [], optional_params: [], return_schema: {\"exception\": \"str\", \"message\": \"str\", \"url\": \"str\", \"code\": \"int\"}", "metadata": {}}
{"_id": "704", "title": "", "text": "category_name:Database, tool_name:car code, api_name:/obd2/{code}, api_description:This endpoint will provide the human readable version of a requested obd2 code, required_params: [{\"name\": \"code\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"code\": \"str\", \"definition\": \"str\", \"cause\": [\"list of str with length 7\"]}", "metadata": {}}
{"_id": "705", "title": "", "text": "category_name:Email, tool_name:Blaze Verify, api_name:Verify an email, api_description:Verify a single email. If a verification request takes longer than the timeout, you may retry this request for up to 5 minutes. After 5 minutes, further requests will count against your usage. The verification result will be returned when it is available.<br><br>, required_params: [{\"name\": \"email\", \"type\": \"STRING\", \"description\": \"The email you want verified.\"}], optional_params: [], return_schema: {\"accept_all\": \"bool\", \"did_you_mean\": \"NoneType\", \"disposable\": \"bool\", \"domain\": \"str\", \"duration\": \"float\", \"email\": \"str\", \"first_name\": \"str\", \"free\": \"bool\", \"full_name\": \"str\", \"gender\": \"str\", \"last_name\": \"NoneType\", \"mx_record\": \"str\", \"reason\": \"str\", \"role\": \"bool\", \"score\": \"int\", \"smtp_provider\": \"str\", \"state\": \"str\", \"tag\": \"NoneType\", \"user\": \"str\"}", "metadata": {}}
{"_id": "706", "title": "", "text": "category_name:Search, tool_name:barcode.monster, api_name:code, api_description:Returns code information, required_params: [{\"name\": \"code\", \"type\": \"string\", \"description\": \"Barcode to search\"}], optional_params: [], return_schema: {\"status\": \"str\"}", "metadata": {}}
{"_id": "707", "title": "", "text": "category_name:Data, tool_name:Barcode Lookup, api_name:Product, api_description:Endpoint to retrieve product data., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "708", "title": "", "text": "category_name:Science, tool_name:CarbonFootprint, api_name:CarbonFootprintFromPublicTransit, api_description:Return CO2e in Kg from the use of public transporation., required_params: [{\"name\": \"distance\", \"type\": \"STRING\", \"description\": \"The distance in KM.\"}, {\"name\": \"type\", \"type\": \"STRING\", \"description\": \"The type of transportation, one of: Taxi, ClassicBus, EcoBus, Coach, NationalTrain, LightRail, Subway, FerryOnFoot, FerryInCar\"}], optional_params: [], return_schema: {\"carbonEquivalent\": \"float\"}", "metadata": {}}
{"_id": "709", "title": "", "text": "category_name:Travel, tool_name:Hotels, api_name:properties/get-details (Deprecated), api_description:Get all available information of a property, required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"The value of id field that returned in properties/list endpoint\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "710", "title": "", "text": "category_name:Travel, tool_name:Hotels, api_name:reviews/list (Deprecated), api_description:Get all reviews of specific property, required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"The value of id field that received from .../properties/list endpoint\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "711", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:Person, api_description:Return details on a specific person (actor, director, etc)., required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"id\": \"int\", \"full_name\": \"str\", \"first_name\": \"str\", \"last_name\": \"str\", \"tmdb_id\": \"int\", \"imdb_id\": \"str\", \"main_profession\": \"str\", \"secondary_profession\": \"str\", \"tertiary_profession\": \"str\", \"date_of_birth\": \"str\", \"date_of_death\": \"NoneType\", \"place_of_birth\": \"str\", \"gender\": \"str\", \"headshot_url\": \"str\", \"known_for\": [\"list of int with length 4\"], \"relevance_percentile\": \"int\"}", "metadata": {}}
{"_id": "712", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:New People, api_description:Get a listing of the ids of new people added to Watchmode within the date range., required_params: [], optional_params: [], return_schema: {\"success\": \"bool\", \"statusCode\": \"int\", \"statusMessage\": \"str\"}", "metadata": {}}
{"_id": "713", "title": "", "text": "category_name:Movies, tool_name:OTT details, api_name:Advanced Search, api_description:This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc., required_params: [], optional_params: [], return_schema: {\"page\": \"int\", \"results\": [{\"imageurl\": [\"list of str with length 1\"], \"genre\": [\"list of str with length 3\"], \"imdbid\": \"str\", \"title\": \"str\", \"imdbrating\": \"float\", \"released\": \"int\", \"synopsis\": \"str\", \"type\": \"str\", \"_list_length\": 50}]}", "metadata": {}}
{"_id": "714", "title": "", "text": "category_name:SMS, tool_name:SMSAPI.com, api_name:/subusers, api_description: , required_params: [], optional_params: [], return_schema: {\"message\": \"str\", \"error\": \"str\", \"errors\": \"NoneType\", \"developer_description\": \"NoneType\"}", "metadata": {}}
{"_id": "715", "title": "", "text": "category_name:Communication, tool_name:LINE Messaging, api_name:Get default rich menu ID, api_description:Gets the ID of the default rich menu set with the Messaging API., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "716", "title": "", "text": "category_name:SMS, tool_name:SMSAPI.com, api_name:/profile, api_description: , required_params: [], optional_params: [], return_schema: {\"message\": \"str\", \"error\": \"str\", \"errors\": \"NoneType\", \"developer_description\": \"NoneType\"}", "metadata": {}}
{"_id": "717", "title": "", "text": "category_name:SMS, tool_name:sms77io, api_name:Inbound, api_description:Retrieves inbound messages history., required_params: [{\"name\": \"p\", \"type\": \"STRING\", \"description\": \"API key from [Sms77.io](https://www.sms77.io)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "718", "title": "", "text": "category_name:Communication, tool_name:LINE Messaging, api_name:Get content, api_description:Gets image, video, and audio data sent by users., required_params: [{\"name\": \"messageId\", \"type\": \"STRING\", \"description\": \"Message ID\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "719", "title": "", "text": "category_name:SMS, tool_name:SMSAPI.com, api_name:/ping, api_description: , required_params: [], optional_params: [], return_schema: {\"authorized\": \"bool\", \"unavailable\": \"empty list\"}", "metadata": {}}
{"_id": "720", "title": "", "text": "category_name:SMS, tool_name:sms77io, api_name:Read, api_description:Retrieves information regarding subacounts., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "721", "title": "", "text": "category_name:SMS, tool_name:sms77io, api_name:Get Webhooks, api_description:Retrieves all existing webhooks., required_params: [{\"name\": \"p\", \"type\": \"STRING\", \"description\": \"API key from [Sms77.io](https://www.sms77.io).\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "722", "title": "", "text": "category_name:SMS, tool_name:SMSAPI.com, api_name:/subusers/{id}, api_description: , required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\", \"error\": \"str\", \"errors\": \"NoneType\", \"developer_description\": \"NoneType\"}", "metadata": {}}
{"_id": "723", "title": "", "text": "category_name:SMS, tool_name:sms77io, api_name:Voice, api_description:Retrieves voice messages history., required_params: [{\"name\": \"p\", \"type\": \"STRING\", \"description\": \"API key from [Sms77.io](https://www.sms77.io)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "724", "title": "", "text": "category_name:SMS, tool_name:SMSAPI.com, api_name:/short_url/links, api_description:List short URLs., required_params: [], optional_params: [], return_schema: {\"message\": \"str\", \"error\": \"str\", \"errors\": \"NoneType\", \"developer_description\": \"NoneType\"}", "metadata": {}}
{"_id": "725", "title": "", "text": "category_name:Education, tool_name:Helioviewer v1, api_name:getClosestImage, api_description:Find the image data that is closest to the requested date/time.  Return the associated metadata from the helioviewer database and the XML header of the JPEG2000 image file.\n\n        Either `sourceId` must be specified, or the combination of `observatory`, `instrument`, `detector`, and `measurement`., required_params: [{\"name\": \"date\", \"type\": \"STRING\", \"description\": \"Desired date/time of the image. ISO 8601 combined UTC date and time UTC format.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "726", "title": "", "text": "category_name:Travel, tool_name:Hotels, api_name:properties/list (Deprecated), api_description:List properties with options and filters, required_params: [{\"name\": \"checkOut\", \"type\": \"STRING\", \"description\": \"The check-out date at hotel, formated as yyyy-MM-dd\"}, {\"name\": \"destinationId\", \"type\": \"NUMBER\", \"description\": \"The value of destinationId returned in locations/search endpoint\"}, {\"name\": \"pageNumber\", \"type\": \"NUMBER\", \"description\": \"The page number in which data is display\"}, {\"name\": \"checkIn\", \"type\": \"STRING\", \"description\": \"The check-in date at hotel, formated as yyyy-MM-dd\"}, {\"name\": \"adults1\", \"type\": \"NUMBER\", \"description\": \"The number of adults in first room\"}, {\"name\": \"pageSize\", \"type\": \"NUMBER\", \"description\": \"Total items returned in every requests (max 25)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "727", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Hotel details, api_description:Get all reviews and images of the hotel by hotel_id, required_params: [{\"name\": \"hotel_id\", \"type\": \"NUMBER\", \"description\": \"Hotel id\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "728", "title": "", "text": "category_name:Social, tool_name:Tronald Dump, api_name:Quote, api_description:Get quote by id, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"timestamp\": \"str\", \"status\": \"int\", \"error\": \"str\", \"message\": \"str\", \"path\": \"str\"}", "metadata": {}}
{"_id": "729", "title": "", "text": "category_name:Search, tool_name:SuperHero Search, api_name:Search, api_description:This endpoint searches through our superhero database, required_params: [], optional_params: [], return_schema: {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\", \"powerstats\": {\"intelligence\": \"int\", \"strength\": \"int\", \"speed\": \"int\", \"durability\": \"int\", \"power\": \"int\", \"combat\": \"int\"}, \"appearance\": {\"gender\": \"str\", \"race\": \"str\", \"height\": [\"list of str with length 2\"], \"weight\": [\"list of str with length 2\"], \"eyeColor\": \"str\", \"hairColor\": \"str\"}, \"biography\": {\"fullName\": \"str\", \"alterEgos\": \"str\", \"aliases\": [\"list of str with length 15\"], \"placeOfBirth\": \"str\", \"firstAppearance\": \"str\", \"publisher\": \"str\", \"alignment\": \"str\"}, \"work\": {\"occupation\": \"str\", \"base\": \"str\"}, \"connections\": {\"groupAffiliation\": \"str\", \"relatives\": \"str\"}, \"images\": {\"xs\": \"str\", \"sm\": \"str\", \"md\": \"str\", \"lg\": \"str\"}}", "metadata": {}}
{"_id": "730", "title": "", "text": "category_name:Social, tool_name:Tronald Dump, api_name:Search quotes, api_description:Free text search for quotes., required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "731", "title": "", "text": "category_name:Social, tool_name:Tronald Dump, api_name:/tag, api_description:Retrieve a list of available tags, required_params: [], optional_params: [], return_schema: {\"count\": \"int\", \"total\": \"int\", \"_embedded\": {\"tag\": [{\"created_at\": \"str\", \"updated_at\": \"str\", \"value\": \"str\", \"_links\": {\"self\": {\"href\": \"str\"}}, \"_list_length\": 28}]}}", "metadata": {}}
{"_id": "732", "title": "", "text": "category_name:Finance, tool_name:Trading View, api_name:stocks/get-financials, api_description:Get financials information related to a ticker or symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"The format is \\\"exchange:symbol\\\". Ex : NASDAQ:TSLA\"}, {\"name\": \"columns\", \"type\": \"STRING\", \"description\": \"One of the following (Separated by comma for multiple options) : ADR,ADX,ADX-DI,ADX-DI|1,ADX-DI|120,ADX-DI|15,ADX-DI|1M,ADX-DI|1W,ADX-DI|240,ADX-DI|30,ADX-DI|5,ADX-DI|60,ADX+DI,ADX|1,ADX|120,ADX|15,ADX|1M,ADX|1W,ADX|240,ADX|30,ADX|5,ADX|60,after&#95;tax&#95;margin,AO,AO|1,AO|120,AO|15,AO|1M,AO|1W,AO|240,AO|30,AO|5,AO|60,Aroon.Down,Aroon.Up,ATR,average&#95;volume,average&#95;volume&#95;10d&#95;calc,average&#95;volume&#95;30d&#95;calc,average&#95;volume&#95;60d&#95;calc,average&#95;volume&#95;90d&#95;calc,base&#95;currency&#95;logoid,basic&#95;elements,basic&#95;eps&#95;net&#95;income,BB.lower,BB.upper,BBPower,BBPower|1,BBPower|120,BBPower|15,BBPower|1M,BBPower|1W,BBPower|240,BBPower|30,BBPower|5,BBPower|60,beta&#95;1&#95;year,beta&#95;3&#95;year,beta&#95;5&#95;year,CCI20,CCI20|1,CCI20|120,CCI20|15,CCI20|1M,CCI20|1W,CCI20|240,CCI20|30,CCI20|5,CCI20|60,ChaikinMoneyFlow,change,change&#95;abs,change&#95;abs|1,change&#95;abs|15,change&#95;abs|1M,change&#95;abs|1W,change&#95;abs|240,change&#95;abs|5,change&#95;abs|60,change&#95;from&#95;open,change&#95;from&#95;open&#95;abs,change|1,change|15,change|1M,change|1W,change|240,change|5,change|60,close,close|1,close|120,close|15,close|1M,close|1W,close|240,close|30,close|5,close|60,country,currency&#95;logoid,current&#95;ratio,debt&#95;to&#95;assets,debt&#95;to&#95;equity,debt&#95;to&#95;equity&#95;fq,description,dividend&#95;yield&#95;recent,dividends&#95;paid,dividends&#95;per&#95;share&#95;fq,dividends&#95;yield,DonchCh20.Lower,DonchCh20.Upper,dps&#95;common&#95;stock&#95;prim&#95;issue&#95;fy,earnings&#95;per&#95;share&#95;basic&#95;ttm,earnings&#95;per&#95;share&#95;diluted&#95;ttm,earnings&#95;per&#95;share&#95;forecast&#95;next&#95;fq,earnings&#95;per&#95;share&#95;fq,earnings&#95;release&#95;date,earnings&#95;release&#95;next&#95;date,ebitda,elements,EMA10,EMA10|1,EMA10|120,EMA10|15,EMA10|1M,EMA10|1W,EMA10|240,EMA10|30,EMA10|5,EMA10|60,EMA100,EMA100|1,EMA100|120,EMA100|15,EMA100|1M,EMA100|1W,EMA100|240,EMA100|30,EMA100|5,EMA100|60,EMA20,EMA20|1,EMA20|120,EMA20|15,EMA20|1M,EMA20|1W,EMA20|240,EMA20|30,EMA20|5,EMA20|60,EMA200,EMA200|1,EMA200|120,EMA200|15,EMA200|1M,EMA200|1W,EMA200|240,EMA200|30,EMA200|5,EMA200|60,EMA30,EMA30|1,EMA30|120,EMA30|15,EMA30|1M,EMA30|1W,EMA30|240,EMA30|30,EMA30|5,EMA30|60,EMA5,EMA50,EMA50|1,EMA50|120,EMA50|15,EMA50|1M,EMA50|1W,EMA50|240,EMA50|30,EMA50|5,EMA50|60,enterprise&#95;value&#95;ebitda&#95;ttm,enterprise&#95;value&#95;fq,eps&#95;surprise&#95;fq,eps&#95;surprise&#95;percent&#95;fq,exchange,float&#95;shares&#95;outstanding,free&#95;cash&#95;flow,gap,goodwill,gross&#95;margin,gross&#95;profit,gross&#95;profit&#95;fq,high,High.1M,High.3M,High.6M,High.All,HullMA9,HullMA9|1,HullMA9|120,HullMA9|15,HullMA9|1M,HullMA9|1W,HullMA9|240,HullMA9|30,HullMA9|5,HullMA9|60,Ichimoku.BLine,Ichimoku.BLine|1,Ichimoku.BLine|120,Ichimoku.BLine|15,Ichimoku.BLine|1M,Ichimoku.BLine|1W,Ichimoku.BLine|240,Ichimoku.BLine|30,Ichimoku.BLine|5,Ichimoku.BLine|60,Ichimoku.CLine,Ichimoku.Lead1,Ichimoku.Lead2,industry,is&#95;primary,KltChnl.lower,KltChnl.upper,last&#95;annual&#95;eps,last&#95;annual&#95;revenue,logoid,long&#95;term&#95;capital,low,Low.1M,Low.3M,Low.6M,Low.All,MACD.macd,MACD.macd|1,MACD.macd|120,MACD.macd|15,MACD.macd|1M,MACD.macd|1W,MACD.macd|240,MACD.macd|30,MACD.macd|5,MACD.macd|60,MACD.signal,MACD.signal|1,MACD.signal|120,MACD.signal|15,MACD.signal|1M,MACD.signal|1W,MACD.signal|240,MACD.signal|30,MACD.signal|5,MACD.signal|60,market&#95;cap&#95;basic,market&#95;cap&#95;calc,Mom,Mom|1,Mom|120,Mom|15,Mom|1M,Mom|1W,Mom|240,Mom|30,Mom|5,Mom|60,MoneyFlow,name,net&#95;debt,net&#95;income,number&#95;of&#95;employees,number&#95;of&#95;shareholders,open,operating&#95;margin,P.SAR,Perf.1M,Perf.3M,Perf.6M,Perf.W,Perf.Y,Perf.YTD,Pivot.M.Camarilla.Middle,Pivot.M.Camarilla.Middle|1,Pivot.M.Camarilla.Middle|120,Pivot.M.Camarilla.Middle|15,Pivot.M.Camarilla.Middle|1M,Pivot.M.Camarilla.Middle|1W,Pivot.M.Camarilla.Middle|240,Pivot.M.Camarilla.Middle|30,Pivot.M.Camarilla.Middle|5,Pivot.M.Camarilla.Middle|60,Pivot.M.Camarilla.R1,Pivot.M.Camarilla.R1|1,Pivot.M.Camarilla.R1|120,Pivot.M.Camarilla.R1|15,Pivot.M.Camarilla.R1|1M,Pivot.M.Camarilla.R1|1W,Pivot.M.Camarilla.R1|240,Pivot.M.Camarilla.R1|30,Pivot.M.Camarilla.R1|5,Pivot.M.Camarilla.R1|60,Pivot.M.Camarilla.R2,Pivot.M.Camarilla.R2|1,Pivot.M.Camarilla.R2|120,Pivot.M.Camarilla.R2|15,Pivot.M.Camarilla.R2|1M,Pivot.M.Camarilla.R2|1W,Pivot.M.Camarilla.R2|240,Pivot.M.Camarilla.R2|30,Pivot.M.Camarilla.R2|5,Pivot.M.Camarilla.R2|60,Pivot.M.Camarilla.R3,Pivot.M.Camarilla.R3|1,Pivot.M.Camarilla.R3|120,Pivot.M.Camarilla.R3|15,Pivot.M.Camarilla.R3|1M,Pivot.M.Camarilla.R3|1W,Pivot.M.Camarilla.R3|240,Pivot.M.Camarilla.R3|30,Pivot.M.Camarilla.R3|5,Pivot.M.Camarilla.R3|60,Pivot.M.Camarilla.S1,Pivot.M.Camarilla.S1|1,Pivot.M.Camarilla.S1|120,Pivot.M.Camarilla.S1|15,Pivot.M.Camarilla.S1|1M,Pivot.M.Camarilla.S1|1W,Pivot.M.Camarilla.S1|240,Pivot.M.Camarilla.S1|30,Pivot.M.Camarilla.S1|5,Pivot.M.Camarilla.S1|60,Pivot.M.Camarilla.S2,Pivot.M.Camarilla.S2|1,Pivot.M.Camarilla.S2|120,Pivot.M.Camarilla.S2|15,Pivot.M.Camarilla.S2|1M,Pivot.M.Camarilla.S2|1W,Pivot.M.Camarilla.S2|240,Pivot.M.Camarilla.S2|30,Pivot.M.Camarilla.S2|5,Pivot.M.Camarilla.S2|60,Pivot.M.Camarilla.S3,Pivot.M.Camarilla.S3|1,Pivot.M.Camarilla.S3|120,Pivot.M.Camarilla.S3|15,Pivot.M.Camarilla.S3|1M,Pivot.M.Camarilla.S3|1W,Pivot.M.Camarilla.S3|240,Pivot.M.Camarilla.S3|30,Pivot.M.Camarilla.S3|5,Pivot.M.Camarilla.S3|60,Pivot.M.Classic.Middle,Pivot.M.Classic.Middle|1,Pivot.M.Classic.Middle|120,Pivot.M.Classic.Middle|15,Pivot.M.Classic.Middle|1M,Pivot.M.Classic.Middle|1W,Pivot.M.Classic.Middle|240,Pivot.M.Classic.Middle|30,Pivot.M.Classic.Middle|5,Pivot.M.Classic.Middle|60,Pivot.M.Classic.R1,Pivot.M.Classic.R1|1,Pivot.M.Classic.R1|120,Pivot.M.Classic.R1|15,Pivot.M.Classic.R1|1M,Pivot.M.Classic.R1|1W,Pivot.M.Classic.R1|240,Pivot.M.Classic.R1|30,Pivot.M.Classic.R1|5,Pivot.M.Classic.R1|60,Pivot.M.Classic.R2,Pivot.M.Classic.R2|1,Pivot.M.Classic.R2|120,Pivot.M.Classic.R2|15,Pivot.M.Classic.R2|1M,Pivot.M.Classic.R2|1W,Pivot.M.Classic.R2|240,Pivot.M.Classic.R2|30,Pivot.M.Classic.R2|5,Pivot.M.Classic.R2|60,Pivot.M.Classic.R3,Pivot.M.Classic.R3|1,Pivot.M.Classic.R3|120,Pivot.M.Classic.R3|15,Pivot.M.Classic.R3|1M,Pivot.M.Classic.R3|1W,Pivot.M.Classic.R3|240,Pivot.M.Classic.R3|30,Pivot.M.Classic.R3|5,Pivot.M.Classic.R3|60,Pivot.M.Classic.S1,Pivot.M.Classic.S1|1,Pivot.M.Classic.S1|120,Pivot.M.Classic.S1|15,Pivot.M.Classic.S1|1M,Pivot.M.Classic.S1|1W,Pivot.M.Classic.S1|240,Pivot.M.Classic.S1|30,Pivot.M.Classic.S1|5,Pivot.M.Classic.S1|60,Pivot.M.Classic.S2,Pivot.M.Classic.S2|1,Pivot.M.Classic.S2|120,Pivot.M.Classic.S2|15,Pivot.M.Classic.S2|1M,Pivot.M.Classic.S2|1W,Pivot.M.Classic.S2|240,Pivot.M.Classic.S2|30,Pivot.M.Classic.S2|5,Pivot.M.Classic.S2|60,Pivot.M.Classic.S3,Pivot.M.Classic.S3|1,Pivot.M.Classic.S3|120,Pivot.M.Classic.S3|15,Pivot.M.Classic.S3|1M,Pivot.M.Classic.S3|1W,Pivot.M.Classic.S3|240,Pivot.M.Classic.S3|30,Pivot.M.Classic.S3|5,Pivot.M.Classic.S3|60,Pivot.M.Demark.Middle,Pivot.M.Demark.Middle|1,Pivot.M.Demark.Middle|120,Pivot.M.Demark.Middle|15,Pivot.M.Demark.Middle|1M,Pivot.M.Demark.Middle|1W,Pivot.M.Demark.Middle|240,Pivot.M.Demark.Middle|30,Pivot.M.Demark.Middle|5,Pivot.M.Demark.Middle|60,Pivot.M.Demark.R1,Pivot.M.Demark.R1|1,Pivot.M.Demark.R1|120,Pivot.M.Demark.R1|15,Pivot.M.Demark.R1|1M,Pivot.M.Demark.R1|1W,Pivot.M.Demark.R1|240,Pivot.M.Demark.R1|30,Pivot.M.Demark.R1|5,Pivot.M.Demark.R1|60,Pivot.M.Demark.S1,Pivot.M.Demark.S1|1,Pivot.M.Demark.S1|120,Pivot.M.Demark.S1|15,Pivot.M.Demark.S1|1M,Pivot.M.Demark.S1|1W,Pivot.M.Demark.S1|240,Pivot.M.Demark.S1|30,Pivot.M.Demark.S1|5,Pivot.M.Demark.S1|60,Pivot.M.Fibonacci.Middle,Pivot.M.Fibonacci.Middle|1,Pivot.M.Fibonacci.Middle|120,Pivot.M.Fibonacci.Middle|15,Pivot.M.Fibonacci.Middle|1M,Pivot.M.Fibonacci.Middle|1W,Pivot.M.Fibonacci.Middle|240,Pivot.M.Fibonacci.Middle|30,Pivot.M.Fibonacci.Middle|5,Pivot.M.Fibonacci.Middle|60,Pivot.M.Fibonacci.R1,Pivot.M.Fibonacci.R1|1,Pivot.M.Fibonacci.R1|120,Pivot.M.Fibonacci.R1|15,Pivot.M.Fibonacci.R1|1M,Pivot.M.Fibonacci.R1|1W,Pivot.M.Fibonacci.R1|240,Pivot.M.Fibonacci.R1|30,Pivot.M.Fibonacci.R1|5,Pivot.M.Fibonacci.R1|60,Pivot.M.Fibonacci.R2,Pivot.M.Fibonacci.R2|1,Pivot.M.Fibonacci.R2|120,Pivot.M.Fibonacci.R2|15,Pivot.M.Fibonacci.R2|1M,Pivot.M.Fibonacci.R2|1W,Pivot.M.Fibonacci.R2|240,Pivot.M.Fibonacci.R2|30,Pivot.M.Fibonacci.R2|5,Pivot.M.Fibonacci.R2|60,Pivot.M.Fibonacci.R3,Pivot.M.Fibonacci.R3|1,Pivot.M.Fibonacci.R3|120,Pivot.M.Fibonacci.R3|15,Pivot.M.Fibonacci.R3|1M,Pivot.M.Fibonacci.R3|1W,Pivot.M.Fibonacci.R3|240,Pivot.M.Fibonacci.R3|30,Pivot.M.Fibonacci.R3|5,Pivot.M.Fibonacci.R3|60,Pivot.M.Fibonacci.S1,Pivot.M.Fibonacci.S1|1,Pivot.M.Fibonacci.S1|120,Pivot.M.Fibonacci.S1|15,Pivot.M.Fibonacci.S1|1M,Pivot.M.Fibonacci.S1|1W,Pivot.M.Fibonacci.S1|240,Pivot.M.Fibonacci.S1|30,Pivot.M.Fibonacci.S1|5,Pivot.M.Fibonacci.S1|60,Pivot.M.Fibonacci.S2,Pivot.M.Fibonacci.S2|1,Pivot.M.Fibonacci.S2|120,Pivot.M.Fibonacci.S2|15,Pivot.M.Fibonacci.S2|1M,Pivot.M.Fibonacci.S2|1W,Pivot.M.Fibonacci.S2|240,Pivot.M.Fibonacci.S2|30,Pivot.M.Fibonacci.S2|5,Pivot.M.Fibonacci.S2|60,Pivot.M.Fibonacci.S3,Pivot.M.Fibonacci.S3|1,Pivot.M.Fibonacci.S3|120,Pivot.M.Fibonacci.S3|15,Pivot.M.Fibonacci.S3|1M,Pivot.M.Fibonacci.S3|1W,Pivot.M.Fibonacci.S3|240,Pivot.M.Fibonacci.S3|30,Pivot.M.Fibonacci.S3|5,Pivot.M.Fibonacci.S3|60,Pivot.M.Woodie.Middle,Pivot.M.Woodie.Middle|1,Pivot.M.Woodie.Middle|120,Pivot.M.Woodie.Middle|15,Pivot.M.Woodie.Middle|1M,Pivot.M.Woodie.Middle|1W,Pivot.M.Woodie.Middle|240,Pivot.M.Woodie.Middle|30,Pivot.M.Woodie.Middle|5,Pivot.M.Woodie.Middle|60,Pivot.M.Woodie.R1,Pivot.M.Woodie.R1|1,Pivot.M.Woodie.R1|120,Pivot.M.Woodie.R1|15,Pivot.M.Woodie.R1|1M,Pivot.M.Woodie.R1|1W,Pivot.M.Woodie.R1|240,Pivot.M.Woodie.R1|30,Pivot.M.Woodie.R1|5,Pivot.M.Woodie.R1|60,Pivot.M.Woodie.R2,Pivot.M.Woodie.R2|1,Pivot.M.Woodie.R2|120,Pivot.M.Woodie.R2|15,Pivot.M.Woodie.R2|1M,Pivot.M.Woodie.R2|1W,Pivot.M.Woodie.R2|240,Pivot.M.Woodie.R2|30,Pivot.M.Woodie.R2|5,Pivot.M.Woodie.R2|60,Pivot.M.Woodie.R3,Pivot.M.Woodie.R3|1,Pivot.M.Woodie.R3|120,Pivot.M.Woodie.R3|15,Pivot.M.Woodie.R3|1M,Pivot.M.Woodie.R3|1W,Pivot.M.Woodie.R3|240,Pivot.M.Woodie.R3|30,Pivot.M.Woodie.R3|5,Pivot.M.Woodie.R3|60,Pivot.M.Woodie.S1,Pivot.M.Woodie.S1|1,Pivot.M.Woodie.S1|120,Pivot.M.Woodie.S1|15,Pivot.M.Woodie.S1|1M,Pivot.M.Woodie.S1|1W,Pivot.M.Woodie.S1|240,Pivot.M.Woodie.S1|30,Pivot.M.Woodie.S1|5,Pivot.M.Woodie.S1|60,Pivot.M.Woodie.S2,Pivot.M.Woodie.S2|1,Pivot.M.Woodie.S2|120,Pivot.M.Woodie.S2|15,Pivot.M.Woodie.S2|1M,Pivot.M.Woodie.S2|1W,Pivot.M.Woodie.S2|240,Pivot.M.Woodie.S2|30,Pivot.M.Woodie.S2|5,Pivot.M.Woodie.S2|60,Pivot.M.Woodie.S3,Pivot.M.Woodie.S3|1,Pivot.M.Woodie.S3|120,Pivot.M.Woodie.S3|15,Pivot.M.Woodie.S3|1M,Pivot.M.Woodie.S3|1W,Pivot.M.Woodie.S3|240,Pivot.M.Woodie.S3|30,Pivot.M.Woodie.S3|5,Pivot.M.Woodie.S3|60,post&#95;change,postmarket&#95;change,postmarket&#95;change&#95;abs,postmarket&#95;close,postmarket&#95;high,postmarket&#95;low,postmarket&#95;open,postmarket&#95;volume,pre&#95;change,pre&#95;tax&#95;margin,preferred&#95;dividends,premarket&#95;change,premarket&#95;change&#95;abs,premarket&#95;change&#95;from&#95;open,premarket&#95;change&#95;from&#95;open&#95;abs,premarket&#95;close,premarket&#95;gap,premarket&#95;high,premarket&#95;low,premarket&#95;open,premarket&#95;volume,price&#95;52&#95;week&#95;high,price&#95;52&#95;week&#95;low,price&#95;book&#95;fq,price&#95;book&#95;ratio,price&#95;earnings&#95;to&#95;growth&#95;ttm,price&#95;earnings&#95;ttm,price&#95;free&#95;cash&#95;flow&#95;ttm,price&#95;revenue&#95;ttm,price&#95;sales,price&#95;sales&#95;ratio,quick&#95;ratio,Rec.BBPower,Rec.BBPower|1,Rec.BBPower|120,Rec.BBPower|15,Rec.BBPower|1M,Rec.BBPower|1W,Rec.BBPower|240,Rec.BBPower|30,Rec.BBPower|5,Rec.BBPower|60,Rec.HullMA9,Rec.HullMA9|1,Rec.HullMA9|120,Rec.HullMA9|15,Rec.HullMA9|1M,Rec.HullMA9|1W,Rec.HullMA9|240,Rec.HullMA9|30,Rec.HullMA9|5,Rec.HullMA9|60,Rec.Ichimoku,Rec.Ichimoku|1,Rec.Ichimoku|120,Rec.Ichimoku|15,Rec.Ichimoku|1M,Rec.Ichimoku|1W,Rec.Ichimoku|240,Rec.Ichimoku|30,Rec.Ichimoku|5,Rec.Ichimoku|60,Rec.Stoch.RSI,Rec.Stoch.RSI|1,Rec.Stoch.RSI|120,Rec.Stoch.RSI|15,Rec.Stoch.RSI|1M,Rec.Stoch.RSI|1W,Rec.Stoch.RSI|240,Rec.Stoch.RSI|30,Rec.Stoch.RSI|5,Rec.Stoch.RSI|60,Rec.UO,Rec.UO|1,Rec.UO|120,Rec.UO|15,Rec.UO|1M,Rec.UO|1W,Rec.UO|240,Rec.UO|30,Rec.UO|5,Rec.UO|60,Rec.VWMA,Rec.VWMA|1,Rec.VWMA|120,Rec.VWMA|15,Rec.VWMA|1M,Rec.VWMA|1W,Rec.VWMA|240,Rec.VWMA|30,Rec.VWMA|5,Rec.VWMA|60,Rec.WR,Rec.WR|1,Rec.WR|120,Rec.WR|15,Rec.WR|1M,Rec.WR|1W,Rec.WR|240,Rec.WR|30,Rec.WR|5,Rec.WR|60,Recommend.All,Recommend.All|1,Recommend.All|120,Recommend.All|15,Recommend.All|1M,Recommend.All|1W,Recommend.All|240,Recommend.All|30,Recommend.All|5,Recommend.All|60,Recommend.MA,Recommend.MA|1,Recommend.MA|120,Recommend.MA|15,Recommend.MA|1M,Recommend.MA|1W,Recommend.MA|240,Recommend.MA|30,Recommend.MA|5,Recommend.MA|60,Recommend.Other,Recommend.Other|1,Recommend.Other|120,Recommend.Other|15,Recommend.Other|1M,Recommend.Other|1W,Recommend.Other|240,Recommend.Other|30,Recommend.Other|5,Recommend.Other|60,relative&#95;volume,relative&#95;volume&#95;10d&#95;calc,relative&#95;volume&#95;intraday|5,return&#95;of&#95;invested&#95;capital&#95;percent&#95;ttm,return&#95;on&#95;assets,return&#95;on&#95;equity,return&#95;on&#95;invested&#95;capital,revenue&#95;per&#95;employee,ROC,RSI,RSI|1,RSI|120,RSI|15,RSI|1M,RSI|1W,RSI|240,RSI|30,RSI|5,RSI|60,RSI7,sector,SMA10,SMA10|1,SMA10|120,SMA10|15,SMA10|1M,SMA10|1W,SMA10|240,SMA10|30,SMA10|5,SMA10|60,SMA100,SMA100|1,SMA100|120,SMA100|15,SMA100|1M,SMA100|1W,SMA100|240,SMA100|30,SMA100|5,SMA100|60,SMA20,SMA20|1,SMA20|120,SMA20|15,SMA20|1M,SMA20|1W,SMA20|240,SMA20|30,SMA20|5,SMA20|60,SMA200,SMA200|1,SMA200|120,SMA200|15,SMA200|1M,SMA200|1W,SMA200|240,SMA200|30,SMA200|5,SMA200|60,SMA30,SMA30|1,SMA30|120,SMA30|15,SMA30|1M,SMA30|1W,SMA30|240,SMA30|30,SMA30|5,SMA30|60,SMA5,SMA50,SMA50|1,SMA50|120,SMA50|15,SMA50|1M,SMA50|1W,SMA50|240,SMA50|30,SMA50|5,SMA50|60,Stoch.D,Stoch.D|1,Stoch.D|120,Stoch.D|15,Stoch.D|1M,Stoch.D|1W,Stoch.D|240,Stoch.D|30,Stoch.D|5,Stoch.D|60,Stoch.K,Stoch.K|1,Stoch.K|120,Stoch.K|15,Stoch.K|1M,Stoch.K|1W,Stoch.K|240,Stoch.K|30,Stoch.K|5,Stoch.K|60,Stoch.RSI.D,Stoch.RSI.K,Stoch.RSI.K|1,Stoch.RSI.K|120,Stoch.RSI.K|15,Stoch.RSI.K|1M,Stoch.RSI.K|1W,Stoch.RSI.K|240,Stoch.RSI.K|30,Stoch.RSI.K|5,Stoch.RSI.K|60,submarket,total&#95;assets,total&#95;capital,total&#95;current&#95;assets,total&#95;debt,total&#95;liabilities&#95;fq,total&#95;liabilities&#95;fy,total&#95;revenue,total&#95;shares&#95;outstanding,total&#95;shares&#95;outstanding&#95;fundamental,type,UO,UO|1,UO|120,UO|15,UO|1M,UO|1W,UO|240,UO|30,UO|5,UO|60,update&#95;mode,Value.Traded,Volatility.D,Volatility.M,Volatility.W,volume,VWAP,VWMA,VWMA|1,VWMA|120,VWMA|15,VWMA|1M,VWMA|1W,VWMA|240,VWMA|30,VWMA|5,VWMA|60,W.R,W.R|1,W.R|120,W.R|15,W.R|1M,W.R|1W,W.R|240,W.R|30,W.R|5,W.R|60\"}], optional_params: [], return_schema: {\"totalCount\": \"int\", \"data\": [{\"s\": \"str\", \"d\": [\"list of str with length 5\"], \"_list_length\": 1}], \"columns\": [\"list of str with length 5\"]}", "metadata": {}}
{"_id": "733", "title": "", "text": "category_name:Finance, tool_name:Trading View, api_name:calendars/get-earning-calendar, api_description:Get earning calendar by specific date range and exchange, required_params: [{\"name\": \"from\", \"type\": \"NUMBER\", \"description\": \"The epoch timestamp in seconds. Ex : 1661187600\"}, {\"name\": \"to\", \"type\": \"NUMBER\", \"description\": \"The epoch timestamp in seconds. Ex : 1661619600\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "734", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Ontology Gas Balance, api_description:This endpoint will return back the Ontology Gas balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "735", "title": "", "text": "category_name:Finance, tool_name:Global Ethereum Price Index - GEX, api_name:All Ticker Data, api_description:If no query parameters are sent, then returns ticker data for every supported symbol. If fiat(s) are sent as parameters, then only the ticker for those values is sent., required_params: [{\"name\": \"market\", \"type\": \"STRING\", \"description\": \"Possible values: global, local\"}], optional_params: [], return_schema: \"{\\\"ETHEUR\\\": {\\\"ask\\\": \\\"float\\\", \\\"bid\\\": \\\"float\\\", \\\"last\\\": \\\"float\\\", \\\"high\\\": \\\"float\\\", \\\"low\\\": \\\"float\\\", \\\"volume\\\": \\\"float\\\", \\\"open\\\": {\\\"hour\\\": \\\"float\\\", \\\"day\\\": \\\"float\\\", \\\"week\\\": \\\"float\\\", \\\"month\\\": \\\"float\\\", \\\"month_3\\\": \\\"float\\\", \\\"month_6\\\": \\\"float\\\", \\\"year\\\": \\\"float\\\"}, \\\"averages\\\": {\\\"day\\\": \\\"float\\\", \\\"week\\\": \\\"float\\\", \\\"month\\\": \\\"float\\\"}, \\\"changes\\\": {\\\"price\\\": {\\\"hour\\\": \\\"float\\\", \\\"day\\\": \\\"float\\\", \\\"week\\\": \\\"float\\\", \\\"month\\\": \\\"float\\\", \\\"month_3\\\": \\\"float\\\", \\\"month_6\\\": \\\"float\\\", \\\"year\\\": \\\"float\\\"}, \\\"percent\\\": {\\\"hour\\\": \\\"float\\\", \\\"day\\\": \\\"float\\\", \\\"week\\\": \\\"float\\\", \\\"month\\\": \\\"float\\\", \\\"month_3\\\": \\\"float\\\", \\\"month_6\\\": \\\"float\\\", \\\"year\\\": \\\"float\\\"}}, \\\"volume_percent\\\": \\\"float\\\", \\\"timestamp\\\": \\\"int\\\", \\\"display_timestamp\\\": \\\"str\\\", \\\"display_symbol\\\": \\\"str\\\"}, \\\"ETHUSD\\\": {\\\"ask\\\": \\\"float\\\", \\\"bid\\\": \\\"float\\\", \\\"last\\\": \\\"float\\\", \\\"high\\\": \\\"float\\\", \\\"low\\\": \\\"float\\\", \\\"volume\\\": \\\"float\\\", \\\"open\\\": {\\\"hour\\\": \\\"float\\\", \\\"day\\\": \\\"float\\\", \\\"week\\\": \\\"float\\\", \\\"month\\\": \\\"float\\\", \\\"month_3\\\": \\\"float\\\", \\\"month_6\\\": \\\"float\\\", \\\"year\\\": \\\"float\\\"}, \\\"averages\\\": {\\\"day\\\": \\\"float\\\", \\\"week\\\": \\\"float\\\", \\\"month\"", "metadata": {}}
{"_id": "736", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get exchange markets, api_description:Find markets on a specific exchange.\nThis endpoint requires the **ultra** plan or higher., required_params: [{\"name\": \"uuid\", \"type\": \"string\", \"description\": \"UUID of the exchange you want to request markets for\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "737", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:unsubscribeAddress, api_description:Deletes an existing subscription/IPN for the given address (and contractaddress)., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "738", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Chiliz Balance From Specific Network, api_description:This endpoint will return back the Chiliz balance of an address in a specific network., required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"network\", \"type\": \"string\", \"description\": \"network can take the value : \\n- eth\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "739", "title": "", "text": "category_name:Finance, tool_name:Trading View, api_name:ideas/get-comments, api_description:Get comments relating to an ideal post, required_params: [{\"name\": \"uuid\", \"type\": \"STRING\", \"description\": \"The value of image_url field returned in .../ideas/list endpoint\"}], optional_params: [], return_schema: {\"results\": [{\"id\": \"int\", \"comment\": \"str\", \"comment_ast\": {\"type\": \"str\", \"children\": [\"list of str with length 1\"]}, \"created_at\": \"str\", \"editable_until\": \"str\", \"replies_count\": \"int\", \"likes_count\": \"int\", \"user_vote\": \"int\", \"user\": {\"id\": \"int\", \"avatars\": {\"small\": \"str\", \"mid\": \"str\", \"big\": \"str\", \"orig\": \"NoneType\"}, \"username\": \"str\", \"is_broker\": \"bool\", \"is_pro\": \"bool\", \"is_paid_pro\": \"bool\", \"pro_plan\": \"str\", \"broker_plan\": \"NoneType\", \"is_moderator\": \"bool\", \"is_trial\": \"bool\", \"badges\": [{\"name\": \"str\", \"verbose_name\": \"str\", \"_list_length\": 1}], \"is_online\": \"bool\"}, \"spam_status\": \"NoneType\", \"is_hidden\": \"bool\", \"coins\": \"NoneType\", \"platform\": \"NoneType\", \"platform_link_url\": \"NoneType\", \"platform_link_text\": \"NoneType\", \"_list_length\": 20}]}", "metadata": {}}
{"_id": "740", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Bitcoin Balance, api_description:This endpoint will return back the Bitcoin balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "741", "title": "", "text": "category_name:Finance, tool_name:Trading View, api_name:exchanges/list, api_description:List all available and supported exchanges, required_params: [], optional_params: [], return_schema: {\"name\": \"str\", \"value\": \"str\", \"desc\": \"str\", \"flag\": \"str\", \"group\": \"str\", \"country\": \"str\", \"provider_id\": \"str\"}", "metadata": {}}
{"_id": "742", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:getTokenBalance, api_description:Returns the token balance of a given address., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "743", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Verge Balance, api_description:This endpoint will return back the Verge balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "744", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Ether Balance, api_description:This endpoint will return back the Ether balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "745", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:getExchangeRate, api_description:Returns the current Ethereum price in Euro or US Dollar., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "746", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:sendToken, api_description:Sends ERC20 tokens from an address controlled by the account to a specified receiver address. The token contract address is needed to specify the token. The use of the identifier parameter is recommend and awaits an unique string. Whenever a transaction is beeing sent, the identifier is checked and the transaction gets dropped if there is one with that identifier already., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "747", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Ontology Balance, api_description:This endpoint will return back the Ontology balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "748", "title": "", "text": "category_name:Finance, tool_name:Trading View, api_name:v2/auto-complete, api_description:Get suggestion by term or phrase, required_params: [{\"name\": \"text\", \"type\": \"STRING\", \"description\": \"Any term or phrase that you are familiar with\"}], optional_params: [], return_schema: {\"symbols_remaining\": \"int\", \"symbols\": [{\"symbol\": \"str\", \"description\": \"str\", \"type\": \"str\", \"exchange\": \"str\", \"currency_code\": \"str\", \"provider_id\": \"str\", \"country\": \"str\", \"_list_length\": 50}]}", "metadata": {}}
{"_id": "749", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:newAddress, api_description:Generates a new ethereum addresses you can use to send or receive funds. Do not lose the password! We can't restore access to an address if you lose it., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "750", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:getTransactions, api_description:Returns information like confirmations, token contract address, amount, gas price and more of a given transaction., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "751", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:exportAddress, api_description:Returns all ethereum addresses created with an account., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "752", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:Genres, api_description:Return a mapping of genre names and IDs. Some genres have a tmdb_id, which is the corresponding genre ID on TheMovieDB.org API., required_params: [], optional_params: [], return_schema: {\"id\": \"int\", \"name\": \"str\", \"tmdb_id\": \"int\"}", "metadata": {}}
{"_id": "753", "title": "", "text": "category_name:Movies, tool_name:OTT details, api_name:Basic Info, api_description:Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc., required_params: [{\"name\": \"peopleid\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"peopleid\": \"str\", \"name\": \"str\", \"profession\": [\"list of str with length 3\"], \"knownForTitles\": [\"list of str with length 4\"], \"birthYear\": \"str\", \"deathYear\": \"str\", \"bio\": \"str\", \"born\": \"str\", \"birthName\": \"str\", \"poster\": [\"list of str with length 1\"]}", "metadata": {}}
{"_id": "754", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Download cities, api_description:Downloads a list of Hotel cities, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "755", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Search hotels locations, api_description:Search locations by name, required_params: [{\"name\": \"name\", \"type\": \"STRING\", \"description\": \"Name\"}, {\"name\": \"search_type\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "756", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Download states, api_description:Downloads a list of Satets , required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "757", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Hotel photos, api_description:This API returns a list of photos per hotel, required_params: [{\"name\": \"hotel_ids\", \"type\": \"STRING\", \"description\": \"Comma separated string of PPN hotel ids (Semi Opaque Only)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "758", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Hot Latin Songs Artists, api_description:Provide the Greatest of All Time Hot Latin Songs Artists chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "759", "title": "", "text": "category_name:Food, tool_name:Yummly, api_name:feeds/list, api_description:List feeds by category, required_params: [{\"name\": \"start\", \"type\": \"NUMBER\", \"description\": \"The offset of items to be ignored in response for paging\"}, {\"name\": \"limit\", \"type\": \"NUMBER\", \"description\": \"Number of items returned per response\"}], optional_params: [], return_schema: \"{\\\"feed\\\": [{\\\"seo\\\": {\\\"web\\\": {\\\"noindex\\\": \\\"bool\\\", \\\"canonical-term\\\": \\\"str\\\", \\\"meta-tags\\\": {\\\"title\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\"}, \\\"link-tags\\\": [{\\\"rel\\\": \\\"str\\\", \\\"href\\\": \\\"str\\\", \\\"_list_length\\\": 3}], \\\"image-url\\\": \\\"str\\\"}, \\\"spotlightSearch\\\": {\\\"keywords\\\": [\\\"list of str with length 20\\\"], \\\"noindex\\\": \\\"bool\\\"}, \\\"firebase\\\": {\\\"noindex\\\": \\\"bool\\\"}}, \\\"tracking-id\\\": \\\"str\\\", \\\"locale\\\": \\\"str\\\", \\\"content\\\": {\\\"description\\\": \\\"NoneType\\\", \\\"urbSubmitters\\\": \\\"empty list\\\", \\\"tags\\\": {}, \\\"preparationSteps\\\": \\\"NoneType\\\", \\\"alternateExternalUrls\\\": {\\\"source-amp-view-url\\\": \\\"str\\\"}, \\\"moreContent\\\": {\\\"mobileSectionName\\\": \\\"str\\\", \\\"queryParams\\\": {\\\"start\\\": \\\"int\\\", \\\"authorId\\\": \\\"str\\\", \\\"id\\\": \\\"str\\\", \\\"apiFeedType\\\": \\\"str\\\"}, \\\"feed\\\": \\\"empty list\\\"}, \\\"tagsAds\\\": {}, \\\"details\\\": {\\\"directionsUrl\\\": \\\"str\\\", \\\"totalTime\\\": \\\"NoneType\\\", \\\"displayName\\\": \\\"str\\\", \\\"images\\\": [{\\\"hostedLargeUrl\\\": \\\"str\\\", \\\"resizableImageUrl\\\": \\\"str\\\", \\\"resizableImageHeight\\\": \\\"int\\\", \\\"resizableImageWidth\\\": \\\"int\\\", \\\"_list_length\\\": 1}], \\\"name\\\": \\\"str\\\", \\\"keywords\\\": [\\\"list of str with length 20\\\"], \\\"bra\"", "metadata": {}}
{"_id": "760", "title": "", "text": "category_name:Finance, tool_name:Currency Conversion and Exchange Rates, api_name:Convert, api_description:In addition to providing converstion rates, our API provides a dedicated endpoint to easily do conversion on a specific amount of the currency., required_params: [{\"name\": \"to\", \"type\": \"STRING\", \"description\": \"The three-letter currency code of the currency you would like to convert to.\"}, {\"name\": \"amount\", \"type\": \"STRING\", \"description\": \"The amount to be converted.\"}, {\"name\": \"from\", \"type\": \"STRING\", \"description\": \"The three-letter currency code of the currency you would like to convert from.\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"query\": {\"from\": \"str\", \"to\": \"str\", \"amount\": \"int\"}, \"info\": {\"timestamp\": \"int\", \"rate\": \"float\"}, \"date\": \"str\", \"result\": \"float\"}", "metadata": {}}
{"_id": "761", "title": "", "text": "category_name:Finance, tool_name:Free Currency Converter by Hajana One, api_name:/currency-api.php, api_description:Convert Ant Currency, required_params: [{\"name\": \"amount\", \"type\": \"NUMBER\", \"description\": \"Amount you want to convert\"}, {\"name\": \"from\", \"type\": \"STRING\", \"description\": \"Three Letters of currency\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "762", "title": "", "text": "category_name:Finance, tool_name:Currency Conversion and Exchange Rates, api_name:Historical Exchange Rates, api_description:Retrieve historical exchange rate data. Data is available for most currencies all the way back to the year of 1999., required_params: [{\"name\": \"date\", \"type\": \"string\", \"description\": \"The date to retrieve the historical exchange rates from.\"}], optional_params: [], return_schema: \"{\\\"timestamp\\\": \\\"int\\\", \\\"base\\\": \\\"str\\\", \\\"success\\\": \\\"bool\\\", \\\"rates\\\": {\\\"ANG\\\": \\\"float\\\", \\\"SVC\\\": \\\"float\\\", \\\"CAD\\\": \\\"float\\\", \\\"XCD\\\": \\\"float\\\", \\\"MVR\\\": \\\"float\\\", \\\"HRK\\\": \\\"float\\\", \\\"AUD\\\": \\\"float\\\", \\\"MWK\\\": \\\"float\\\", \\\"XAG\\\": \\\"float\\\", \\\"MAD\\\": \\\"float\\\", \\\"PHP\\\": \\\"float\\\", \\\"NAD\\\": \\\"float\\\", \\\"GNF\\\": \\\"float\\\", \\\"KES\\\": \\\"float\\\", \\\"MZN\\\": \\\"float\\\", \\\"BTN\\\": \\\"float\\\", \\\"MGA\\\": \\\"float\\\", \\\"AZN\\\": \\\"float\\\", \\\"XAU\\\": \\\"float\\\", \\\"RON\\\": \\\"float\\\", \\\"CHF\\\": \\\"float\\\", \\\"EGP\\\": \\\"float\\\", \\\"BSD\\\": \\\"float\\\", \\\"TWD\\\": \\\"float\\\", \\\"GGP\\\": \\\"float\\\", \\\"LVL\\\": \\\"float\\\", \\\"MMK\\\": \\\"float\\\", \\\"WST\\\": \\\"float\\\", \\\"ILS\\\": \\\"float\\\", \\\"BHD\\\": \\\"float\\\", \\\"GBP\\\": \\\"float\\\", \\\"TZS\\\": \\\"float\\\", \\\"SDG\\\": \\\"float\\\", \\\"LAK\\\": \\\"float\\\", \\\"DJF\\\": \\\"float\\\", \\\"BYN\\\": \\\"float\\\", \\\"MRO\\\": \\\"float\\\", \\\"RWF\\\": \\\"float\\\", \\\"PEN\\\": \\\"float\\\", \\\"EUR\\\": \\\"int\\\", \\\"ZMK\\\": \\\"float\\\", \\\"RSD\\\": \\\"float\\\", \\\"INR\\\": \\\"float\\\", \\\"MUR\\\": \\\"float\\\", \\\"BWP\\\": \\\"float\\\", \\\"GEL\\\": \\\"float\\\", \\\"KMF\\\": \\\"float\\\", \\\"UZS\\\": \\\"float\\\", \\\"RUB\\\": \\\"float\\\", \\\"CUC\\\": \\\"float\\\", \\\"BGN\\\": \\\"float\\\", \\\"JOD\\\": \\\"float\\\", \\\"NGN\\\": \\\"float\\\", \\\"BDT\\\": \\\"float\\\", \\\"PKR\\\": \\\"float\\\", \\\"BRL\\\": \\\"float\\\", \\\"KZT\\\": \\\"float\\\", \\\"CVE\\\": \\\"float\\\", \\\"HNL\\\": \\\"f\"", "metadata": {}}
{"_id": "763", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Top Artists - Duo/Group, api_description:Provide the YEAR-END Top Artists - Duo/Group chart information\n\nIf `year` is not supplied, will default to last year., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "764", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Billboard 200 Albums, api_description:Provide the YEAR-END Billboard 200 Albums chart information\n\nIf `year` is not supplied, will default to last year., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "765", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Artists, api_description:Provide the Greatest of All Time Artists chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "766", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Latin Artists, api_description:Provide the Greatest of All Time Latin Artists chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "767", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Hot Latin Songs, api_description:Provide the Greatest of All Time Hot Latin Songs chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "768", "title": "", "text": "category_name:Data, tool_name:Zippopotam.us, api_name:Get info by city, api_description:, required_params: [{\"name\": \"country\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"state\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"city\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"country abbreviation\": \"str\", \"places\": [{\"place name\": \"str\", \"longitude\": \"str\", \"post code\": \"str\", \"latitude\": \"str\", \"_list_length\": 2}], \"country\": \"str\", \"place name\": \"str\", \"state\": \"str\", \"state abbreviation\": \"str\"}", "metadata": {}}
{"_id": "769", "title": "", "text": "category_name:Entertainment, tool_name:Hearthstone, api_name:Cards by Quality, api_description:Returns all the cards of a certain quality. Example values: Legendary, Common., required_params: [{\"name\": \"quality\", \"type\": \"STRING\", \"description\": \"Card quality.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "770", "title": "", "text": "category_name:Data, tool_name:Diablo4 Smartable, api_name:GetGamesByTopic, api_description:Get Diablo 4 gameplays by topic., required_params: [{\"name\": \"topic\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"page\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"title\": \"str\", \"path\": \"str\", \"page\": \"int\", \"value\": [{\"path\": \"str\", \"title\": \"str\", \"excerpt\": \"str\", \"sourceUrl\": \"str\", \"webUrl\": \"str\", \"originalUrl\": \"str\", \"featuredContent\": \"str\", \"length\": \"str\", \"provider\": {\"name\": \"str\", \"domain\": \"str\"}, \"topics\": [\"list of str with length 2\"], \"heat\": \"int\", \"images\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"isCached\": \"bool\", \"_list_length\": 1}], \"content\": \"str\", \"type\": \"str\", \"publishedDateTime\": \"str\", \"_list_length\": 30}], \"nextPage\": \"int\"}", "metadata": {}}
{"_id": "771", "title": "", "text": "category_name:Entertainment, tool_name:Hearthstone, api_name:Cards by Race, api_description:Returns all the cards of a certain race. Example values: Mech, Murloc., required_params: [{\"name\": \"race\", \"type\": \"STRING\", \"description\": \"Card race.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "772", "title": "", "text": "category_name:Finance, tool_name:Investors Exchange (IEX) Trading, api_name:Effective Spread, api_description:Returns an array of effective spread, eligible volume, and price improvement of a stock, by market., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "773", "title": "", "text": "category_name:Entertainment, tool_name:Minecraft-Forge-Optifine, api_name:downloadMinecraftJson, api_description:Redirect to download Minecraft .json file., required_params: [{\"name\": \"minecraftversion\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "774", "title": "", "text": "category_name:Entertainment, tool_name:Minecraft-Forge-Optifine, api_name:downloadMinecraftJar, api_description:Redirect to download Minecraft .jar file., required_params: [{\"name\": \"minecraftversion\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "775", "title": "", "text": "category_name:Entertainment, tool_name:Minecraft-Forge-Optifine, api_name:minecraftResources, api_description:Same to official source. Used to get resources file for MC 1.6., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "776", "title": "", "text": "category_name:Finance, tool_name:BB Finance, api_name:stock/get-statistics, api_description:Get statistics information of stocks, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The id of stickers, use market/auto-complete API to get correct values\"}], optional_params: [], return_schema: {\"result\": [{\"name\": \"str\", \"table\": [{\"name\": \"str\", \"value\": \"str\", \"_list_length\": 15}], \"_list_length\": 1}]}", "metadata": {}}
{"_id": "777", "title": "", "text": "category_name:Finance, tool_name:BB Finance, api_name:market/get-full, api_description:Get all field and information about tickers, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of id field returned in .../market/auto-complete endpoint, separated by comma to query multiple stickers at once.\"}], optional_params: [], return_schema: \"{\\\"result\\\": {\\\"ADSMI:IND\\\": {\\\"securityType\\\": \\\"str\\\", \\\"symbol\\\": \\\"str\\\", \\\"country\\\": \\\"str\\\", \\\"currency\\\": \\\"str\\\", \\\"resourceType\\\": \\\"str\\\", \\\"resourceSubtype\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"ticker\\\": \\\"str\\\", \\\"tickerName\\\": \\\"str\\\", \\\"template\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"watchlist\\\": \\\"bool\\\", \\\"resourceId\\\": \\\"str\\\", \\\"totalReturn1Y\\\": \\\"str\\\", \\\"last\\\": \\\"str\\\", \\\"netChange\\\": \\\"str\\\", \\\"lastPriceTime\\\": \\\"int\\\", \\\"peRatio\\\": \\\"str\\\", \\\"open\\\": \\\"str\\\", \\\"close\\\": \\\"str\\\", \\\"pctChange1M\\\": \\\"str\\\", \\\"yearHigh\\\": \\\"str\\\", \\\"dayHigh\\\": \\\"str\\\", \\\"volume\\\": \\\"int\\\", \\\"yearLow\\\": \\\"str\\\", \\\"dayLow\\\": \\\"str\\\", \\\"marketCap\\\": \\\"float\\\", \\\"pctChangeYTD\\\": \\\"str\\\", \\\"pctChange\\\": \\\"str\\\", \\\"isOpen\\\": \\\"bool\\\", \\\"info\\\": \\\"str\\\"}, \\\"AEX:IND\\\": {\\\"securityType\\\": \\\"str\\\", \\\"symbol\\\": \\\"str\\\", \\\"country\\\": \\\"str\\\", \\\"currency\\\": \\\"str\\\", \\\"resourceType\\\": \\\"str\\\", \\\"resourceSubtype\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"ticker\\\": \\\"str\\\", \\\"tickerName\\\": \\\"str\\\", \\\"template\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"watchlist\\\": \\\"bool\\\", \\\"resourceId\\\": \\\"str\\\", \\\"totalReturn1Y\\\": \\\"str\\\", \\\"last\\\": \\\"str\\\", \\\"netChange\\\": \\\"str\\\", \\\"lastPriceTime\\\": \\\"int\\\", \\\"peRatio\\\": \\\"str\\\", \\\"open\"", "metadata": {}}
{"_id": "778", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Composition, api_description:This API request returns the portfolio composition of a mutual fund, including sectors, holding details, weighted exposure, and others.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Symbol ticker of mutual fund\"}], optional_params: [], return_schema: {\"mutual_fund\": {\"composition\": {\"major_market_sectors\": [{\"sector\": \"str\", \"weight\": \"float\", \"_list_length\": 11}], \"asset_allocation\": {\"cash\": \"float\", \"stocks\": \"float\", \"preferred_stocks\": \"int\", \"convertables\": \"int\", \"bonds\": \"int\", \"others\": \"int\"}, \"top_holdings\": [{\"symbol\": \"str\", \"name\": \"str\", \"weight\": \"float\", \"_list_length\": 10}], \"bond_breakdown\": {\"average_maturity\": {\"fund\": \"NoneType\", \"category\": \"NoneType\"}, \"average_duration\": {\"fund\": \"NoneType\", \"category\": \"float\"}, \"credit_quality\": [{\"grade\": \"str\", \"weight\": \"int\", \"_list_length\": 1}]}}}, \"status\": \"str\"}", "metadata": {}}
{"_id": "779", "title": "", "text": "category_name:eCommerce, tool_name:Asos, api_name:countries/list, api_description:List countries that Asos supports selling products, required_params: [], optional_params: [], return_schema: {\"country\": \"str\", \"store\": \"str\", \"name\": \"str\", \"imageUrl\": \"str\", \"siteUrl\": \"str\", \"siteId\": \"int\", \"majorCountry\": \"NoneType\", \"isDefaultCountry\": \"NoneType\", \"region\": \"NoneType\", \"legalEntity\": \"NoneType\", \"languages\": [{\"language\": \"str\", \"name\": \"str\", \"text\": \"str\", \"languageShort\": \"str\", \"isPrimary\": \"bool\", \"_list_length\": 1}], \"currencies\": [{\"currency\": \"str\", \"symbol\": \"str\", \"text\": \"str\", \"isPrimary\": \"bool\", \"currencyId\": \"int\", \"_list_length\": 3}], \"sizeSchemas\": [{\"sizeSchema\": \"str\", \"text\": \"str\", \"isPrimary\": \"bool\", \"_list_length\": 3}]}", "metadata": {}}
{"_id": "780", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Cities, api_description:Find cities, filtering by optional criteria. If no criteria are set, you will get back all known cities with a population of at least 1000., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "781", "title": "", "text": "category_name:eCommerce, tool_name:Asos, api_name:products/list (Deprecated), api_description:List products, search products with options and filters, required_params: [{\"name\": \"limit\", \"type\": \"STRING\", \"description\": \"The number of items per page\"}, {\"name\": \"store\", \"type\": \"NUMBER\", \"description\": \"Get value from siteId field from countries/list API\"}, {\"name\": \"categoryId\", \"type\": \"STRING\", \"description\": \"Get value from categories/list API\"}, {\"name\": \"offset\", \"type\": \"STRING\", \"description\": \"The offset to skip already viewed products\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "782", "title": "", "text": "category_name:Finance, tool_name:Investors Exchange (IEX) Trading, api_name:Book, api_description:Response includes data from deep and quote. Refer to each endpoint for details., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "783", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-ownership, api_description:Mapped to Ownership tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "784", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v3/get-profile, api_description:Mapped to Company Profile section in Quote  tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "785", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/performance/get-annual-distributions, api_description:Get annual distributions in the Performance tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "786", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/performance/get-latest-distributions, api_description:Get latest distributions in the Performance tab, required_params: [{\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}, {\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "787", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:market/get-articles, api_description:Get latest articles in the market, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "788", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/portfolio/get-exposure, api_description:Get exposure as displayed in the Portfolio tab, required_params: [{\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}, {\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "789", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:MINMAX, api_description:Lowest and highest values over period(MINMAX)., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "790", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:SUB, api_description:Subtraction of values of two specified time series., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "791", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:MIN, api_description:Lowest value over period(MIN)., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "792", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:EMA, api_description:Exponential Moving Average(EMA) places greater importance on recent data points than the normal Moving Average(MA)., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "793", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/parent/get-medalist-rating, api_description:Get medalist rating as displayed in the Parent tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "794", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:DEMA, api_description:Double Exponential Moving Average(DEMA) is used to eliminate lag. It does this by taking two Exponential Moving Averages(EMA)., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "795", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:SMA, api_description:Simple Moving Average(SMA) is an arithmetic moving average calculated by adding the latest closing prices and then dividing them by the number of time periods., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "796", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:CEIL, api_description:Vector CEIL(CEIL) transforms input data with the mathematical ceil function., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "797", "title": "", "text": "category_name:Events, tool_name:Working days, api_name:/1.3/list_non_working_days, api_description:List the non working days (weekend days, public holidays and custom dates) between two dates in chronlogical order., required_params: [{\"name\": \"start_date\", \"type\": \"STRING\", \"description\": \"The start date (YYYY-MM-DD)\"}, {\"name\": \"end_date\", \"type\": \"STRING\", \"description\": \"The end date (YYYY-MM-DD)\"}, {\"name\": \"country_code\", \"type\": \"STRING\", \"description\": \"The ISO country code (2 letters).  See <a href=https://api.workingdays.org/api-countries >available countries & configurations</a>\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "798", "title": "", "text": "category_name:Tools, tool_name:ViewDNS, api_name:Reverse DNS Lookup, api_description:Find the reverse DNS entry (PTR) for a given IP. This is generally the server or host name., required_params: [{\"name\": \"ip\", \"type\": \"STRING\", \"description\": \"the IP address to retrieve the reverse DNS record for\"}, {\"name\": \"output\", \"type\": \"STRING\", \"description\": \"the output format required ('xml' or 'json')\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "799", "title": "", "text": "category_name:Tools, tool_name:ViewDNS, api_name:DNS Record Lookup, api_description:View all configured DNS records (A, MX, CNAME etc.) for a specified domain name., required_params: [{\"name\": \"domain\", \"type\": \"STRING\", \"description\": \"the domain name to lookup DNS records for\"}, {\"name\": \"output\", \"type\": \"STRING\", \"description\": \"the output format required ('xml' or 'json')\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "800", "title": "", "text": "category_name:Data, tool_name:DNS Lookup, api_name:Reverse, api_description:Get name servers from an IP, required_params: [{\"name\": \"ip\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"ip\": \"str\", \"result\": [\"list of str with length 1\"]}", "metadata": {}}
{"_id": "801", "title": "", "text": "category_name:Devices, tool_name:Geolocation Simulation For Mobile Apps, api_name:List All Layers, api_description:, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "802", "title": "", "text": "category_name:Devices, tool_name:Geolocation Simulation For Mobile Apps, api_name:List All Groups, api_description:List All Groups, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "803", "title": "", "text": "category_name:Mapping, tool_name:uk.boundaries.io, api_name:Query for Hexagon by Location and Resolution, api_description:Query for Hexagon by Location and Resolution, required_params: [{\"name\": \"longitude\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"latitude\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"resolution\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"type\": \"str\", \"features\": [{\"type\": \"str\", \"properties\": {\"h3-index\": \"str\", \"resolution\": \"int\"}, \"geometry\": {\"type\": \"str\", \"coordinates\": [\"list of list with length 1\"]}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "804", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Netherlands Songs, api_description:Provide the Netherlands Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "805", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Hot 100 Women Artists, api_description:Provide the Greatest of All Time Hot 100 Women Artists chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "806", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Ireland Songs, api_description:Provide the Ireland Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "807", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Turkey Songs, api_description:Provide the Turkey Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "808", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Pop Songs, api_description:Provide the Greatest of All Time Pop Songs chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "809", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:South Africa Songs, api_description:Provide the South Africa Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "810", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:BILLBOARD GLOBAL 200, api_description:Provide the BILLBOARD GLOBAL 200 chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"max range(1-200)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "811", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Portugal Songs, api_description:Provide the Portugal Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "812", "title": "", "text": "category_name:eCommerce, tool_name:Gearbest, api_name:/get_top_searches, api_description: , required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "813", "title": "", "text": "category_name:Education, tool_name:Learn to read and write Japanese kanji, api_name:Single Kanji Details, api_description:Language attributes and media files for a single kanji, required_params: [{\"name\": \"kanji\", \"type\": \"STRING\", \"description\": \"A single kanji character\"}], optional_params: [], return_schema: \"{\\\"_id\\\": \\\"str\\\", \\\"_rev\\\": \\\"str\\\", \\\"rad_name_ja\\\": \\\"str\\\", \\\"grade\\\": \\\"int\\\", \\\"hint_group\\\": \\\"int\\\", \\\"kunyomi\\\": \\\"str\\\", \\\"meaning\\\": \\\"str\\\", \\\"kstroke\\\": \\\"int\\\", \\\"examples\\\": [{\\\"japanese\\\": \\\"str\\\", \\\"meaning\\\": {\\\"english\\\": \\\"str\\\"}, \\\"audio\\\": {\\\"opus\\\": \\\"str\\\", \\\"aac\\\": \\\"str\\\", \\\"ogg\\\": \\\"str\\\", \\\"mp3\\\": \\\"str\\\"}, \\\"_list_length\\\": 4}], \\\"kunyomi_ja\\\": \\\"str\\\", \\\"ka_utf\\\": \\\"str\\\", \\\"luminous\\\": \\\"str\\\", \\\"rad_name_search\\\": [\\\"list of str with length 1\\\"], \\\"rad_order\\\": \\\"int\\\", \\\"txt_books\\\": [{\\\"chapter\\\": \\\"str\\\", \\\"txt_bk\\\": \\\"str\\\", \\\"_list_length\\\": 6}], \\\"kname\\\": \\\"str\\\", \\\"rad_utf\\\": \\\"str\\\", \\\"stroketimes\\\": [\\\"list of int with length 12\\\"], \\\"kunyomi_ka_display\\\": \\\"str\\\", \\\"dick\\\": \\\"str\\\", \\\"rad_name\\\": \\\"str\\\", \\\"dicn\\\": \\\"str\\\", \\\"mn_hint\\\": \\\"str\\\", \\\"rad_stroke\\\": \\\"int\\\", \\\"onyomi_ja\\\": \\\"str\\\", \\\"rad_meaning\\\": \\\"str\\\", \\\"onyomi\\\": \\\"str\\\", \\\"ka_id\\\": \\\"str\\\", \\\"rad_position\\\": \\\"str\\\", \\\"rad_position_ja\\\": \\\"str\\\", \\\"rad_position_search\\\": [\\\"list of str with length 2\\\"], \\\"onyomi_search\\\": [\\\"list of str with length 2\\\"], \\\"kunyomi_search\\\": [\\\"list of str with length 5\\\"], \\\"meaning_search\\\": [\\\"list of str w\"", "metadata": {}}
{"_id": "814", "title": "", "text": "category_name:Education, tool_name:Learn to read and write Japanese kanji, api_name:All Kanji Details, api_description:Language attributes and media files for all supported kanji (~ 6.5MB), required_params: [], optional_params: [], return_schema: \"{\\\"_id\\\": \\\"str\\\", \\\"_rev\\\": \\\"str\\\", \\\"rad_name_ja\\\": \\\"str\\\", \\\"grade\\\": \\\"int\\\", \\\"hint_group\\\": \\\"int\\\", \\\"kunyomi\\\": \\\"str\\\", \\\"meaning\\\": \\\"str\\\", \\\"kstroke\\\": \\\"int\\\", \\\"examples\\\": [{\\\"japanese\\\": \\\"str\\\", \\\"meaning\\\": {\\\"english\\\": \\\"str\\\"}, \\\"audio\\\": {\\\"opus\\\": \\\"str\\\", \\\"aac\\\": \\\"str\\\", \\\"ogg\\\": \\\"str\\\", \\\"mp3\\\": \\\"str\\\"}, \\\"_list_length\\\": 7}], \\\"kunyomi_ja\\\": \\\"str\\\", \\\"ka_utf\\\": \\\"str\\\", \\\"luminous\\\": \\\"str\\\", \\\"rad_name_search\\\": [\\\"list of str with length 1\\\"], \\\"rad_order\\\": \\\"int\\\", \\\"txt_books\\\": [{\\\"chapter\\\": \\\"str\\\", \\\"txt_bk\\\": \\\"str\\\", \\\"_list_length\\\": 10}], \\\"kname\\\": \\\"str\\\", \\\"rad_utf\\\": \\\"str\\\", \\\"stroketimes\\\": [\\\"list of int with length 8\\\"], \\\"kunyomi_ka_display\\\": \\\"str\\\", \\\"dick\\\": \\\"str\\\", \\\"rad_name\\\": \\\"str\\\", \\\"dicn\\\": \\\"str\\\", \\\"mn_hint\\\": \\\"str\\\", \\\"rad_stroke\\\": \\\"int\\\", \\\"onyomi_ja\\\": \\\"str\\\", \\\"rad_meaning\\\": \\\"str\\\", \\\"onyomi\\\": \\\"str\\\", \\\"ka_id\\\": \\\"str\\\", \\\"onyomi_search\\\": [\\\"list of str with length 2\\\"], \\\"kunyomi_search\\\": [\\\"list of str with length 2\\\"], \\\"meaning_search\\\": [\\\"list of str with length 4\\\"], \\\"onyomi_ja_search\\\": [\\\"list of str with length 2\\\"], \\\"kunyomi_ja_search\\\": [\\\"list of str w\"", "metadata": {}}
{"_id": "815", "title": "", "text": "category_name:Sports, tool_name:Fitness Calculator, api_name:Daily calory requirements, api_description:Knowing your daily calorie requirements is important to achieve your final goal. You can calculate your daily calorie req. for 7 different goals., required_params: [{\"name\": \"activitylevel\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"weight\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"gender\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"height\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"age\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"status_code\": \"int\", \"request_result\": \"str\", \"data\": {\"BMR\": \"int\", \"goals\": {\"maintain weight\": \"int\", \"Mild weight loss\": {\"loss weight\": \"str\", \"calory\": \"int\"}, \"Weight loss\": {\"loss weight\": \"str\", \"calory\": \"int\"}, \"Extreme weight loss\": {\"loss weight\": \"str\", \"calory\": \"int\"}, \"Mild weight gain\": {\"gain weight\": \"str\", \"calory\": \"int\"}, \"Weight gain\": {\"gain weight\": \"str\", \"calory\": \"int\"}, \"Extreme weight gain\": {\"gain weight\": \"str\", \"calory\": \"int\"}}}}", "metadata": {}}
{"_id": "816", "title": "", "text": "category_name:Sports, tool_name:Fitness Calculator, api_name:Burned Calorie From Activity, api_description:Calculate the burned calorie for a specific activity., required_params: [{\"name\": \"weight\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"activityid\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"activitymin\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"status_code\": \"int\", \"request_result\": \"str\", \"data\": {\"burnedCalorie\": \"str\", \"unit\": \"str\"}}", "metadata": {}}
{"_id": "817", "title": "", "text": "category_name:Social, tool_name:Reddit, api_name:Post Details, api_description:Post Details, required_params: [{\"name\": \"post_id\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"{\\\"success\\\": \\\"bool\\\", \\\"data\\\": {\\\"id\\\": \\\"str\\\", \\\"numComments\\\": \\\"int\\\", \\\"created\\\": \\\"int\\\", \\\"score\\\": \\\"int\\\", \\\"distinguishType\\\": \\\"NoneType\\\", \\\"isLocked\\\": \\\"bool\\\", \\\"isStickied\\\": \\\"bool\\\", \\\"thumbnail\\\": {\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"int\\\", \\\"height\\\": \\\"int\\\"}, \\\"title\\\": \\\"str\\\", \\\"author\\\": \\\"str\\\", \\\"authorId\\\": \\\"str\\\", \\\"authorIsBlocked\\\": \\\"bool\\\", \\\"domain\\\": \\\"str\\\", \\\"postId\\\": \\\"str\\\", \\\"upvoteRatio\\\": \\\"float\\\", \\\"numDuplicates\\\": \\\"int\\\", \\\"discussionType\\\": \\\"NoneType\\\", \\\"viewCount\\\": \\\"int\\\", \\\"goldCount\\\": \\\"int\\\", \\\"isArchived\\\": \\\"bool\\\", \\\"contestMode\\\": \\\"bool\\\", \\\"gildings\\\": {\\\"gid1\\\": \\\"int\\\", \\\"gid2\\\": \\\"int\\\", \\\"gid3\\\": \\\"int\\\"}, \\\"allAwardings\\\": [{\\\"awardType\\\": \\\"str\\\", \\\"awardSubType\\\": \\\"str\\\", \\\"coinPrice\\\": \\\"int\\\", \\\"coinReward\\\": \\\"int\\\", \\\"daysOfDripExtension\\\": \\\"NoneType\\\", \\\"daysOfPremium\\\": \\\"NoneType\\\", \\\"description\\\": \\\"str\\\", \\\"giverCoinReward\\\": \\\"NoneType\\\", \\\"iconUrl\\\": \\\"str\\\", \\\"iconWidth\\\": \\\"int\\\", \\\"iconHeight\\\": \\\"int\\\", \\\"staticIconUrl\\\": \\\"str\\\", \\\"staticIconWidth\\\": \\\"int\\\", \\\"staticIconHeight\\\": \\\"int\\\", \\\"id\\\": \\\"str\\\", \\\"isEnabled\\\": \\\"bool\\\", \\\"isNew\\\": \\\"bool\\\", \\\"name\\\": \\\"str\\\", \\\"pennyDonat\"", "metadata": {}}
{"_id": "818", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Tumblr, api_description:Check username on Tumblr, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "819", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Dev.to, api_description:Check username on Dev.to, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "820", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:shopify, api_description:Check username on Shopify, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "821", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Etsy, api_description:Check username on Etsy, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "822", "title": "", "text": "category_name:Social, tool_name:Reddit, api_name:Posts By Subreddit, api_description:Posts By Subreddit, required_params: [{\"name\": \"subreddit\", \"type\": \"STRING\", \"description\": \"example: reddit.com/r/`memes`\"}, {\"name\": \"sort\", \"type\": \"STRING\", \"description\": \"you can just send `new `or `hot`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "823", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Facebook, api_description:Check username on Facebook, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "824", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Soundcloud, api_description:Check username on Soundcloud, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "825", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:.io, api_description:Check if .io domain is registered, required_params: [{\"name\": \"name\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "826", "title": "", "text": "category_name:Data, tool_name:Diffbot, api_name:Product API, api_description:The Product API retrieves full product data from any e-commerce shopping page., required_params: [{\"name\": \"url\", \"type\": \"STRING\", \"description\": \"URL of the page to process.\"}], optional_params: [], return_schema: {\"errorCode\": \"int\", \"error\": \"str\"}", "metadata": {}}
{"_id": "827", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:properties/get-featured-reviews, api_description:Get featured reviews of stayed guests, required_params: [{\"name\": \"hotel_id\", \"type\": \"STRING\", \"description\": \"The value of hotel_id from properties/list API\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "828", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:locations/auto-complete, api_description:List suggested locations by countries, cities, districts, places name, required_params: [{\"name\": \"text\", \"type\": \"STRING\", \"description\": \"Name of cities, districts, places\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "829", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:City Distance, api_description:Gets the distance to the given city., required_params: [{\"name\": \"cityid\", \"type\": \"STRING\", \"description\": \"The city id (either native id or wikiDataId)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "830", "title": "", "text": "category_name:Location, tool_name:Referential, api_name:Continents, api_description:List continents of the world localized to requested language, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "831", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Currencies, api_description:Get currencies, filtering by optional criteria. If no criteria are set, you will get back all known currencies., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "832", "title": "", "text": "category_name:Commerce, tool_name:AliExpress unofficial, api_name:/categories, api_description: , required_params: [], optional_params: [], return_schema: {\"error\": \"str\"}", "metadata": {}}
{"_id": "833", "title": "", "text": "category_name:eCommerce, tool_name:Magic AliExpress, api_name:/api/bestSales/product/{productID}/salesHistory, api_description:This resource returns the historic of sales, required_params: [{\"name\": \"productID\", \"type\": \"NUMBER\", \"description\": \"The Aliexpress product ID\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "834", "title": "", "text": "category_name:eCommerce, tool_name:Magic AliExpress, api_name:/api/store/{storeID}/seller/{sellerID}/products, api_description:This ressource displays the products by Store, required_params: [{\"name\": \"storeID\", \"type\": \"NUMBER\", \"description\": \"The Aliexpress store ID\"}], optional_params: [], return_schema: {\"messages\": \"str\", \"info\": \"str\"}", "metadata": {}}
{"_id": "835", "title": "", "text": "category_name:eCommerce, tool_name:Magic AliExpress, api_name:/api/v2/categories, api_description:This resource represents a category in the system. We have 3 provider type <br> - API\n -WEBSITE\n -HYBRID\n <br> 1.API<br> This category is manager by the API, the ID indicated is the Alibaba ID and not Aliexpress ID.<br> 2. WESITE <br> This category is scraping of Aliexpress website <br> 3. HYBRID <br> This category has correspondence between Aliexpress and API; you have in the same object twice ID `alie_category_id` for Website and `api_category_id` for API<br> In the API to request by example product, in the category ID, you can indicate the both.  , required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "836", "title": "", "text": "category_name:Data, tool_name:Scraper's Proxy, api_name:JavaScript Rendered Page GET, api_description:Render html using a real browser. Useful for if content is loaded asynchronously or generated dynamically in the browser. JavaScript rendering is usually required to scrape websites that use React, Angular or Vue. For websites that do not need javascript rendering use [Standard GET](//rapidapi.com/scapers-proxy-scapers-proxy-default/api/scrapers-proxy2) instead for better performance and reliability., required_params: [{\"name\": \"url\", \"type\": \"STRING\", \"description\": \" Pass in `url` to specify the url that you want to fetch. If you require  query parameters you can include a query string in the url or specify a json serialized object in the `params` parameter\"}], optional_params: [], return_schema: {\"errors\": [{\"value\": \"str\", \"property\": \"str\", \"message\": \"str\", \"_list_length\": 3}]}", "metadata": {}}
{"_id": "837", "title": "", "text": "category_name:Data, tool_name:Scraper's Proxy, api_name:Parser GET, api_description:Automatically parses html into an easily processable json format, required_params: [{\"name\": \"url\", \"type\": \"STRING\", \"description\": \" Pass in `url` to specify the url that you want to fetch. If you require  query parameters you can include a query string in the url or specify a json serialized object in the `params` parameter\"}], optional_params: [], return_schema: {\"alert\": \"str\", \"title\": \"str\", \"favicon\": \"NoneType\", \"meta\": {\"description\": \"str\", \"keywords\": \"str\"}, \"content\": \"str\", \"canonical\": \"NoneType\", \"images\": \"empty list\", \"grouped_images\": {}, \"og_images\": \"empty list\", \"links\": [\"list of str with length 1\"]}", "metadata": {}}
{"_id": "838", "title": "", "text": "category_name:Tools, tool_name:ProxyPage, api_name:Random proxy, api_description:Get random proxy,\n\nchoose type and country, required_params: [{\"name\": \"type\", \"type\": \"STRING\", \"description\": \"HTTP, HTTPS, SOCKS4, SOCKS5, CONNECT:25\"}], optional_params: [], return_schema: {\"ip\": \"str\", \"port\": \"int\", \"latency\": \"int\", \"ssl\": \"bool\", \"is_anonymous\": \"bool\", \"types\": [\"list of str with length 1\"], \"country\": \"str\"}", "metadata": {}}
{"_id": "839", "title": "", "text": "category_name:Data, tool_name:Scraper's Proxy, api_name:Tor GET, api_description:Send request to the [Tor network](//www.torproject.org/). Use [Standard GET](//rapidapi.com/scapers-proxy-scapers-proxy-default/api/scrapers-proxy2) instead for better performance and reliability for normal websites. Only recommended to access websites that are only accessible from the Tor network (e.g. websites with a \".onion\" top level domain), since this enpoint is slower than other endpoints., required_params: [], optional_params: [], return_schema: {\"errors\": [{\"value\": \"str\", \"property\": \"str\", \"message\": \"str\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "840", "title": "", "text": "category_name:Tools, tool_name:Ephemeral Proxies, api_name:Obtain a new residential proxy, api_description:The connection proxy details are `proxy.host` and `proxy.port` from the response fields.\nThe proxy will allow connections from the same source IP as the one making this API call. Make use of the `whitelist_ip` parameter to allow an additional ip.\nCountries can be selected by using the `countries` parameter, otherwise the country is randomly selected. A list of countries is available on *Service Status* endpoint.\nThe proxy is available for 30 mins.\n, required_params: [], optional_params: [], return_schema: {\"success\": \"bool\", \"message\": \"str\"}", "metadata": {}}
{"_id": "841", "title": "", "text": "category_name:Commerce, tool_name:IP2Proxy, api_name:IP2Proxy API, api_description:Proxy Detection API, required_params: [{\"name\": \"IP\", \"type\": \"STRING\", \"description\": \"IP address to query.\"}, {\"name\": \"LICENSE\", \"type\": \"STRING\", \"description\": \"API license key.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "842", "title": "", "text": "category_name:Social, tool_name:Whatsapp Scraper, api_name:Is registered on whatsapp?, api_description:This endpoint returns `true` if the phone is registered on whatsapp., required_params: [{\"name\": \"phone\", \"type\": \"NUMBER\", \"description\": \"The phone number must be written as a number (including countrycode); \\ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "843", "title": "", "text": "category_name:Communication, tool_name:whin, api_name:group invite link, api_description:the endpoint returns an invite link url for a group you own., required_params: [{\"name\": \"gid\", \"type\": \"STRING\", \"description\": \"the group id of which you want to get an invite link url\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "844", "title": "", "text": "category_name:Communication, tool_name:Maytapi WhatsApp, api_name:redeploy, api_description:Redeploys docker instance of your phone. If your phone having any unexpected problems you can use this endpoint to reboot the instance., required_params: [{\"name\": \"phone_id\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"message\": \"str\"}", "metadata": {}}
{"_id": "845", "title": "", "text": "category_name:Tools, tool_name:Bulk Whatsapp Validator, api_name:About info, api_description:This endpoint will return the *About* state of the WA number on the query., required_params: [{\"name\": \"phone\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "846", "title": "", "text": "category_name:Communication, tool_name:whin, api_name:personal listener, api_description:The response is an url that you have to use as a webhook destination at the origin service. The content sent to it will be routed as a message to a whatsapp group owned by the user, or to the user.\nLearn use-cases on these videos: [grafana alerts](https://youtu.be/RvVgg0qwNDk),[Shelly notifications](https://youtu.be/B6MLlBUkyvo), [synology notifications](https://youtu.be/zeAJNuXYqH4)., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "847", "title": "", "text": "category_name:Finance, tool_name:Fidelity Investments, api_name:market/get-movers, api_description:Get market movers which are most actives, top gainers, top losers, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "848", "title": "", "text": "category_name:Finance, tool_name:Fidelity Investments, api_name:news/list-top, api_description:List top news from all supported area, required_params: [], optional_params: [], return_schema: {\"responseStatus\": \"NoneType\", \"headlineResults\": [{\"responseStatus\": {\"statusCode\": \"int\", \"statusMessage\": \"str\"}, \"headline\": [{\"text\": \"str\", \"resId\": \"str\", \"resDate\": \"str\", \"resTime\": \"str\", \"wirename\": \"str\", \"receivedTime\": \"str\", \"receivedDate\": \"str\", \"summary\": \"str\", \"service\": \"str\", \"provider\": \"str\", \"symbols\": \"str\", \"codes\": \"str\", \"impactRating\": \"int\", \"type\": \"int\", \"photo\": {\"thumbnail\": \"str\", \"midImage\": \"str\", \"viewImage\": \"str\", \"caption\": \"str\"}, \"isHot\": \"bool\", \"isRead\": \"bool\", \"isUpdate\": \"bool\", \"searchItem\": \"str\", \"_list_length\": 10}], \"correlId\": \"str\", \"_list_length\": 15}], \"responseId\": \"str\"}", "metadata": {}}
{"_id": "849", "title": "", "text": "category_name:Business, tool_name:360 Business Tool, api_name:GetCasesSince, api_description:Get cases modified since, required_params: [{\"name\": \"timestamp\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "850", "title": "", "text": "category_name:Business, tool_name:360 Business Tool, api_name:GetCompanies, api_description:Get all companies, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "851", "title": "", "text": "category_name:Media, tool_name:Vimeo, api_name:GetRelatedVideos, api_description:, required_params: [{\"name\": \"category\", \"type\": \"STRING\", \"description\": \"The name of the category.\"}, {\"name\": \"format\", \"type\": \"STRING\", \"description\": \"json or xml or php\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "852", "title": "", "text": "category_name:Commerce, tool_name:Direct Wines, api_name:Recommendations, api_description:, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "853", "title": "", "text": "category_name:Commerce, tool_name:Direct Wines, api_name:Cart, api_description:, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "854", "title": "", "text": "category_name:Commerce, tool_name:Direct Wines, api_name:Profile, api_description:Profile, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "855", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/key-stats/get-operating-efficiency, api_description:Get key stats operating efficiency in the Valuation tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "856", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/price/get-fee-level, api_description:Get fee level as displayed in the Price tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "857", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/people/get-proxy-voting-management, api_description:Get proxy voting management as displayed in the People tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "858", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:AVGPRICE, api_description:Average Price(AVGPRICE) uses the formula: (open + high + low + close) / 4., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "859", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/portfolio/get-current-fixed-income-style, api_description:Get current fixed income style as displayed in the Portfolio tab, required_params: [{\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}, {\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "860", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:market/get-movers(Deprecated), api_description:Get top 10 gainers, losers, actives of specific market\n* This endpoint is deprecated, use .../market/v2/get-movers endpoint instead, required_params: [{\"name\": \"PerformanceId\", \"type\": \"STRING\", \"description\": \"Get value of PerformanceId field from /market/auto-complete and /market/get-summary APIs\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "861", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:market/get-videos, api_description:Get latest videos in the market, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "862", "title": "", "text": "category_name:Finance, tool_name:Fidelity Investments, api_name:quotes/get-chart, api_description:Get information to draw chart, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Separated by comma for multiple symbols, support up to 3 symbols at a time\"}, {\"name\": \"startDate\", \"type\": \"STRING\", \"description\": \"Date format must be strictly follow yyyy/MM/dd-HH:mm:ss\"}, {\"name\": \"endDate\", \"type\": \"STRING\", \"description\": \"Date format must be strictly follow yyyy/MM/dd-HH:mm:ss\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "863", "title": "", "text": "category_name:Mapping, tool_name:MapToolkit, api_name:Global Terrain Winter, api_description:Global Terrain Tiles with winter colors., required_params: [{\"name\": \"x\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"z\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"y\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "864", "title": "", "text": "category_name:Mapping, tool_name:Forward & Reverse Geocoding, api_name:ForwardGeocoding, api_description:Turn an address into latitude and longitude (e.g. to display on a map) by schematic input., required_params: [], optional_params: [], return_schema: {\"error\": {\"message\": \"str\", \"code\": \"int\"}}", "metadata": {}}
{"_id": "865", "title": "", "text": "category_name:Mapping, tool_name:Forward & Reverse Geocoding, api_name:GeocodingSearch, api_description:Free-form query forward geocoding., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"error\": {\"message\": \"str\", \"code\": \"int\"}}", "metadata": {}}
{"_id": "866", "title": "", "text": "category_name:Mapping, tool_name:Forward & Reverse Geocoding, api_name:ReverseGeocoding, api_description:Find address or place by latitude and longitude, required_params: [{\"name\": \"lon\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"error\": {\"message\": \"str\", \"code\": \"int\"}}", "metadata": {}}
{"_id": "867", "title": "", "text": "category_name:Food, tool_name:Tasty, api_name:recipes/auto-complete, api_description:Get auto complete suggestions by name or ingredients, required_params: [{\"name\": \"prefix\", \"type\": \"STRING\", \"description\": \"Food name or ingredient\"}], optional_params: [], return_schema: {\"results\": [{\"search_value\": \"str\", \"type\": \"str\", \"display\": \"str\", \"_list_length\": 3}]}", "metadata": {}}
{"_id": "868", "title": "", "text": "category_name:Food, tool_name:Tasty, api_name:tags/list, api_description:List supported tags name for filtering in recipes/list API, required_params: [], optional_params: [], return_schema: {\"count\": \"int\", \"results\": [{\"id\": \"int\", \"name\": \"str\", \"display_name\": \"str\", \"type\": \"str\", \"root_tag_type\": \"str\", \"_list_length\": 456}], \"prev\": \"NoneType\", \"next\": \"NoneType\"}", "metadata": {}}
{"_id": "869", "title": "", "text": "category_name:Food, tool_name:Tasty, api_name:feeds/list, api_description:List latest feeds about new food, recipes,etc..., required_params: [{\"name\": \"vegetarian\", \"type\": \"BOOLEAN\", \"description\": \"List vegetarian food only\"}, {\"name\": \"timezone\", \"type\": \"STRING\", \"description\": \"The timezone of your location in format of +/- hhmm\"}, {\"name\": \"from\", \"type\": \"NUMBER\", \"description\": \"The offset of items to be ignored in response for paging\"}, {\"name\": \"size\", \"type\": \"NUMBER\", \"description\": \"Number of items returned per response\"}], optional_params: [], return_schema: \"{\\\"results\\\": [{\\\"type\\\": \\\"str\\\", \\\"item\\\": {\\\"nutrition_visibility\\\": \\\"str\\\", \\\"country\\\": \\\"str\\\", \\\"instructions\\\": [{\\\"start_time\\\": \\\"int\\\", \\\"appliance\\\": \\\"NoneType\\\", \\\"end_time\\\": \\\"int\\\", \\\"temperature\\\": \\\"NoneType\\\", \\\"id\\\": \\\"int\\\", \\\"position\\\": \\\"int\\\", \\\"display_text\\\": \\\"str\\\", \\\"_list_length\\\": 12}], \\\"keywords\\\": \\\"str\\\", \\\"facebook_posts\\\": \\\"empty list\\\", \\\"language\\\": \\\"str\\\", \\\"seo_path\\\": \\\"NoneType\\\", \\\"user_ratings\\\": {\\\"count_positive\\\": \\\"int\\\", \\\"score\\\": \\\"float\\\", \\\"count_negative\\\": \\\"int\\\"}, \\\"price\\\": {\\\"total\\\": \\\"float\\\", \\\"updated_at\\\": \\\"str\\\", \\\"portion\\\": \\\"float\\\", \\\"consumption_total\\\": \\\"float\\\", \\\"consumption_portion\\\": \\\"float\\\"}, \\\"id\\\": \\\"int\\\", \\\"brand\\\": \\\"NoneType\\\", \\\"slug\\\": \\\"str\\\", \\\"servings_noun_singular\\\": \\\"str\\\", \\\"show_id\\\": \\\"int\\\", \\\"prep_time_minutes\\\": \\\"NoneType\\\", \\\"sections\\\": [{\\\"components\\\": [{\\\"raw_text\\\": \\\"str\\\", \\\"extra_comment\\\": \\\"str\\\", \\\"ingredient\\\": {\\\"updated_at\\\": \\\"int\\\", \\\"name\\\": \\\"str\\\", \\\"created_at\\\": \\\"int\\\", \\\"display_plural\\\": \\\"str\\\", \\\"id\\\": \\\"int\\\", \\\"display_singular\\\": \\\"str\\\"}, \\\"id\\\": \\\"int\\\", \\\"position\\\": \\\"int\\\", \\\"measurements\\\": [{\\\"unit\\\": {\\\"system\\\": \\\"\"", "metadata": {}}
{"_id": "870", "title": "", "text": "category_name:Data, tool_name:Open Brewery DB, api_name:Get a brewery, api_description:Get Brewery by ID, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"ID of Brewery\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "871", "title": "", "text": "category_name:Food, tool_name:Tasty, api_name:recipes/list-similarities, api_description:List similar recipes by specific recipe id, required_params: [{\"name\": \"recipe_id\", \"type\": \"NUMBER\", \"description\": \"The id value of any recipe returned in recipes/list API\"}], optional_params: [], return_schema: \"{\\\"count\\\": \\\"int\\\", \\\"results\\\": [{\\\"keywords\\\": \\\"str\\\", \\\"servings_noun_singular\\\": \\\"str\\\", \\\"updated_at\\\": \\\"int\\\", \\\"seo_title\\\": \\\"NoneType\\\", \\\"user_ratings\\\": {\\\"count_positive\\\": \\\"int\\\", \\\"score\\\": \\\"float\\\", \\\"count_negative\\\": \\\"int\\\"}, \\\"price\\\": {\\\"consumption_total\\\": \\\"int\\\", \\\"consumption_portion\\\": \\\"int\\\", \\\"total\\\": \\\"int\\\", \\\"updated_at\\\": \\\"str\\\", \\\"portion\\\": \\\"int\\\"}, \\\"video_id\\\": \\\"int\\\", \\\"id\\\": \\\"int\\\", \\\"prep_time_minutes\\\": \\\"NoneType\\\", \\\"sections\\\": [{\\\"components\\\": [{\\\"id\\\": \\\"int\\\", \\\"position\\\": \\\"int\\\", \\\"measurements\\\": [{\\\"unit\\\": {\\\"system\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"display_plural\\\": \\\"str\\\", \\\"display_singular\\\": \\\"str\\\", \\\"abbreviation\\\": \\\"str\\\"}, \\\"quantity\\\": \\\"str\\\", \\\"id\\\": \\\"int\\\", \\\"_list_length\\\": 1}], \\\"raw_text\\\": \\\"str\\\", \\\"extra_comment\\\": \\\"str\\\", \\\"ingredient\\\": {\\\"updated_at\\\": \\\"int\\\", \\\"name\\\": \\\"str\\\", \\\"created_at\\\": \\\"int\\\", \\\"display_plural\\\": \\\"str\\\", \\\"id\\\": \\\"int\\\", \\\"display_singular\\\": \\\"str\\\"}, \\\"_list_length\\\": 13}], \\\"name\\\": \\\"NoneType\\\", \\\"position\\\": \\\"int\\\", \\\"_list_length\\\": 2}], \\\"tags\\\": [{\\\"name\\\": \\\"str\\\", \\\"id\\\": \\\"int\\\", \\\"display_name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"root_ta\"", "metadata": {}}
{"_id": "872", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/zones/{type}/{zoneId}, api_description:Metadata for a zone. Example /zones/forecast/MOZ028, required_params: [{\"name\": \"type\", \"type\": \"STRING\", \"description\": \"type: a valid zone type (list forthcoming)\"}, {\"name\": \"zoneId\", \"type\": \"STRING\", \"description\": \"zoneId: a zone id (list forthcoming)\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 4}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "873", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/alerts/active, api_description:A list of active alerts that can be filtered by parameters. Uses same parameters as the /alerts endpoint, but sets \"active\" parameter to 1 and ignores \"start\" and \"end\" parameters. The ATOM format returns items in CAP-ATOM., required_params: [], optional_params: [], return_schema: \"{\\\"@context\\\": [\\\"list of str with length 2\\\"], \\\"type\\\": \\\"str\\\", \\\"features\\\": [{\\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"geometry\\\": {\\\"type\\\": \\\"str\\\", \\\"coordinates\\\": [\\\"list of list with length 1\\\"]}, \\\"properties\\\": {\\\"@id\\\": \\\"str\\\", \\\"@type\\\": \\\"str\\\", \\\"id\\\": \\\"str\\\", \\\"areaDesc\\\": \\\"str\\\", \\\"geocode\\\": {\\\"SAME\\\": [\\\"list of str with length 7\\\"], \\\"UGC\\\": [\\\"list of str with length 7\\\"]}, \\\"affectedZones\\\": [\\\"list of str with length 7\\\"], \\\"references\\\": \\\"empty list\\\", \\\"sent\\\": \\\"str\\\", \\\"effective\\\": \\\"str\\\", \\\"onset\\\": \\\"str\\\", \\\"expires\\\": \\\"str\\\", \\\"ends\\\": \\\"str\\\", \\\"status\\\": \\\"str\\\", \\\"messageType\\\": \\\"str\\\", \\\"category\\\": \\\"str\\\", \\\"severity\\\": \\\"str\\\", \\\"certainty\\\": \\\"str\\\", \\\"urgency\\\": \\\"str\\\", \\\"event\\\": \\\"str\\\", \\\"sender\\\": \\\"str\\\", \\\"senderName\\\": \\\"str\\\", \\\"headline\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\", \\\"instruction\\\": \\\"str\\\", \\\"response\\\": \\\"str\\\", \\\"parameters\\\": {\\\"AWIPSidentifier\\\": [\\\"list of str with length 1\\\"], \\\"WMOidentifier\\\": [\\\"list of str with length 1\\\"], \\\"eventMotionDescription\\\": [\\\"list of str with length 1\\\"], \\\"windThreat\\\": [\\\"list of str with length 1\\\"], \\\"maxWindGust\\\": [\\\"list of str w\"", "metadata": {}}
{"_id": "874", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/gridpoints/{wfo}/{x},{y}, api_description:Raw (commonly referred to as \"gridded\") data provided by the Weather Office. Every forecast request will use this data to build the forecast response. The grid for a given location is determined by the \"property.forecastGridData\" property in the /points/{lat},{lon} endpoint. Example: /gridpoints/EAX/40,48, required_params: [{\"name\": \"wfo\", \"type\": \"STRING\", \"description\": \"wfo: a weather office id (https://en.wikipedia.org/wiki/List_of_National_Weather_Service_Weather_Forecast_Offices)\"}, {\"name\": \"x\", \"type\": \"STRING\", \"description\": \"x: the grid x coordinate\"}, {\"name\": \"y\", \"type\": \"STRING\", \"description\": \"y: the grid y coordinate\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 6}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "875", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/stations/{stationId}/observations, api_description:A list of observations for a station.  NOTE! The API uses MADIS to provide observation data. The observation may be delayed while MADIS completes quality checks of the data. To limit the delay, the API is provided with incremental updates with various levels of checked data, and the API will return the variation of the observation with the most checked data. It is possible that no data is provided on the first variation, or that no data is checked on the first variation. It is up to the consumer to determine if the quality of data is appropriate. If not, the previous observation can be requested, or the next nearest station can be used. The API returns the state of the data for each value in the response, where \"Z\" (or \"null\") is for not checked (and may never be for some values) and \"V\" for checked. Please refer to MADIS for complete documentation on their data quality process.  Example: /stations/KMKC/observations, required_params: [{\"name\": \"stationId\", \"type\": \"STRING\", \"description\": \"stationId: a valid station id (e.g. as provided by the /points/{point}/stations endpoint)\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 4}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "876", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/points/{point}/stations, api_description:Stations nearest to a point in order of distance. Example: /points/39.0693,-94.6716/stations, required_params: [{\"name\": \"point\", \"type\": \"STRING\", \"description\": \"point: EPSG:4326 latitude, EPSG:4326 longitude\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 2}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "877", "title": "", "text": "category_name:Data, tool_name:KVStore, api_name:Get Collection info, api_description:Get information about the Collection, required_params: [{\"name\": \"collection\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "878", "title": "", "text": "category_name:Storage, tool_name:Aniku, api_name:AnikuEndPoint, api_description:Storage, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "879", "title": "", "text": "category_name:Travel, tool_name:Travel API's, api_name:B2B Travel portal development with API integration, api_description:TravelPD offers affordable travel portal development solutions with travel API integration and travel portal software. , required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "880", "title": "", "text": "category_name:Data, tool_name:Personator, api_name:Personator Endpoint, api_description:Access to Personator Web Service, required_params: [{\"name\": \"act\", \"type\": \"STRING\", \"description\": \"Actions (Check, Verify, Append, Move)\"}], optional_params: [], return_schema: \"{\\\"Records\\\": [{\\\"AddressDeliveryInstallation\\\": \\\"str\\\", \\\"AddressExtras\\\": \\\"str\\\", \\\"AddressHouseNumber\\\": \\\"str\\\", \\\"AddressKey\\\": \\\"str\\\", \\\"AddressLine1\\\": \\\"str\\\", \\\"AddressLine2\\\": \\\"str\\\", \\\"AddressLockBox\\\": \\\"str\\\", \\\"AddressPostDirection\\\": \\\"str\\\", \\\"AddressPreDirection\\\": \\\"str\\\", \\\"AddressPrivateMailboxName\\\": \\\"str\\\", \\\"AddressPrivateMailboxRange\\\": \\\"str\\\", \\\"AddressRouteService\\\": \\\"str\\\", \\\"AddressStreetName\\\": \\\"str\\\", \\\"AddressStreetSuffix\\\": \\\"str\\\", \\\"AddressSuiteName\\\": \\\"str\\\", \\\"AddressSuiteNumber\\\": \\\"str\\\", \\\"AddressTypeCode\\\": \\\"str\\\", \\\"CBSACode\\\": \\\"str\\\", \\\"CBSADivisionCode\\\": \\\"str\\\", \\\"CBSADivisionLevel\\\": \\\"str\\\", \\\"CBSADivisionTitle\\\": \\\"str\\\", \\\"CBSALevel\\\": \\\"str\\\", \\\"CBSATitle\\\": \\\"str\\\", \\\"CarrierRoute\\\": \\\"str\\\", \\\"CensusBlock\\\": \\\"str\\\", \\\"CensusKey\\\": \\\"str\\\", \\\"CensusTract\\\": \\\"str\\\", \\\"ChildrenAgeRange\\\": \\\"str\\\", \\\"City\\\": \\\"str\\\", \\\"CityAbbreviation\\\": \\\"str\\\", \\\"CompanyName\\\": \\\"str\\\", \\\"CongressionalDistrict\\\": \\\"str\\\", \\\"CountryCode\\\": \\\"str\\\", \\\"CountryName\\\": \\\"str\\\", \\\"CountyFIPS\\\": \\\"str\\\", \\\"CountyName\\\": \\\"str\\\", \\\"CountySubdivisionCode\\\": \\\"str\\\", \\\"CountySubdivisionName\\\": \\\"str\"", "metadata": {}}
{"_id": "881", "title": "", "text": "category_name:Travel, tool_name:webcams.travel, api_name:/webcams/list/region={region}[,{region}[,...]], api_description:This is a modifier. Returns a list of webcams according to the listed region. Multiple regions must be separated by comma. Required: at least one {region}. Possible values are ISO 3166-1-alpha-2 codes for the country and a region code separated by a dot., required_params: [{\"name\": \"region\", \"type\": \"STRING\", \"description\": \"Comma separated list of ISO 3166-1-alpha-2 codes for the country and a region code separated by a dot.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "882", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Country Regions, api_description:Find regions in a specific country, filtering by optional criteria. Regions can be states, provinces, districts, or otherwise major political divisions., required_params: [{\"name\": \"countryid\", \"type\": \"STRING\", \"description\": \"An ISO-3166 country code or WikiData id\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "883", "title": "", "text": "category_name:Mapping, tool_name:uk.boundaries.io, api_name:Retrieve UK Postal District Outline Boundaries, api_description:example: Query by \"TW12\" district, required_params: [{\"name\": \"postal-district\", \"type\": \"STRING\", \"description\": \"Query by postal district code.\"}], optional_params: [], return_schema: {\"type\": \"str\", \"features\": [{\"type\": \"str\", \"properties\": {\"postal-district\": \"str\"}, \"geometry\": {\"type\": \"str\", \"coordinates\": [\"list of list with length 1\"]}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "884", "title": "", "text": "category_name:Education, tool_name:Uncovered Treasure, api_name:/today, api_description:Get treasure of the day, required_params: [], optional_params: [], return_schema: {\"results\": [{\"date\": \"str\", \"context\": \"str\", \"scriptures\": [\"list of str with length 1\"], \"text\": \"str\", \"topics\": \"empty list\", \"bookOrder\": \"int\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "885", "title": "", "text": "category_name:Entertainment, tool_name:Humor-Jokes-and-Memes, api_name:random-meme, api_description:Get a random meme.\nSee https://humorapi.com/docs/#Random-Meme for more., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "886", "title": "", "text": "category_name:Entertainment, tool_name:World of Jokes, api_name:Get Jokes, api_description:Access our huge collection of jokes and paginate through them based on your desired limit and sorting criteria., required_params: [{\"name\": \"limit\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"page\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "887", "title": "", "text": "category_name:Entertainment, tool_name:World of Jokes, api_name:Get Categories of Jokes, api_description:Get all available categories of our Jokes collection which can be used to filter jokes based on specific category., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "888", "title": "", "text": "category_name:Entertainment, tool_name:World of Jokes, api_name:Get Joke of the Day, api_description:Get the joke of the day from a collection of most rated and most popular jokes., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "889", "title": "", "text": "category_name:Entertainment, tool_name:Humor-Jokes-and-Memes, api_name:random-joke, api_description:Get a random joke.\nSee https://humorapi.com/docs/#Random-Joke for more., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "890", "title": "", "text": "category_name:Finance, tool_name:Investing - Cryptocurrency Markets, api_name:coins/get-brief-chart, api_description:Get brief information chart of specific cryptocurrency, required_params: [{\"name\": \"pair_ID\", \"type\": \"NUMBER\", \"description\": \"Value of pair&#95;id field returned in coins/list, coins/search, coins/list-pairs, etc...\"}], optional_params: [], return_schema: {\"_comment\": \"str\", \"candle_colors\": {\"up\": \"str\", \"dn\": \"str\"}, \"candles\": [{\"start_timestamp\": \"int\", \"open\": \"int\", \"max\": \"int\", \"min\": \"int\", \"close\": \"int\", \"navigation\": \"str\", \"volume\": \"int\", \"vol_open\": \"int\", \"_list_length\": 95}], \"attr\": {\"use_volume\": \"bool\", \"last_value\": \"int\", \"decimals\": \"int\", \"tooltip_percent_value\": \"NoneType\"}}", "metadata": {}}
{"_id": "891", "title": "", "text": "category_name:Entertainment, tool_name:Hearthstone, api_name:Info, api_description:Returns a list of current patch, classes, sets, types, factions, qualities, races and locales., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "892", "title": "", "text": "category_name:Data, tool_name:Diablo4 Smartable, api_name:GetGames, api_description:Get Diablo 4 gameplays., required_params: [{\"name\": \"page\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"title\": \"str\", \"path\": \"str\", \"page\": \"int\", \"value\": [{\"path\": \"str\", \"title\": \"str\", \"excerpt\": \"str\", \"sourceUrl\": \"str\", \"webUrl\": \"str\", \"originalUrl\": \"str\", \"featuredContent\": \"str\", \"length\": \"str\", \"provider\": {\"name\": \"str\", \"domain\": \"str\"}, \"topics\": [\"list of str with length 2\"], \"heat\": \"int\", \"images\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"isCached\": \"bool\", \"_list_length\": 1}], \"content\": \"str\", \"type\": \"str\", \"publishedDateTime\": \"str\", \"_list_length\": 30}], \"nextPage\": \"int\"}", "metadata": {}}
{"_id": "893", "title": "", "text": "category_name:Entertainment, tool_name:Hearthstone, api_name:Cards by Class, api_description:Returns all the cards of a class. Example values: Mage, Paladin., required_params: [{\"name\": \"class\", \"type\": \"STRING\", \"description\": \"Card class.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "894", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get coin OHLC data, api_description:Get OHLC (Open High Low Close) data for the coin throughout time.\nThis endpoint requires the **ultra** plan or higher.\n\n**Beta**\nThe OHLC endpoint is currently in beta. This means we might make some changes that could be considered breaking for your application, and we expect to have downtime every now and then while we are still in beta., required_params: [{\"name\": \"uuid\", \"type\": \"string\", \"description\": \"UUID of the coin you want to request. UUIDs of coins can be found using the Get coins endpoint or by checking the URL on coinranking.com, e.g. https://coinranking.com/coin/Qwsogvtv82FCd+bitcoin-btc is the URL for Bitcoin, and the part before the + (Qwsogvtv82FCd) is the UUID.\"}], optional_params: [], return_schema: {\"status\": \"str\", \"type\": \"str\", \"message\": \"str\"}", "metadata": {}}
{"_id": "895", "title": "", "text": "category_name:Media, tool_name:Giphy, api_name:Get GIFs by ID, api_description:A multiget version of the get GIF by ID endpoint. In this case the IDs are feqkVgjJpYtjy and 7rzbxdu0ZEXLy, required_params: [{\"name\": \"ids\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"data\": \"empty list\", \"meta\": {\"status\": \"int\", \"msg\": \"str\", \"response_id\": \"str\"}}", "metadata": {}}
{"_id": "896", "title": "", "text": "category_name:Media, tool_name:Giphy, api_name:Trending GIFs, api_description:Fetch GIFs currently trending online. The data returned mirrors that used to create The Hot 100 list of GIFs on Giphy. Returns 25 results by default., required_params: [], optional_params: [], return_schema: {\"data\": \"empty list\", \"meta\": {\"status\": \"int\", \"msg\": \"str\", \"response_id\": \"str\"}}", "metadata": {}}
{"_id": "897", "title": "", "text": "category_name:Weather, tool_name:AI Weather by Meteosource, api_name:nearest_place, api_description:Use this endpoint to search for the **nearest named place** (village/town/city) from a given GPS coordinates. You will get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information**.\n\n*Note: If you specify coordinates of a secluded place (e.g. middle of the ocean), the nearest point can be very far from the coordinates.*, required_params: [{\"name\": \"lon\", \"type\": \"STRING\", \"description\": \"Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4\"}, {\"name\": \"lat\", \"type\": \"STRING\", \"description\": \"Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4\"}], optional_params: [], return_schema: {\"name\": \"str\", \"place_id\": \"str\", \"adm_area1\": \"str\", \"adm_area2\": \"str\", \"country\": \"str\", \"lat\": \"str\", \"lon\": \"str\", \"timezone\": \"str\", \"type\": \"str\"}", "metadata": {}}
{"_id": "898", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/products/types/{typeId}, api_description:A list of products by type. Example: /products/types/AFD, required_params: [{\"name\": \"typeId\", \"type\": \"STRING\", \"description\": \"typeId: an id of a valid product type \"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 1}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "899", "title": "", "text": "category_name:Weather, tool_name:AI Weather by Meteosource, api_name:weather_statistics, api_description:Get average weather: **long-term normals** for a given place for the next 30 days. Define your location using GPS coordinates or `place_id` from `Location endpoints`., required_params: [], optional_params: [], return_schema: {\"lat\": \"str\", \"lon\": \"str\", \"elevation\": \"int\", \"units\": \"str\", \"statistics\": {\"data\": [{\"day\": \"str\", \"temperature\": {\"avg\": \"float\", \"avg_min\": \"float\", \"avg_max\": \"float\", \"record_min\": \"float\", \"record_max\": \"float\"}, \"wind\": {\"avg_speed\": \"float\", \"avg_angle\": \"int\", \"avg_dir\": \"str\", \"max_speed\": \"float\", \"max_gust\": \"float\"}, \"precipitation\": {\"avg\": \"float\", \"probability\": \"int\"}, \"_list_length\": 30}]}}", "metadata": {}}
{"_id": "900", "title": "", "text": "category_name:Weather, tool_name:AI Weather by Meteosource, api_name:astro, api_description:Returns global **Sun and Moon information** (sunrise/sunset, moonrise/moonset and moon phase) for the next 30 days. Define your location using GPS coordinates or `place_id` from `Location endpoints`., required_params: [], optional_params: [], return_schema: {\"lat\": \"str\", \"lon\": \"str\", \"elevation\": \"int\", \"timezone\": \"str\", \"astro\": {\"data\": [{\"day\": \"str\", \"sun\": {\"rise\": \"str\", \"set\": \"str\", \"always_up\": \"bool\", \"always_down\": \"bool\"}, \"moon\": {\"phase\": \"str\", \"rise\": \"str\", \"set\": \"str\", \"always_up\": \"bool\", \"always_down\": \"bool\"}, \"_list_length\": 30}]}}", "metadata": {}}
{"_id": "901", "title": "", "text": "category_name:Weather, tool_name:Forecast, api_name:RapidApiGetForecastSummaryByLocationName, api_description:Get Forecast, required_params: [{\"name\": \"locationName\", \"type\": \"STRING\", \"description\": \"Location Name\"}], optional_params: [], return_schema: \"{\\\"location\\\": {\\\"code\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"timezone\\\": \\\"str\\\", \\\"coordinates\\\": {\\\"latitude\\\": \\\"float\\\", \\\"longitude\\\": \\\"float\\\"}}, \\\"forecast\\\": {\\\"items\\\": [{\\\"date\\\": \\\"str\\\", \\\"dateWithTimezone\\\": \\\"str\\\", \\\"freshSnow\\\": \\\"int\\\", \\\"snowHeight\\\": \\\"NoneType\\\", \\\"weather\\\": {\\\"state\\\": \\\"int\\\", \\\"text\\\": \\\"str\\\", \\\"icon\\\": \\\"str\\\"}, \\\"prec\\\": {\\\"sum\\\": \\\"float\\\", \\\"probability\\\": \\\"int\\\", \\\"sumAsRain\\\": \\\"NoneType\\\", \\\"class\\\": \\\"int\\\"}, \\\"sunHours\\\": \\\"int\\\", \\\"rainHours\\\": \\\"NoneType\\\", \\\"temperature\\\": {\\\"min\\\": \\\"int\\\", \\\"max\\\": \\\"int\\\", \\\"avg\\\": \\\"NoneType\\\"}, \\\"wind\\\": {\\\"unit\\\": \\\"str\\\", \\\"direction\\\": \\\"str\\\", \\\"text\\\": \\\"str\\\", \\\"avg\\\": \\\"NoneType\\\", \\\"min\\\": \\\"int\\\", \\\"max\\\": \\\"int\\\", \\\"gusts\\\": {\\\"value\\\": \\\"int\\\", \\\"text\\\": \\\"NoneType\\\"}, \\\"significationWind\\\": \\\"bool\\\"}, \\\"windchill\\\": {\\\"min\\\": \\\"int\\\", \\\"max\\\": \\\"int\\\", \\\"avg\\\": \\\"NoneType\\\"}, \\\"snowLine\\\": {\\\"avg\\\": \\\"NoneType\\\", \\\"min\\\": \\\"NoneType\\\", \\\"max\\\": \\\"NoneType\\\", \\\"unit\\\": \\\"str\\\"}, \\\"astronomy\\\": {\\\"dawn\\\": \\\"str\\\", \\\"sunrise\\\": \\\"str\\\", \\\"suntransit\\\": \\\"str\\\", \\\"sunset\\\": \\\"str\\\", \\\"dusk\\\": \\\"str\\\", \\\"moonrise\\\": \\\"str\\\", \\\"moontransit\\\": \\\"str\\\", \\\"moonset\\\": \\\"str\\\", \\\"moonphase\\\": \\\"int\\\"\"", "metadata": {}}
{"_id": "902", "title": "", "text": "category_name:Weather, tool_name:WeatherAPI.com, api_name:Realtime Weather API, api_description:Current weather or realtime weather API method allows a user to get up to date current weather information in json and xml. The data is returned as a Current Object., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Query parameter based on which data is sent back. It could be following:  Latitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508 city name e.g.: q=Paris US zip e.g.: q=10001 UK postcode e.g: q=SW1 Canada postal code e.g: q=G2J metar:<metar code> e.g: q=metar:EGLL iata:<3 digit airport code> e.g: q=iata:DXB auto:ip IP lookup e.g: q=auto:ip IP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1\"}], optional_params: [], return_schema: {\"location\": {\"name\": \"str\", \"region\": \"str\", \"country\": \"str\", \"lat\": \"float\", \"lon\": \"float\", \"tz_id\": \"str\", \"localtime_epoch\": \"int\", \"localtime\": \"str\"}, \"current\": {\"last_updated_epoch\": \"int\", \"last_updated\": \"str\", \"temp_c\": \"float\", \"temp_f\": \"float\", \"is_day\": \"int\", \"condition\": {\"text\": \"str\", \"icon\": \"str\", \"code\": \"int\"}, \"wind_mph\": \"float\", \"wind_kph\": \"float\", \"wind_degree\": \"int\", \"wind_dir\": \"str\", \"pressure_mb\": \"float\", \"pressure_in\": \"float\", \"precip_mm\": \"float\", \"precip_in\": \"float\", \"humidity\": \"int\", \"cloud\": \"int\", \"feelslike_c\": \"float\", \"feelslike_f\": \"float\", \"vis_km\": \"float\", \"vis_miles\": \"float\", \"uv\": \"float\", \"gust_mph\": \"float\", \"gust_kph\": \"float\"}}", "metadata": {}}
{"_id": "903", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Places, api_description:Find places, filtering by optional criteria. If no criteria are set, you will get back all known places., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "904", "title": "", "text": "category_name:Weather, tool_name:WeatherAPI.com, api_name:Sports API, api_description:Sports API method allows a user to get listing of all upcoming sports events for football, cricket and golf in json., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"football\": [{\"stadium\": \"str\", \"country\": \"str\", \"region\": \"str\", \"tournament\": \"str\", \"start\": \"str\", \"match\": \"str\", \"_list_length\": 10}], \"cricket\": [{\"stadium\": \"str\", \"country\": \"str\", \"region\": \"str\", \"tournament\": \"str\", \"start\": \"str\", \"match\": \"str\", \"_list_length\": 1}], \"golf\": [{\"stadium\": \"str\", \"country\": \"str\", \"region\": \"str\", \"tournament\": \"str\", \"start\": \"str\", \"match\": \"str\", \"_list_length\": 10}]}", "metadata": {}}
{"_id": "905", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Cities Near City, api_description:Get cities near the given city, filtering by optional criteria., required_params: [{\"name\": \"cityid\", \"type\": \"STRING\", \"description\": \"The city id (either native id or wikiDataId)\"}, {\"name\": \"radius\", \"type\": \"NUMBER\", \"description\": \"The location radius within which to find cities\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "906", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Places Near Place, api_description:Get places near the given place, filtering by optional criteria., required_params: [{\"name\": \"placeId\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"radius\", \"type\": \"NUMBER\", \"description\": \"The location radius within which to find places\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "907", "title": "", "text": "category_name:Data, tool_name:Cat Facts, api_name:Facts, api_description:Retrieve and query facts, required_params: [], optional_params: [], return_schema: {\"status\": {\"verified\": \"bool\", \"sentCount\": \"int\"}, \"_id\": \"str\", \"user\": \"str\", \"text\": \"str\", \"__v\": \"int\", \"source\": \"str\", \"updatedAt\": \"str\", \"type\": \"str\", \"createdAt\": \"str\", \"deleted\": \"bool\", \"used\": \"bool\"}", "metadata": {}}
{"_id": "908", "title": "", "text": "category_name:Reward, tool_name:Kitten Placeholder, api_name:Kitten, api_description:Fetches random kitten image!, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "909", "title": "", "text": "category_name:Reward, tool_name:Kitten Placeholder, api_name:Cat, api_description:Fetches a random cat picture., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "910", "title": "", "text": "category_name:Data, tool_name:Website Contacts Scraper, api_name:Scrape Contacts from Website, api_description:Extract emails, phone numbers and social profiles from website root domain domain., required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"Domain from which to scrape emails and contacts (e.g. wsgr.com). Accepts any valid url and uses its root domain as a starting point for the extraction.\"}], optional_params: [], return_schema: {\"status\": \"str\", \"request_id\": \"str\", \"data\": [{\"domain\": \"str\", \"query\": \"str\", \"emails\": [{\"value\": \"str\", \"sources\": [\"list of str with length 5\"], \"_list_length\": 78}], \"phone_numbers\": [{\"value\": \"str\", \"sources\": [\"list of str with length 1\"], \"_list_length\": 58}], \"facebook\": \"str\", \"instagram\": \"str\", \"tiktok\": \"str\", \"snapchat\": \"NoneType\", \"twitter\": \"str\", \"linkedin\": \"NoneType\", \"github\": \"NoneType\", \"youtube\": \"str\", \"pinterest\": \"NoneType\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "911", "title": "", "text": "category_name:Sports, tool_name:Football Prediction, api_name:List available markets, api_description:List all available markets and the ones that are enabled for your subscription plan, required_params: [], optional_params: [], return_schema: {\"data\": {\"allowed_for_your_subscription\": [\"list of str with length 1\"], \"all\": [\"list of str with length 8\"]}}", "metadata": {}}
{"_id": "912", "title": "", "text": "category_name:Sports, tool_name:Football Prediction, api_name:Home Team League Stats, api_description:Shows the league table and stats for the home team of an upcoming match., required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"(use predictions endpoint to get list of IDs)\"}], optional_params: [], return_schema: {\"data\": \"empty list\", \"errors\": {\"id\": \"str\"}}", "metadata": {}}
{"_id": "913", "title": "", "text": "category_name:Sports, tool_name:Football Prediction, api_name:Home Team Last 10 Matches, api_description:Grab the statistics and list of the last 10 matches played by the home team for a certain ID, required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"(use predictions endpoint to get list of IDs)\"}], optional_params: [], return_schema: {\"data\": \"empty list\", \"errors\": {\"id\": \"str\"}}", "metadata": {}}
{"_id": "914", "title": "", "text": "category_name:Location, tool_name:Referential, api_name:State by id, api_description:Lookup sub-regions/states/provinces/departments by iso 3166-2 code, required_params: [{\"name\": \"code\", \"type\": \"string\", \"description\": \"ISO 3166-2 state/province/deparm\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "915", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Taiwan Songs, api_description:Provide the Taiwan Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "916", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:User profile, api_description:Get user profile, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"User ID\"}], optional_params: [], return_schema: {\"uri\": \"str\", \"name\": \"str\", \"image_url\": \"str\", \"followers_count\": \"int\", \"following_count\": \"int\", \"public_playlists\": [{\"uri\": \"str\", \"name\": \"str\", \"image_url\": \"str\", \"followers_count\": \"int\", \"_list_length\": 10}], \"total_public_playlists_count\": \"int\", \"is_verified\": \"bool\", \"report_abuse_disabled\": \"bool\", \"has_spotify_name\": \"bool\", \"has_spotify_image\": \"bool\", \"color\": \"int\", \"allow_follows\": \"bool\", \"show_follows\": \"bool\"}", "metadata": {}}
{"_id": "917", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Get artists, api_description:Get one or more artists, required_params: [{\"name\": \"ids\", \"type\": \"STRING\", \"description\": \"Artist IDs (you can use commas)\"}], optional_params: [], return_schema: {\"artists\": [{\"external_urls\": {\"spotify\": \"str\"}, \"followers\": {\"href\": \"NoneType\", \"total\": \"int\"}, \"genres\": [\"list of str with length 3\"], \"id\": \"str\", \"images\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 3}], \"name\": \"str\", \"popularity\": \"int\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "918", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Top Country Albums, api_description:Provide the Greatest of All Time Top Country Albums chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "919", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Get radio playlist, api_description:Get artist or song radio, required_params: [{\"name\": \"uri\", \"type\": \"STRING\", \"description\": \"Artist or song URI\"}], optional_params: [], return_schema: {\"total\": \"int\", \"mediaItems\": [{\"uri\": \"str\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "920", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Track lyrics, api_description:Get track lyrics, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Track ID\"}], optional_params: [], return_schema: {\"lyrics\": {\"syncType\": \"str\", \"lines\": [{\"startTimeMs\": \"str\", \"words\": \"str\", \"syllables\": \"empty list\", \"endTimeMs\": \"str\", \"_list_length\": 44}], \"provider\": \"str\", \"providerLyricsId\": \"str\", \"providerDisplayName\": \"str\", \"syncLyricsUri\": \"str\", \"isDenseTypeface\": \"bool\", \"alternatives\": \"empty list\", \"language\": \"str\", \"isRtlLanguage\": \"bool\", \"fullscreenAction\": \"str\"}}", "metadata": {}}
{"_id": "921", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Top Artists, api_description:Provide the YEAR-END Top Artists chart information\n\nIf `year` is not supplied, will default to last year., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "922", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Genre View, api_description:Genre View, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Genre ID\"}], optional_params: [], return_schema: {\"content\": {\"items\": [{\"content\": {\"items\": \"empty list\", \"limit\": \"int\", \"next\": \"NoneType\", \"offset\": \"int\", \"previous\": \"NoneType\", \"total\": \"int\"}, \"custom_fields\": \"empty list\", \"external_urls\": \"NoneType\", \"id\": \"str\", \"images\": [{\"height\": \"int\", \"name\": \"str\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 3}], \"name\": \"str\", \"rendering\": \"str\", \"tag_line\": \"NoneType\", \"type\": \"str\", \"_list_length\": 14}], \"limit\": \"int\", \"next\": \"NoneType\", \"offset\": \"int\", \"previous\": \"NoneType\", \"total\": \"int\"}, \"custom_fields\": \"empty list\", \"external_urls\": \"NoneType\", \"id\": \"str\", \"images\": \"empty list\", \"name\": \"NoneType\", \"rendering\": \"str\", \"tag_line\": \"NoneType\", \"type\": \"str\"}", "metadata": {}}
{"_id": "923", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Get tracks, api_description:Get one or more tracks, required_params: [{\"name\": \"ids\", \"type\": \"STRING\", \"description\": \"Track IDs (you can use commas)\"}], optional_params: [], return_schema: {\"tracks\": [{\"album\": {\"album_type\": \"str\", \"artists\": [{\"external_urls\": {\"spotify\": \"str\"}, \"id\": \"str\", \"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 3}], \"external_urls\": {\"spotify\": \"str\"}, \"id\": \"str\", \"images\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 3}], \"is_playable\": \"bool\", \"name\": \"str\", \"release_date\": \"str\", \"release_date_precision\": \"str\", \"total_tracks\": \"int\", \"type\": \"str\", \"uri\": \"str\"}, \"artists\": [{\"external_urls\": {\"spotify\": \"str\"}, \"id\": \"str\", \"name\": \"str\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 3}], \"disc_number\": \"int\", \"duration_ms\": \"int\", \"explicit\": \"bool\", \"external_ids\": {\"isrc\": \"str\"}, \"external_urls\": {\"spotify\": \"str\"}, \"id\": \"str\", \"is_local\": \"bool\", \"is_playable\": \"bool\", \"name\": \"str\", \"popularity\": \"int\", \"preview_url\": \"str\", \"track_number\": \"int\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "924", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Artist related, api_description:Artist related, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Artist ID\"}], optional_params: [], return_schema: {\"artists\": [{\"external_urls\": {\"spotify\": \"str\"}, \"followers\": {\"href\": \"NoneType\", \"total\": \"int\"}, \"genres\": [\"list of str with length 1\"], \"id\": \"str\", \"images\": [{\"height\": \"int\", \"url\": \"str\", \"width\": \"int\", \"_list_length\": 3}], \"name\": \"str\", \"popularity\": \"int\", \"type\": \"str\", \"uri\": \"str\", \"_list_length\": 20}]}", "metadata": {}}
{"_id": "925", "title": "", "text": "category_name:Location, tool_name:Stadia Maps Time Zone API, api_name:TZ Lookup by Location, api_description:The Stadia TZ Lookup API provides time zone information, as well as information about any special offset (such as DST) in effect based on the latest IANA TZDB. Note that this API may not be accurate for timestamps in the past and does not claim to report precise nautical times in the open ocean beyond territorial waters., required_params: [{\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"The latitude component of any point on land.\"}, {\"name\": \"lng\", \"type\": \"NUMBER\", \"description\": \"The longitude component of any point on land.\"}], optional_params: [], return_schema: {\"tz_id\": \"str\", \"base_utc_offset\": \"int\", \"dst_offset\": \"int\"}", "metadata": {}}
{"_id": "926", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Search (return flights), api_description:Gets all the return flights for a given contract/return bundle from FlightDepartures through the getFlightReturns endpoint, required_params: [{\"name\": \"sid\", \"type\": \"STRING\", \"description\": \"Session ID. Random string ex.: j10k11l12m13n14\"}, {\"name\": \"ppn_bundle\", \"type\": \"STRING\", \"description\": \"ppn_bundle is a unique ID that ppn uses to identify a specific rate. This is the return bundle that is provided by FlightDepartures only.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "927", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Search flights, api_description:Search flights. Set type: `ONE_WAY` or `ROUND_TRIP`. Set location_departure and location_arrival, use `/flights/locations` api point. You can filter out tickets by price, max duration and number of stops, required_params: [{\"name\": \"location_arrival\", \"type\": \"STRING\", \"description\": \"Arrival location  code\"}, {\"name\": \"sort_order\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date_departure\", \"type\": \"STRING\", \"description\": \"Departure date\"}, {\"name\": \"itinerary_type\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"class_type\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"location_departure\", \"type\": \"STRING\", \"description\": \"Departure location code. Use `Search locations` api point\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "928", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Search flights locations, api_description:Search airports and locations by name, required_params: [{\"name\": \"name\", \"type\": \"STRING\", \"description\": \"Name\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "929", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Download property types, api_description:Downloads Property Types list , required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "930", "title": "", "text": "category_name:Sports, tool_name:Horse Racing, api_name:Trainers win rate, api_description:Get Trainers stats in the last days.\nRuns, Wins and Win Rate in %., required_params: [], optional_params: [], return_schema: {\"info\": \"str\", \"win_rate\": [{\"wins\": \"str\", \"runs\": \"str\", \"win-rate\": \"str\", \"trainer\": \"str\", \"_list_length\": 151}]}", "metadata": {}}
{"_id": "931", "title": "", "text": "category_name:Sports, tool_name:Horse Racing, api_name:Results, api_description:Get results by date., required_params: [], optional_params: [], return_schema: {\"id_race\": \"str\", \"course\": \"str\", \"date\": \"str\", \"title\": \"str\", \"distance\": \"str\", \"age\": \"str\", \"going\": \"str\", \"finished\": \"str\", \"canceled\": \"str\", \"finish_time\": \"str\", \"prize\": \"str\", \"class\": \"str\"}", "metadata": {}}
{"_id": "932", "title": "", "text": "category_name:Sports, tool_name:Horse Racing, api_name:Horse Stats, api_description:Get horse results history., required_params: [{\"name\": \"id_horse\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"horse\": \"str\", \"id_horse\": \"str\", \"results\": [{\"date\": \"str\", \"position\": \"str\", \"course\": \"str\", \"distance\": \"str\", \"class\": \"str\", \"weight\": \"str\", \"starting_price\": \"str\", \"jockey\": \"str\", \"trainer\": \"str\", \"OR\": \"str\", \"race\": \"str\", \"prize\": \"str\", \"_list_length\": 31}]}", "metadata": {}}
{"_id": "933", "title": "", "text": "category_name:Mapping, tool_name:Places, api_name:Place properties, api_description:Returns detailed information about the object. Objects can contain different amount of information., required_params: [{\"name\": \"xid\", \"type\": \"STRING\", \"description\": \"Unique identifier of the object in OpenTripMap\"}, {\"name\": \"lang\", \"type\": \"ENUM\", \"description\": \"Two-letter language code (ISO639-1). The following values are available: en (english), ru (russian)\"}], optional_params: [], return_schema: {\"error\": \"str\"}", "metadata": {}}
{"_id": "934", "title": "", "text": "category_name:Mapping, tool_name:Places, api_name:Geographic coordinates by placename, api_description:Returns geographic coordinates for the given placename (city, village, etc.). The method returns the place whose name is most similar to the search string., required_params: [{\"name\": \"name\", \"type\": \"STRING\", \"description\": \"Placename\"}, {\"name\": \"lang\", \"type\": \"ENUM\", \"description\": \"Two-letter language code (ISO639-1). The following values are available: en (english), ru (russian)\"}], optional_params: [], return_schema: {\"error\": \"str\"}", "metadata": {}}
{"_id": "935", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get market, api_description:Find information on a specific market listed on Coinranking.\nThis endpoint requires the **ultra** plan or higher., required_params: [{\"name\": \"uuid\", \"type\": \"string\", \"description\": \"Uuid of the market you want to request\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "936", "title": "", "text": "category_name:Finance, tool_name:Coinranking, api_name:Get coin exchanges, api_description:Find exchanges where a specific coin can be traded.\nThis endpoint requires the **ultra** plan or higher., required_params: [{\"name\": \"uuid\", \"type\": \"string\", \"description\": \"UUID of the coin you want to request exchanges for\"}], optional_params: [], return_schema: {\"status\": \"str\", \"data\": {\"stats\": {\"24hVolume\": \"str\", \"total\": \"int\"}, \"exchanges\": [{\"uuid\": \"str\", \"name\": \"str\", \"iconUrl\": \"str\", \"verified\": \"bool\", \"recommended\": \"bool\", \"numberOfMarkets\": \"int\", \"coinrankingUrl\": \"str\", \"btcPrice\": \"str\", \"rank\": \"int\", \"24hVolume\": \"str\", \"price\": \"str\", \"_list_length\": 50}]}}", "metadata": {}}
{"_id": "937", "title": "", "text": "category_name:Medical, tool_name:23andMe, api_name:risks, api_description:Our analysis for each profile's lifetime risk of these diseases (starred reports). population_risk is the average risk for the population for which the analysis applies, and risk is the profile's risk., required_params: [{\"name\": \"profile_id\", \"type\": \"STRING\", \"description\": \"profile_id\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "938", "title": "", "text": "category_name:Medical, tool_name:23andMe, api_name:ancestry, api_description:Ancestral breakdown for the user's profile. Each population has an absolute proportion of the genome. A population with sub_populations has an unassigned proportion — the ancestry we couldn't classify in it.   threshold is optional, default 0.75 and range (0.5, 1.0) exclusive. 0.51 means a speculative estimate, 0.75 standard, and 0.90 conservative. A higher threshold would increase the unassigned proportions, a lower would speculate., required_params: [{\"name\": \"threshold\", \"type\": \"STRING\", \"description\": \"threshold ex:  0.9\"}, {\"name\": \"profile_id\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "939", "title": "", "text": "category_name:Food, tool_name:Recipe Search and Diet, api_name:Recipe Search and Recommendations, api_description:Search 2 million recipes using keywords, 28 nutrients and 40 diet and health filters, required_params: [], optional_params: [], return_schema: \"{\\\"q\\\": \\\"str\\\", \\\"from\\\": \\\"int\\\", \\\"to\\\": \\\"int\\\", \\\"more\\\": \\\"bool\\\", \\\"count\\\": \\\"int\\\", \\\"hits\\\": [{\\\"recipe\\\": {\\\"uri\\\": \\\"str\\\", \\\"label\\\": \\\"str\\\", \\\"image\\\": \\\"str\\\", \\\"source\\\": \\\"str\\\", \\\"url\\\": \\\"str\\\", \\\"shareAs\\\": \\\"str\\\", \\\"yield\\\": \\\"float\\\", \\\"dietLabels\\\": [\\\"list of str with length 1\\\"], \\\"healthLabels\\\": [\\\"list of str with length 3\\\"], \\\"cautions\\\": [\\\"list of str with length 1\\\"], \\\"ingredientLines\\\": [\\\"list of str with length 10\\\"], \\\"ingredients\\\": [{\\\"text\\\": \\\"str\\\", \\\"weight\\\": \\\"float\\\", \\\"foodCategory\\\": \\\"str\\\", \\\"foodId\\\": \\\"str\\\", \\\"image\\\": \\\"str\\\", \\\"_list_length\\\": 11}], \\\"calories\\\": \\\"float\\\", \\\"totalWeight\\\": \\\"float\\\", \\\"totalTime\\\": \\\"float\\\", \\\"cuisineType\\\": [\\\"list of str with length 1\\\"], \\\"mealType\\\": [\\\"list of str with length 1\\\"], \\\"dishType\\\": [\\\"list of str with length 1\\\"], \\\"totalNutrients\\\": {\\\"ENERC_KCAL\\\": {\\\"label\\\": \\\"str\\\", \\\"quantity\\\": \\\"float\\\", \\\"unit\\\": \\\"str\\\"}, \\\"FAT\\\": {\\\"label\\\": \\\"str\\\", \\\"quantity\\\": \\\"float\\\", \\\"unit\\\": \\\"str\\\"}, \\\"FASAT\\\": {\\\"label\\\": \\\"str\\\", \\\"quantity\\\": \\\"float\\\", \\\"unit\\\": \\\"str\\\"}, \\\"FATRN\\\": {\\\"label\\\": \\\"str\\\", \\\"quantity\\\": \\\"float\\\", \\\"unit\\\": \\\"str\\\"}, \\\"FAMS\"", "metadata": {}}
{"_id": "940", "title": "", "text": "category_name:Commerce, tool_name:27coupons, api_name:Latest Coupons, api_description:, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "941", "title": "", "text": "category_name:Commerce, tool_name:27coupons, api_name:Trending Coupons, api_description:, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "942", "title": "", "text": "category_name:Communication, tool_name:Veriphone, api_name:example, api_description:Get an example phone number for any country, required_params: [], optional_params: [], return_schema: {\"status\": \"str\", \"phone_type\": \"str\", \"country_code\": \"str\", \"country_prefix\": \"str\", \"international_number\": \"str\", \"local_number\": \"str\", \"e164\": \"str\"}", "metadata": {}}
{"_id": "943", "title": "", "text": "category_name:Tools, tool_name:ViewDNS, api_name:Whois, api_description:Displays owner/contact information for a domain name. Can also be used to determine if a domain name is registered or not.  This tool is not available to free API key users. Access is restricted to paid API keys only., required_params: [{\"name\": \"domain\", \"type\": \"STRING\", \"description\": \"the domain to perform a whois lookup on\"}, {\"name\": \"output\", \"type\": \"STRING\", \"description\": \"the output format required ('xml' or 'json')\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "944", "title": "", "text": "category_name:Weather, tool_name:climate data, api_name:List of cities in one Country, api_description:List of cities in one Country, required_params: [{\"name\": \"COUNTRY\", \"type\": \"STRING\", \"description\": \"Country Code\"}], optional_params: [], return_schema: {\"link\": \"str\", \"modified\": \"str\", \"description\": \"str\", \"generator\": \"str\", \"location\": {\"country\": \"str\", \"countryname\": \"str\", \"NumberOfCity\": \"str\"}, \"Cities\": [{\"wmo\": \"str\", \"name\": \"str\", \"latitude\": \"str\", \"longitude\": \"str\", \"countryCode\": \"str\", \"_list_length\": 700}]}", "metadata": {}}
{"_id": "945", "title": "", "text": "category_name:Finance, tool_name:Coinbase, api_name:Get account balance, api_description:Get the user's account balance in BTC., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "946", "title": "", "text": "category_name:Transportation, tool_name:Car API, api_name:VIN Decoder, api_description:Decodes Vehicle Identification Numbers. The result will include a list of specifications in the specs property and a list of all possible trims matching the VIN in the trims property., required_params: [{\"name\": \"vin\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: \"{\\\"year\\\": \\\"int\\\", \\\"make\\\": \\\"str\\\", \\\"model\\\": \\\"str\\\", \\\"trim\\\": \\\"str\\\", \\\"specs\\\": {\\\"suggested_vin\\\": \\\"str\\\", \\\"possible_values\\\": \\\"str\\\", \\\"vehicle_descriptor\\\": \\\"str\\\", \\\"destination_market\\\": \\\"NoneType\\\", \\\"manufacturer_name\\\": \\\"str\\\", \\\"plant_city\\\": \\\"str\\\", \\\"series\\\": \\\"NoneType\\\", \\\"vehicle_type\\\": \\\"str\\\", \\\"plant_country\\\": \\\"str\\\", \\\"plant_company_name\\\": \\\"NoneType\\\", \\\"plant_state\\\": \\\"NoneType\\\", \\\"trim2\\\": \\\"NoneType\\\", \\\"series2\\\": \\\"str\\\", \\\"note\\\": \\\"NoneType\\\", \\\"base_price\\\": \\\"NoneType\\\", \\\"non_land_use\\\": \\\"NoneType\\\", \\\"body_class\\\": \\\"str\\\", \\\"doors\\\": \\\"NoneType\\\", \\\"windows\\\": \\\"NoneType\\\", \\\"wheel_base_type\\\": \\\"NoneType\\\", \\\"track_width_inches\\\": \\\"NoneType\\\", \\\"gross_vehicle_weight_rating_from\\\": \\\"str\\\", \\\"bed_length_inches\\\": \\\"NoneType\\\", \\\"curb_weight_pounds\\\": \\\"NoneType\\\", \\\"wheel_base_inches_from\\\": \\\"NoneType\\\", \\\"wheel_base_inches_to\\\": \\\"NoneType\\\", \\\"gross_combination_weight_rating_from\\\": \\\"NoneType\\\", \\\"gross_combination_weight_rating_to\\\": \\\"NoneType\\\", \\\"gross_vehicle_weight_rating_to\\\": \\\"NoneType\\\", \\\"bed_type\\\": \\\"NoneType\\\", \\\"cab_type\\\": \\\"NoneType\\\", \\\"trailer_type\"", "metadata": {}}
{"_id": "947", "title": "", "text": "category_name:Data, tool_name:Car Data, api_name:Cars, api_description:Retrieve and filter lists of cars, required_params: [{\"name\": \"page\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"limit\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"id\": \"int\", \"year\": \"int\", \"make\": \"str\", \"model\": \"str\", \"type\": \"str\"}", "metadata": {}}
{"_id": "948", "title": "", "text": "category_name:Travel, tool_name:Hotels, api_name:locations/search (Deprecated), api_description:Search for related locations and suggestions, required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"Name of countries, cities, districts, places, etc...\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "949", "title": "", "text": "category_name:Travel, tool_name:Hotels, api_name:properties/v2/resolve-url, api_description:Hotels system is being merged with Expedia. This endpoint helps to convert the old hotel ID (embedded in the shared link, Ex : \"ho133528\" in hotels.com/ho133528/) to the new one (423818)., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The id (started with ho...) extracted from the shared link. Ex : 'ho546370' from https://www.hoteles.com/ho546370\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "950", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:Titles with Changed Episodes, api_description:Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range., required_params: [], optional_params: [], return_schema: {\"success\": \"bool\", \"statusCode\": \"int\", \"statusMessage\": \"str\"}", "metadata": {}}
{"_id": "951", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:Titles with Changed Sources, api_description:Get a listing of titles that have changed to their streaming sources within the date range., required_params: [], optional_params: [], return_schema: {\"success\": \"bool\", \"statusCode\": \"int\", \"statusMessage\": \"str\"}", "metadata": {}}
{"_id": "952", "title": "", "text": "category_name:Communication, tool_name:Maytapi WhatsApp, api_name:getGroups, api_description:Sets the option for getting the acknowledge messages from the webhook to true or false., required_params: [{\"name\": \"phone_id\", \"type\": \"string\", \"description\": \"Enter phone id\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"message\": \"str\"}", "metadata": {}}
{"_id": "953", "title": "", "text": "category_name:SMS, tool_name:sms77io, api_name:Outbound, api_description:Retrieves outbound messages history., required_params: [{\"name\": \"p\", \"type\": \"STRING\", \"description\": \"API key from [Sms77.io](https://www.sms77.io)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "954", "title": "", "text": "category_name:SMS, tool_name:SMSAPI.com, api_name:/subusers/{id}/shares/sendernames, api_description: , required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\", \"error\": \"str\", \"errors\": \"NoneType\", \"developer_description\": \"NoneType\"}", "metadata": {}}
{"_id": "955", "title": "", "text": "category_name:Communication, tool_name:LINE Messaging, api_name:Get rich menu ID of user, api_description:Gets the ID of the rich menu linked to a user., required_params: [{\"name\": \"userId\", \"type\": \"STRING\", \"description\": \"User ID. Found in the source object of webhook event objects. Do not use the LINE ID used in LINE.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "956", "title": "", "text": "category_name:SMS, tool_name:sms77io, api_name:Replies, api_description:Retrieves message replies history., required_params: [{\"name\": \"p\", \"type\": \"STRING\", \"description\": \"API key from [Sms77.io](https://www.sms77.io)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "957", "title": "", "text": "category_name:SMS, tool_name:sms77io, api_name:Get Analytics, api_description:Get detailed statistics of your account directly through our API., required_params: [{\"name\": \"p\", \"type\": \"STRING\", \"description\": \"API Key\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "958", "title": "", "text": "category_name:Travel, tool_name:Flightera Flight Data, api_name:airportSearch, api_description:Returns a list of airports for a given country, bbox or timezone. Multiple arguments can be specified to limit the search.\nEither one of country, bbox or timezone must be specified., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "959", "title": "", "text": "category_name:Travel, tool_name:Flightera Flight Data, api_name:airportStatistics, api_description:Returns detailed airport statistics for airports identified by the provided identifiers. In most cases the list should contain only one entry, unless the ident is ambiguous.\nIf searched by ident, only one airport is returned.\nOne of ident, iata, icao, localID must be provided.\nStatistics are calculated overnight and represent the current day's data., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "960", "title": "", "text": "category_name:Transportation, tool_name:TimeTable Lookup , api_name:airports - Nearest airports for a given latitude and longitude, api_description:Returns the nearest airports for a given latitude and longitude, required_params: [{\"name\": \"lon\", \"type\": \"string\", \"description\": \"Specify longitude\"}, {\"name\": \"lat\", \"type\": \"string\", \"description\": \"Specify latitude\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "961", "title": "", "text": "category_name:Transportation, tool_name:TimeTable Lookup , api_name:airports - Direct routes for an airport by airline, api_description:Returns a list of direct routes for an airport restricted to an airline, required_params: [{\"name\": \"airportiatacode\", \"type\": \"string\", \"description\": \"Airport IATA Code\"}, {\"name\": \"airlineiatacode\", \"type\": \"string\", \"description\": \"Airline IATA Code\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "962", "title": "", "text": "category_name:Travel, tool_name:Flightera Flight Data, api_name:airlineAircrafts, api_description:A list of plane registrations for a given airline. Can search by ident only.\nOnly returns currently active aircraft, required_params: [{\"name\": \"ident\", \"type\": \"STRING\", \"description\": \"The ident of the airline, as returned by /airline/search\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "963", "title": "", "text": "category_name:Travel, tool_name:British Airways Flight Info, api_name:Search departures by route, api_description:, required_params: [{\"name\": \"departurelocation-arrivallocation-arrivallocation-scheduleddeparturedate-scheduleddeparturedate\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"departureLocation\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"arrivalLocation\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"scheduledDepartureDate\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "964", "title": "", "text": "category_name:Travel, tool_name:British Airways Flight Info, api_name:Search arrivals by flight, api_description:, required_params: [{\"name\": \"flightnumber-scheduledarrivaldate-scheduledarrivaldate\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"flightNumber\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"scheduledArrivalDate\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "965", "title": "", "text": "category_name:Data, tool_name:Dicolink, api_name:Get Antonyms, api_description:Get antonyms of a specific word, required_params: [{\"name\": \"mot\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"mot\": \"str\", \"dicolinkUrl\": \"str\"}", "metadata": {}}
{"_id": "966", "title": "", "text": "category_name:Education, tool_name:Old English Translator, api_name:Translate to Old English, api_description:Old English Translator, required_params: [{\"name\": \"text\", \"type\": \"STRING\", \"description\": \"Text to convert to old English.\"}], optional_params: [], return_schema: {\"success\": {\"total\": \"int\"}, \"contents\": {\"translated\": \"str\", \"text\": \"str\", \"translation\": \"str\"}}", "metadata": {}}
{"_id": "967", "title": "", "text": "category_name:Data, tool_name:Dicolink, api_name:Get Citations, api_description:Get citations of a word, required_params: [{\"name\": \"mot\", \"type\": \"string\", \"description\": \"Set the word you want to search\"}], optional_params: [], return_schema: {\"mot\": \"str\", \"citation\": \"str\", \"auteur\": \"str\"}", "metadata": {}}
{"_id": "968", "title": "", "text": "category_name:Data, tool_name:Dicolink, api_name:Get synonyms, api_description:Get synonyms of a specific word, required_params: [{\"name\": \"mot\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"mot\": \"str\", \"dicolinkUrl\": \"str\"}", "metadata": {}}
{"_id": "969", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Download chains, api_description:Downloads a list of Hotel chains, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "970", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Contract, api_description:Gets the contract for the PPN bundle provided by a flight return, departure, or combined (round trip/multi-city) through the getFlightContract endpoint, required_params: [{\"name\": \"sid\", \"type\": \"STRING\", \"description\": \"Session ID. Random string ex.: j10k11l12m13n14\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "971", "title": "", "text": "category_name:Social, tool_name:Tronald Dump, api_name:/random/quote, api_description:Retrieve a random quote., required_params: [], optional_params: [], return_schema: {\"appeared_at\": \"str\", \"created_at\": \"str\", \"quote_id\": \"str\", \"tags\": [\"list of str with length 1\"], \"updated_at\": \"str\", \"value\": \"str\", \"_embedded\": {\"author\": [{\"author_id\": \"str\", \"bio\": \"NoneType\", \"created_at\": \"str\", \"name\": \"str\", \"slug\": \"str\", \"updated_at\": \"str\", \"_links\": {\"self\": {\"href\": \"str\"}}, \"_list_length\": 1}], \"source\": [{\"created_at\": \"str\", \"filename\": \"NoneType\", \"quote_source_id\": \"str\", \"remarks\": \"NoneType\", \"updated_at\": \"str\", \"url\": \"str\", \"_links\": {\"self\": {\"href\": \"str\"}}, \"_list_length\": 1}]}, \"_links\": {\"self\": {\"href\": \"str\"}}}", "metadata": {}}
{"_id": "972", "title": "", "text": "category_name:Social, tool_name:Tronald Dump, api_name:/tag/{tag}, api_description:Retrieve a quotes by a given tag., required_params: [{\"name\": \"tag\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"timestamp\": \"str\", \"status\": \"int\", \"error\": \"str\", \"message\": \"str\", \"path\": \"str\"}", "metadata": {}}
{"_id": "973", "title": "", "text": "category_name:Search, tool_name:SuperHero Search, api_name:Villains, api_description:Return 20 random Villains, required_params: [], optional_params: [], return_schema: {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\", \"powerstats\": {\"intelligence\": \"int\", \"strength\": \"int\", \"speed\": \"int\", \"durability\": \"int\", \"power\": \"int\", \"combat\": \"int\"}, \"appearance\": {\"gender\": \"str\", \"race\": \"NoneType\", \"height\": [\"list of str with length 2\"], \"weight\": [\"list of str with length 2\"], \"eyeColor\": \"str\", \"hairColor\": \"str\"}, \"biography\": {\"fullName\": \"str\", \"alterEgos\": \"str\", \"aliases\": [\"list of str with length 1\"], \"placeOfBirth\": \"str\", \"firstAppearance\": \"str\", \"publisher\": \"str\", \"alignment\": \"str\"}, \"work\": {\"occupation\": \"str\", \"base\": \"str\"}, \"connections\": {\"groupAffiliation\": \"str\", \"relatives\": \"str\"}, \"images\": {\"xs\": \"str\", \"sm\": \"str\", \"md\": \"str\", \"lg\": \"str\"}}", "metadata": {}}
{"_id": "974", "title": "", "text": "category_name:Search, tool_name:SuperHero Search, api_name:Heroes, api_description:Return a list of 20 random heroes, required_params: [], optional_params: [], return_schema: {\"id\": \"int\", \"name\": \"str\", \"slug\": \"str\", \"powerstats\": {\"intelligence\": \"int\", \"strength\": \"int\", \"speed\": \"int\", \"durability\": \"int\", \"power\": \"int\", \"combat\": \"int\"}, \"appearance\": {\"gender\": \"str\", \"race\": \"str\", \"height\": [\"list of str with length 2\"], \"weight\": [\"list of str with length 2\"], \"eyeColor\": \"str\", \"hairColor\": \"str\"}, \"biography\": {\"fullName\": \"str\", \"alterEgos\": \"str\", \"aliases\": [\"list of str with length 5\"], \"placeOfBirth\": \"str\", \"firstAppearance\": \"str\", \"publisher\": \"str\", \"alignment\": \"str\"}, \"work\": {\"occupation\": \"str\", \"base\": \"str\"}, \"connections\": {\"groupAffiliation\": \"str\", \"relatives\": \"str\"}, \"images\": {\"xs\": \"str\", \"sm\": \"str\", \"md\": \"str\", \"lg\": \"str\"}}", "metadata": {}}
{"_id": "975", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:listSubscribedAddresses, api_description:Returns all subscriptions/IPNs created with an account., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "976", "title": "", "text": "category_name:Finance, tool_name:Trading View, api_name:market/get-movers, api_description:Get movers in different exchanges and different categories, required_params: [{\"name\": \"exchange\", \"type\": \"STRING\", \"description\": \"One of the following : US|ADX|AMEX|ATHEX|EURONEXT&#95;BRU|ASX|BAHRAIN|BCBA|BCS|BELEX|BET|BER|BIST|BME|BMFBOVESPA|BMV|BSE|BSSE|BVC|BVL|BVB|BVCV|BX|CSE|DFM|DUS|OMXCOP|OMXTSE|OMXHEX|EGX|EURONEXT|EURONEXT&#95;PAR|EURONEXT&#95;AMS|EURONEXT&#95;LIS|FWB|GPW|HAN|HKEX|HNX|HOSE|IDX|JSE|LSE|LSIN|MIL|MOEX|MYX|MUN|NAG|NASDAQ|NEO|NEWCONNECT|NGM|NSE|NSENG|NYSE|NZX|KRX|OTC|OMXICE|OMXRSE|OMXSTO|OMXVSE|LUXSE|OSL|PSE|QSE|SGX|SIX|SWB|SZSE|SSE|SET|TADAWUL|TASE|TPEX|TSE|TSX|TSXV|TWSE|UPCOM|XETR\"}], optional_params: [], return_schema: {\"time\": \"str\", \"fields\": [\"list of str with length 2\"], \"metainfo\": {\"resultsName\": \"str\", \"symbolset\": \"str\", \"name\": \"str\"}, \"symbols\": [{\"s\": \"str\", \"f\": [\"list of int with length 2\"], \"_list_length\": 20}]}", "metadata": {}}
{"_id": "977", "title": "", "text": "category_name:Finance, tool_name:Trading View, api_name:ideas/get-replies, api_description:Get replies relating to an ideal post and comment, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"uuid\", \"type\": \"STRING\", \"description\": \"The value of image_url field returned in .../ideas/list endpoint\"}], optional_params: [], return_schema: {\"results\": [{\"id\": \"int\", \"parent_id\": \"int\", \"root_id\": \"int\", \"comment\": \"str\", \"comment_ast\": {\"type\": \"str\", \"children\": [{\"type\": \"str\", \"params\": {\"name\": \"str\", \"link\": \"str\"}, \"_list_length\": 2}]}, \"created_at\": \"str\", \"editable_until\": \"str\", \"likes_count\": \"int\", \"user_vote\": \"int\", \"user\": {\"id\": \"int\", \"avatars\": {\"small\": \"str\", \"mid\": \"str\", \"big\": \"str\", \"orig\": \"str\"}, \"username\": \"str\", \"is_broker\": \"bool\", \"is_pro\": \"bool\", \"is_paid_pro\": \"bool\", \"pro_plan\": \"str\", \"broker_plan\": \"NoneType\", \"is_moderator\": \"bool\", \"is_trial\": \"bool\", \"badges\": [{\"name\": \"str\", \"verbose_name\": \"str\", \"_list_length\": 1}], \"is_online\": \"bool\"}, \"spam_status\": \"NoneType\", \"is_hidden\": \"bool\", \"depth\": \"int\", \"platform\": \"str\", \"platform_link_url\": \"str\", \"platform_link_text\": \"str\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "978", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Yearn.finance Balance From Specific Network, api_description:This endpoint will return back the yearn.finance balance of an address in a specific network., required_params: [{\"name\": \"network\", \"type\": \"string\", \"description\": \"network can take the value : \\n- eth\"}, {\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "979", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get ICON Balance, api_description:This endpoint will return back the ICON balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "980", "title": "", "text": "category_name:Finance, tool_name:Trading View, api_name:countries/list, api_description:List all available supported countries, required_params: [], optional_params: [], return_schema: \"{\\\"us\\\": {\\\"title\\\": \\\"str\\\", \\\"screenerName\\\": \\\"str\\\", \\\"screenerTimezone\\\": \\\"str\\\", \\\"defaultExchange\\\": \\\"str\\\", \\\"exchangesForHotlist\\\": [\\\"list of str with length 5\\\"], \\\"exchangesStocks\\\": [\\\"list of str with length 4\\\"], \\\"group\\\": \\\"str\\\"}, \\\"ae\\\": {\\\"title\\\": \\\"str\\\", \\\"screenerName\\\": \\\"str\\\", \\\"screenerTimezone\\\": \\\"str\\\", \\\"exchangesStocks\\\": [\\\"list of str with length 2\\\"], \\\"group\\\": \\\"str\\\"}, \\\"ar\\\": {\\\"title\\\": \\\"str\\\", \\\"screenerName\\\": \\\"str\\\", \\\"screenerTimezone\\\": \\\"str\\\", \\\"exchangesForHotlist\\\": [\\\"list of str with length 1\\\"], \\\"exchangesStocks\\\": [\\\"list of str with length 1\\\"], \\\"defaultExchange\\\": \\\"str\\\", \\\"group\\\": \\\"str\\\"}, \\\"at\\\": {\\\"title\\\": \\\"str\\\"}, \\\"au\\\": {\\\"title\\\": \\\"str\\\", \\\"screenerName\\\": \\\"str\\\", \\\"screenerTimezone\\\": \\\"str\\\", \\\"exchangesStocks\\\": [\\\"list of str with length 1\\\"], \\\"group\\\": \\\"str\\\"}, \\\"be\\\": {\\\"title\\\": \\\"str\\\", \\\"screenerName\\\": \\\"str\\\", \\\"screenerTimezone\\\": \\\"str\\\", \\\"exchangesForHotlist\\\": [\\\"list of str with length 1\\\"], \\\"exchangesStocks\\\": [\\\"list of str with length 1\\\"], \\\"defaultExchange\\\": \\\"str\\\", \\\"group\\\": \\\"str\\\"}, \\\"bh\\\": {\\\"title\\\": \\\"str\\\", \\\"screenerNam\"", "metadata": {}}
{"_id": "981", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Litecoin Balance, api_description:This endpoint will return back the Litecoin balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "982", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:subscribeAddress, api_description:Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won't get reliable notifications anymore.\r\n, required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "983", "title": "", "text": "category_name:Finance, tool_name:Trading View, api_name:ideas/list, api_description:List ideas post with options and filters, required_params: [], optional_params: [], return_schema: \"{\\\"count\\\": \\\"int\\\", \\\"page_size\\\": \\\"int\\\", \\\"page_count\\\": \\\"int\\\", \\\"results\\\": [{\\\"id\\\": \\\"int\\\", \\\"image_url\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\", \\\"created_at\\\": \\\"str\\\", \\\"updated_at\\\": \\\"NoneType\\\", \\\"date_timestamp\\\": \\\"int\\\", \\\"updated_date_timestamp\\\": \\\"NoneType\\\", \\\"chart_url\\\": \\\"str\\\", \\\"image\\\": {\\\"big\\\": \\\"str\\\", \\\"middle\\\": \\\"str\\\", \\\"middle_webp\\\": \\\"str\\\", \\\"bg_color\\\": \\\"str\\\"}, \\\"is_public\\\": \\\"bool\\\", \\\"is_visible\\\": \\\"bool\\\", \\\"is_video\\\": \\\"bool\\\", \\\"video_duration\\\": \\\"str\\\", \\\"video_cam\\\": \\\"bool\\\", \\\"video_filename\\\": \\\"NoneType\\\", \\\"is_education\\\": \\\"bool\\\", \\\"symbol\\\": {\\\"name\\\": \\\"str\\\", \\\"badge\\\": {\\\"label\\\": \\\"str\\\", \\\"url\\\": \\\"str\\\"}, \\\"full_name\\\": \\\"str\\\", \\\"short_name\\\": \\\"str\\\", \\\"exchange\\\": \\\"str\\\", \\\"interval\\\": \\\"str\\\", \\\"direction\\\": \\\"int\\\", \\\"type\\\": \\\"str\\\", \\\"logo_id\\\": \\\"NoneType\\\", \\\"currency_logo_id\\\": \\\"str\\\", \\\"base_currency_logo_id\\\": \\\"str\\\", \\\"logo_urls\\\": [\\\"list of str with length 2\\\"]}, \\\"user\\\": {\\\"id\\\": \\\"int\\\", \\\"username\\\": \\\"str\\\", \\\"badges\\\": [{\\\"name\\\": \\\"str\\\", \\\"verbose_name\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"picture_url\\\": \\\"str\\\", \\\"mid_picture_url\\\": \\\"str\\\", \\\"is_pro\\\": \\\"bool\"", "metadata": {}}
{"_id": "984", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Vechain Balance, api_description:This endpoint will return back the Vechain balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "985", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:Title Episodes, api_description:Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\\n\\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. \"}], optional_params: [], return_schema: {\"id\": \"int\", \"name\": \"str\", \"episode_number\": \"int\", \"season_number\": \"int\", \"season_id\": \"int\", \"tmdb_id\": \"int\", \"imdb_id\": \"str\", \"thumbnail_url\": \"str\", \"release_date\": \"str\", \"runtime_minutes\": \"int\", \"overview\": \"str\", \"sources\": [{\"source_id\": \"int\", \"name\": \"str\", \"type\": \"str\", \"region\": \"str\", \"ios_url\": \"str\", \"android_url\": \"str\", \"web_url\": \"str\", \"format\": \"str\", \"price\": \"NoneType\", \"_list_length\": 7}]}", "metadata": {}}
{"_id": "986", "title": "", "text": "category_name:Movies, tool_name:Streaming Availability, api_name:Search By Title (FREE), api_description:Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported., required_params: [{\"name\": \"title\", \"type\": \"STRING\", \"description\": \"Title to search for.\"}, {\"name\": \"country\", \"type\": \"STRING\", \"description\": \"Regardless of this value, the given title is searched across all the platforms and all the countries. This parameter determines according to which country the streamingInfo field will be populated. Thus even if a show is not available in this country, It will be included in the results if it resembles with the given title, but the streaming information will not be available.\"}], optional_params: [], return_schema: \"{\\\"result\\\": [{\\\"type\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"overview\\\": \\\"str\\\", \\\"streamingInfo\\\": {\\\"us\\\": {\\\"apple\\\": [{\\\"type\\\": \\\"str\\\", \\\"quality\\\": \\\"str\\\", \\\"addOn\\\": \\\"str\\\", \\\"link\\\": \\\"str\\\", \\\"watchLink\\\": \\\"str\\\", \\\"audios\\\": [{\\\"language\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"_list_length\\\": 3}], \\\"subtitles\\\": [{\\\"locale\\\": {\\\"language\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\"}, \\\"closedCaptions\\\": \\\"bool\\\", \\\"_list_length\\\": 34}], \\\"price\\\": {\\\"amount\\\": \\\"str\\\", \\\"currency\\\": \\\"str\\\", \\\"formatted\\\": \\\"str\\\"}, \\\"leaving\\\": \\\"int\\\", \\\"availableSince\\\": \\\"int\\\", \\\"_list_length\\\": 2}], \\\"hbo\\\": [{\\\"type\\\": \\\"str\\\", \\\"quality\\\": \\\"str\\\", \\\"addOn\\\": \\\"str\\\", \\\"link\\\": \\\"str\\\", \\\"watchLink\\\": \\\"str\\\", \\\"audios\\\": [{\\\"language\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"_list_length\\\": 3}], \\\"subtitles\\\": [{\\\"locale\\\": {\\\"language\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\"}, \\\"closedCaptions\\\": \\\"bool\\\", \\\"_list_length\\\": 3}], \\\"price\\\": \\\"NoneType\\\", \\\"leaving\\\": \\\"int\\\", \\\"availableSince\\\": \\\"int\\\", \\\"_list_length\\\": 1}], \\\"hulu\\\": [{\\\"type\\\": \\\"str\\\", \\\"quality\\\": \\\"str\\\", \\\"addOn\\\": \\\"str\\\", \\\"link\\\": \\\"str\\\", \\\"watchLink\\\": \\\"str\\\", \\\"audios\\\": [{\\\"language\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"_list_\"", "metadata": {}}
{"_id": "987", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:Title Streaming Sources, api_description:Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\\n\\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. \"}], optional_params: [], return_schema: {\"source_id\": \"int\", \"name\": \"str\", \"type\": \"str\", \"region\": \"str\", \"ios_url\": \"str\", \"android_url\": \"str\", \"web_url\": \"str\", \"format\": \"str\", \"price\": \"float\", \"seasons\": \"NoneType\", \"episodes\": \"NoneType\"}", "metadata": {}}
{"_id": "988", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:HOT TRENDING SONGS POWERED BY TWITTER, api_description:Provide the HOT TRENDING SONGS POWERED BY TWITTER chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"max range(1-20)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "989", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Norway Songs, api_description:Provide the Norway Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "990", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Chile Songs, api_description:Provide the Chile Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "991", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Spain Songs, api_description:Provide the Spain Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "992", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Billboard 200 Artists, api_description:Provide the Greatest of All Time Billboard 200 Artists chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "993", "title": "", "text": "category_name:Food, tool_name:Yummly, api_name:feeds/search, api_description:Search for recipes by name and option filters, required_params: [{\"name\": \"start\", \"type\": \"NUMBER\", \"description\": \"The offset of items to be ignored in response for paging\"}, {\"name\": \"maxResult\", \"type\": \"NUMBER\", \"description\": \"Number of items returned per response\"}], optional_params: [], return_schema: \"{\\\"seo\\\": {\\\"web\\\": {\\\"noindex\\\": \\\"bool\\\", \\\"display-title\\\": \\\"str\\\", \\\"canonical-term\\\": \\\"str\\\", \\\"meta-tags\\\": {\\\"title\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\"}, \\\"link-tags\\\": [{\\\"rel\\\": \\\"str\\\", \\\"hreflang\\\": \\\"str\\\", \\\"href\\\": \\\"str\\\", \\\"_list_length\\\": 2}]}, \\\"firebase\\\": {\\\"noindex\\\": \\\"bool\\\"}}, \\\"feed\\\": \\\"empty list\\\", \\\"parsedIngredients\\\": \\\"empty list\\\", \\\"indexableMatches\\\": \\\"NoneType\\\", \\\"relatedPhrases\\\": {\\\"relatedPhrases\\\": [\\\"list of str with length 13\\\"], \\\"unrelatedPhrases\\\": [\\\"list of str with length 30\\\"], \\\"keywords\\\": [\\\"list of str with length 20\\\"], \\\"recipes\\\": [\\\"list of str with length 5\\\"], \\\"phrase\\\": \\\"str\\\"}, \\\"adTrackingCampaign\\\": \\\"int\\\", \\\"criteria\\\": {\\\"allowedAttribute\\\": [\\\"list of str with length 2\\\"], \\\"q\\\": \\\"str\\\", \\\"requirePictures\\\": \\\"bool\\\", \\\"ENERC_KCAL.min\\\": \\\"int\\\", \\\"ENERC_KCAL.max\\\": \\\"float\\\", \\\"maxResult\\\": \\\"int\\\", \\\"start\\\": \\\"int\\\"}, \\\"ingredientMatchCount\\\": {}, \\\"totalMatchCount\\\": \\\"int\\\", \\\"noindex\\\": \\\"bool\\\", \\\"adTargetingPhrase\\\": \\\"NoneType\\\", \\\"unrelatedSearchResults\\\": \\\"empty list\\\", \\\"adTargetingKeywords\\\": \\\"empty list\\\", \\\"relatedSearchResults\\\": \\\"\"", "metadata": {}}
{"_id": "994", "title": "", "text": "category_name:Food, tool_name:Yummly, api_name:tags/list, api_description:List all tags in which recipes are group together, required_params: [], optional_params: [], return_schema: \"{\\\"de-DE\\\": {\\\"user-diet\\\": [{\\\"id\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\", \\\"localesAvailableIn\\\": [\\\"list of str with length 6\\\"], \\\"value-type\\\": \\\"str\\\", \\\"ordinal\\\": \\\"NoneType\\\", \\\"exclusive?\\\": \\\"bool\\\", \\\"name\\\": \\\"NoneType\\\", \\\"_list_length\\\": 6}], \\\"picker-units\\\": {\\\"imperial\\\": [\\\"list of list with length 14\\\"], \\\"metric\\\": [\\\"list of list with length 13\\\"]}, \\\"user-allergy\\\": [{\\\"id\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\", \\\"localesAvailableIn\\\": [\\\"list of str with length 2\\\"], \\\"value-type\\\": \\\"str\\\", \\\"ordinal\\\": \\\"int\\\", \\\"exclusive?\\\": \\\"bool\\\", \\\"name\\\": \\\"str\\\", \\\"_list_length\\\": 10}], \\\"course\\\": [{\\\"description\\\": \\\"str\\\", \\\"localesAvailableIn\\\": [\\\"list of str with length 2\\\"], \\\"searchValue\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"ordinal\\\": \\\"NoneType\\\", \\\"imageUrl\\\": \\\"NoneType\\\", \\\"id\\\": \\\"str\\\", \\\"visible\\\": \\\"bool\\\", \\\"_list_length\\\": 9}], \\\"technique\\\": [{\\\"description\\\": \\\"str\\\", \\\"localesAvailableIn\\\": [\\\"list of str with length 2\\\"], \\\"searchValue\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"ordinal\\\": \\\"NoneType\\\", \\\"imageUrl\\\": \\\"NoneType\\\", \\\"id\\\": \\\"str\\\", \\\"visible\\\": \\\"bool\\\", \\\"_list_le\"", "metadata": {}}
{"_id": "995", "title": "", "text": "category_name:Finance, tool_name:Currency Conversion and Exchange Rates, api_name:Symbols, api_description:Retrieve a list of all currently available currency symbols, required_params: [], optional_params: [], return_schema: \"{\\\"success\\\": \\\"bool\\\", \\\"symbols\\\": {\\\"ANG\\\": \\\"str\\\", \\\"SVC\\\": \\\"str\\\", \\\"CAD\\\": \\\"str\\\", \\\"XCD\\\": \\\"str\\\", \\\"MVR\\\": \\\"str\\\", \\\"HRK\\\": \\\"str\\\", \\\"AUD\\\": \\\"str\\\", \\\"MWK\\\": \\\"str\\\", \\\"XAG\\\": \\\"str\\\", \\\"MAD\\\": \\\"str\\\", \\\"PHP\\\": \\\"str\\\", \\\"NAD\\\": \\\"str\\\", \\\"GNF\\\": \\\"str\\\", \\\"KES\\\": \\\"str\\\", \\\"MZN\\\": \\\"str\\\", \\\"BTN\\\": \\\"str\\\", \\\"MGA\\\": \\\"str\\\", \\\"AZN\\\": \\\"str\\\", \\\"XAU\\\": \\\"str\\\", \\\"RON\\\": \\\"str\\\", \\\"CHF\\\": \\\"str\\\", \\\"EGP\\\": \\\"str\\\", \\\"BSD\\\": \\\"str\\\", \\\"TWD\\\": \\\"str\\\", \\\"GGP\\\": \\\"str\\\", \\\"LVL\\\": \\\"str\\\", \\\"MMK\\\": \\\"str\\\", \\\"WST\\\": \\\"str\\\", \\\"ILS\\\": \\\"str\\\", \\\"BHD\\\": \\\"str\\\", \\\"GBP\\\": \\\"str\\\", \\\"TZS\\\": \\\"str\\\", \\\"SDG\\\": \\\"str\\\", \\\"LAK\\\": \\\"str\\\", \\\"DJF\\\": \\\"str\\\", \\\"BYN\\\": \\\"str\\\", \\\"MRO\\\": \\\"str\\\", \\\"RWF\\\": \\\"str\\\", \\\"PEN\\\": \\\"str\\\", \\\"EUR\\\": \\\"str\\\", \\\"ZMK\\\": \\\"str\\\", \\\"RSD\\\": \\\"str\\\", \\\"INR\\\": \\\"str\\\", \\\"MUR\\\": \\\"str\\\", \\\"BWP\\\": \\\"str\\\", \\\"GEL\\\": \\\"str\\\", \\\"KMF\\\": \\\"str\\\", \\\"UZS\\\": \\\"str\\\", \\\"RUB\\\": \\\"str\\\", \\\"CUC\\\": \\\"str\\\", \\\"BGN\\\": \\\"str\\\", \\\"JOD\\\": \\\"str\\\", \\\"NGN\\\": \\\"str\\\", \\\"BDT\\\": \\\"str\\\", \\\"PKR\\\": \\\"str\\\", \\\"BRL\\\": \\\"str\\\", \\\"KZT\\\": \\\"str\\\", \\\"CVE\\\": \\\"str\\\", \\\"HNL\\\": \\\"str\\\", \\\"NZD\\\": \\\"str\\\", \\\"ERN\\\": \\\"str\\\", \\\"NPR\\\": \\\"str\\\", \\\"ZMW\\\": \\\"str\\\", \\\"FKP\\\": \\\"str\\\", \\\"DZD\\\": \\\"str\\\", \\\"JMD\\\": \\\"str\\\", \\\"CRC\\\": \\\"str\\\", \\\"GMD\\\": \\\"str\\\", \\\"PLN\\\": \\\"str\\\", \\\"A\"", "metadata": {}}
{"_id": "996", "title": "", "text": "category_name:Finance, tool_name:Coinbase, api_name:Get total sell price, api_description:Get the total sell price for some bitcoin amount., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "997", "title": "", "text": "category_name:Finance, tool_name:Coinbase, api_name:List orders received, api_description:List merchant orders received., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "998", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Mexico Songs, api_description:Provide the Mexico Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "999", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Peru Songs, api_description:Provide the Peru Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "1000", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Philippines Songs, api_description:Provide the Philippines Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "1001", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:BILLBOARD U.S. AFROBEATS SONGS, api_description:Provide the BILLBOARD U.S. AFROBEATS SONGS chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"max range(1-50)\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1002", "title": "", "text": "category_name:Movies, tool_name:Streaming Availability, api_name:Search Ultra, api_description:Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country., required_params: [{\"name\": \"services\", \"type\": \"STRING\", \"description\": \"A comma separated list of up to 16 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\\n\\nSyntax of the values supplied in the list can be as the followings:\\n\\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\\n\\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\\n\\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\\n\\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\\n\\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\\n\\nSome sample list values:\\n\\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\\n\\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.\"}, {\"name\": \"country\", \"type\": \"STRING\", \"description\": \"2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1003", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Admin Divisions Near Division, api_description:Get divisions near the given administrative division, filtering by optional criteria., required_params: [{\"name\": \"divisionId\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"radius\", \"type\": \"NUMBER\", \"description\": \"The location radius within which to find divisions\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1004", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:AROONOSC, api_description:Aroon Oscillator(AROONOSC) uses classic Aroon(Aroon Up and Aroon down) to measure the strength of persisting trends and whether they will continue., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1005", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/portfolio/get-fixed-income-exposure-analysis, api_description:Get fixed income exposure analysis as displayed in the Portfolio tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1006", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Statistics, api_description:Returns current overview of company’s main statistics including valuation metrics and financials.\n\nAvailability: Ultra plan\nData weighting: 50 API credits per symbol, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1007", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:news/list, api_description:List latest news, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1008", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/people/get-summary, api_description:Get summary information as displayed in the People tab, required_params: [{\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}, {\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1009", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:market/get-global-indices, api_description:Get information of global indices, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1010", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/risk/get-risk-volatility-measures, api_description:Get risk volatility measures in the Risk tab, required_params: [{\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}, {\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1011", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/parent/get-summary, api_description:Get summary information as displayed in the Parent tab, required_params: [{\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}, {\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1012", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/price/get-other-fees, api_description:Get other fees as displayed in the Price tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1013", "title": "", "text": "category_name:Devices, tool_name:Geolocation Simulation For Mobile Apps, api_name:List All Simulations Of A Group, api_description:Enter groupID in the route, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1014", "title": "", "text": "category_name:Devices, tool_name:Geolocation Simulation For Mobile Apps, api_name:View Simulation, api_description:Enter simulationID in route, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1015", "title": "", "text": "category_name:Mapping, tool_name:ca.boundaries.io, api_name:Query for Hexagon by Location and Resolution, api_description:Query for Hexagon by Location and Resolution, required_params: [{\"name\": \"latitude\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"longitude\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"timestamp\": \"str\", \"status\": \"int\", \"error\": \"str\", \"message\": \"str\", \"path\": \"str\"}", "metadata": {}}
{"_id": "1016", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Songs of the Summer, api_description:Provide the Greatest of All Time Songs of the Summer chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1017", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Hong Kong Songs, api_description:Provide the Hong Kong Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "1018", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Croatia Songs, api_description:Provide the Croatia Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "1019", "title": "", "text": "category_name:Sports, tool_name:Fitness Calculator, api_name:bmi, api_description:Find body mass index value (BMI) with this endpoint. You just need to enter three parameters which are age, weight (kg), and height(cm) information., required_params: [{\"name\": \"age\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"height\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"weight\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"status_code\": \"int\", \"request_result\": \"str\", \"data\": {\"bmi\": \"float\", \"health\": \"str\", \"healthy_bmi_range\": \"str\"}}", "metadata": {}}
{"_id": "1020", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Check all domains at once, api_description:Check all domains with one call\nfalse if registered, true if not, required_params: [{\"name\": \"name\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1021", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Pinterest, api_description:Check username on Pinterest, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1022", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Twitch, api_description:Check username on Twitch, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1023", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:properties/get-rooms (Deprecated), api_description:Get full details of rooms in the hotel, required_params: [{\"name\": \"search_id\", \"type\": \"STRING\", \"description\": \"The value returned in properties/list API having response contains the selected hotel\"}, {\"name\": \"arrival_date\", \"type\": \"STRING\", \"description\": \"The check-in date at hotel\"}, {\"name\": \"rec_guest_qty\", \"type\": \"STRING\", \"description\": \"The number of adults separated by comma, and how you arrange them in rooms\"}, {\"name\": \"hotel_id\", \"type\": \"STRING\", \"description\": \"The value of hotel_id field from properties/list API\"}, {\"name\": \"departure_date\", \"type\": \"STRING\", \"description\": \"The check-out date \"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1024", "title": "", "text": "category_name:eCommerce, tool_name:Magic AliExpress, api_name:/api/product/{productId}, api_description:This resource represents a product, each product is identifier by ID, required_params: [{\"name\": \"productId\", \"type\": \"NUMBER\", \"description\": \"The Aliexpress product ID\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1025", "title": "", "text": "category_name:eCommerce, tool_name:Magic AliExpress, api_name:/api/shipping/{productID}, api_description:This ressource displays the shipping information for one product, required_params: [{\"name\": \"productID\", \"type\": \"NUMBER\", \"description\": \"The Aliexpress product ID\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1026", "title": "", "text": "category_name:Tools, tool_name:Ephemeral Proxies, api_name:Obtain a new datacenter proxy, api_description:The connection proxy details are `proxy.host` and `proxy.port` from the response fields.\nThe proxy will allow connections from the same source IP as the one making this API call. Make use of the `whitelist_ip` parameter to allow an additional ip.\nCountries can be selected by using the `countries` parameter, otherwise the country is randomly selected. A list of countries is available on *Service Status* endpoint.\nThe proxy is available for 30 mins.\n, required_params: [], optional_params: [], return_schema: {\"success\": \"bool\", \"proxy\": {\"id\": \"str\", \"host\": \"str\", \"port\": \"int\", \"expires_at\": \"str\", \"whitelisted_ips\": [\"list of str with length 1\"], \"features\": {\"static\": \"bool\", \"type\": \"str\", \"supported_protocols\": {\"socks4\": \"bool\", \"socks5\": \"bool\", \"http\": \"bool\", \"https\": \"bool\"}}, \"visibility\": {\"ip\": \"str\", \"country\": \"str\", \"country_iso\": \"str\", \"latitude\": \"float\", \"longitude\": \"float\", \"timezone\": \"str\", \"asn\": \"str\", \"asn_org\": \"str\", \"zip_code\": \"str\", \"region_name\": \"str\", \"region_code\": \"str\", \"city\": \"str\"}}}", "metadata": {}}
{"_id": "1027", "title": "", "text": "category_name:Database, tool_name:WHOIS v2, api_name:WHOIS lookup v2, api_description:WHOIS lookup in JSON or XML, ver. 2, required_params: [{\"name\": \"domainName\", \"type\": \"STRING\", \"description\": \"The name of the domain looked up.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1028", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/key-stats/get-growth-table, api_description:Get key stats growth in the Valuation tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1029", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:market/v2/get-realtime-data, api_description:Query one or more entities data at once, required_params: [{\"name\": \"performanceIds\", \"type\": \"STRING\", \"description\": \"The value of performanceId returned in .../market/v2/get-movers , .../market/v2/auto-complete, etc... endpoints. Separated by comma to query multiple entities.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1030", "title": "", "text": "category_name:Business, tool_name:360 Business Tool, api_name:GetCases, api_description:Get all cases, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1031", "title": "", "text": "category_name:Mapping, tool_name:MapToolkit, api_name:Global Light Tiles, api_description:Global mostly grayscale tiles., required_params: [{\"name\": \"x\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"y\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"z\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1032", "title": "", "text": "category_name:Mapping, tool_name:MapToolkit, api_name:Contours Vector Tiles, api_description:Global Contourlines., required_params: [{\"name\": \"x\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"z\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"y\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1033", "title": "", "text": "category_name:Location, tool_name:NAVITIME Geocoding, api_name:datum_conversion, api_description:緯度経度の測地系(日本測地系/世界測地系)を変換します。, required_params: [{\"name\": \"coord\", \"type\": \"STRING\", \"description\": \"Latitude and longitude before conversion.\\nSupport millisecond and degree indication.\"}, {\"name\": \"after_datum\", \"type\": \"STRING\", \"description\": \"Geodetic system after conversion.\\n(wgs84: World Geodetic System (default), tokyo: Old Japan Geodetic System)\"}], optional_params: [], return_schema: {\"coord\": {\"lat\": \"float\", \"lon\": \"float\"}, \"unit\": {\"datum\": \"str\", \"coord_unit\": \"str\"}}", "metadata": {}}
{"_id": "1034", "title": "", "text": "category_name:Location, tool_name:NAVITIME Geocoding, api_name:address_reverse_geocoding, api_description:逆ジオコーディング\n緯度経度を指定して住所情報を取得します。, required_params: [{\"name\": \"coord\", \"type\": \"STRING\", \"description\": \"Latitude and longitude.\"}], optional_params: [], return_schema: {\"items\": [{\"code\": \"str\", \"name\": \"str\", \"postal_code\": \"str\", \"coord\": {\"lat\": \"float\", \"lon\": \"float\"}, \"details\": [{\"code\": \"str\", \"name\": \"str\", \"ruby\": \"str\", \"level\": \"str\", \"_list_length\": 6}], \"_list_length\": 1}], \"unit\": {\"datum\": \"str\", \"coord_unit\": \"str\"}}", "metadata": {}}
{"_id": "1035", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/alerts/active/count, api_description:A list of active counts for regions, areas and zones. A list of these items forthcoming., required_params: [], optional_params: [], return_schema: \"{\\\"total\\\": \\\"int\\\", \\\"land\\\": \\\"int\\\", \\\"marine\\\": \\\"int\\\", \\\"regions\\\": {\\\"AL\\\": \\\"int\\\", \\\"AT\\\": \\\"int\\\", \\\"GL\\\": \\\"int\\\", \\\"GM\\\": \\\"int\\\", \\\"PA\\\": \\\"int\\\", \\\"PI\\\": \\\"int\\\"}, \\\"areas\\\": {\\\"AK\\\": \\\"int\\\", \\\"AL\\\": \\\"int\\\", \\\"AM\\\": \\\"int\\\", \\\"AN\\\": \\\"int\\\", \\\"AR\\\": \\\"int\\\", \\\"AZ\\\": \\\"int\\\", \\\"CA\\\": \\\"int\\\", \\\"CO\\\": \\\"int\\\", \\\"DE\\\": \\\"int\\\", \\\"FL\\\": \\\"int\\\", \\\"GA\\\": \\\"int\\\", \\\"GM\\\": \\\"int\\\", \\\"IA\\\": \\\"int\\\", \\\"ID\\\": \\\"int\\\", \\\"IN\\\": \\\"int\\\", \\\"KS\\\": \\\"int\\\", \\\"KY\\\": \\\"int\\\", \\\"LA\\\": \\\"int\\\", \\\"LE\\\": \\\"int\\\", \\\"MD\\\": \\\"int\\\", \\\"ME\\\": \\\"int\\\", \\\"MI\\\": \\\"int\\\", \\\"MO\\\": \\\"int\\\", \\\"MS\\\": \\\"int\\\", \\\"NC\\\": \\\"int\\\", \\\"NE\\\": \\\"int\\\", \\\"NH\\\": \\\"int\\\", \\\"NJ\\\": \\\"int\\\", \\\"NM\\\": \\\"int\\\", \\\"NV\\\": \\\"int\\\", \\\"NY\\\": \\\"int\\\", \\\"OH\\\": \\\"int\\\", \\\"OK\\\": \\\"int\\\", \\\"PA\\\": \\\"int\\\", \\\"PH\\\": \\\"int\\\", \\\"PK\\\": \\\"int\\\", \\\"PR\\\": \\\"int\\\", \\\"PZ\\\": \\\"int\\\", \\\"SD\\\": \\\"int\\\", \\\"TN\\\": \\\"int\\\", \\\"TX\\\": \\\"int\\\", \\\"VA\\\": \\\"int\\\", \\\"VI\\\": \\\"int\\\", \\\"WY\\\": \\\"int\\\"}, \\\"zones\\\": {\\\"AKC090\\\": \\\"int\\\", \\\"AKC185\\\": \\\"int\\\", \\\"AKC188\\\": \\\"int\\\", \\\"AKC290\\\": \\\"int\\\", \\\"AKZ203\\\": \\\"int\\\", \\\"AKZ204\\\": \\\"int\\\", \\\"AKZ206\\\": \\\"int\\\", \\\"AKZ218\\\": \\\"int\\\", \\\"AKZ220\\\": \\\"int\\\", \\\"ALC003\\\": \\\"int\\\", \\\"ALC013\\\": \\\"int\\\", \\\"ALC023\\\": \\\"int\\\", \\\"ALC025\\\": \\\"int\\\", \\\"ALC031\\\": \\\"int\\\", \\\"ALC035\\\": \\\"int\\\", \\\"ALC039\\\": \\\"i\"", "metadata": {}}
{"_id": "1036", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/alerts/{alertId}, api_description:A specific alert by id provided by a search or list. Example: /alerts/NWS-IDP-PROD-2202530-2064731, required_params: [{\"name\": \"alertId\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 1}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "1037", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:properties/get-static-map, api_description:Get static map at specific GEO location, required_params: [{\"name\": \"width\", \"type\": \"NUMBER\", \"description\": \"The width of image in pixel\"}, {\"name\": \"longitude\", \"type\": \"NUMBER\", \"description\": \"The latitude co-ordinate\"}, {\"name\": \"zoom\", \"type\": \"NUMBER\", \"description\": \"Zoom in/out of map\"}, {\"name\": \"height\", \"type\": \"NUMBER\", \"description\": \"The height of image in pixel\"}, {\"name\": \"latitude\", \"type\": \"NUMBER\", \"description\": \"The latitude co-ordinate\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1038", "title": "", "text": "category_name:Mapping, tool_name:uk.boundaries.io, api_name:Query for Postal Code Unit Boundary( H3 Geo Boundary ), api_description:Query for Postal Unit Boundary (ex. ZE1 0AE) \n\nhttps://eng.uber.com/, required_params: [{\"name\": \"postal-unit\", \"type\": \"STRING\", \"description\": \"Query by postal units. for example 'ZE1 0AE\\\", or multiples.\"}], optional_params: [], return_schema: {\"type\": \"str\", \"features\": [{\"type\": \"str\", \"properties\": {\"country\": \"str\", \"postal-unit\": \"str\", \"postal-area\": \"str\", \"postal-sector\": \"str\", \"postal-district\": \"str\", \"district\": \"str\", \"postal-unit-within-count\": \"int\", \"ward\": \"str\", \"h3-index\": \"str\", \"h3-resolution\": \"int\", \"postal-unit-within\": \"str\"}, \"geometry\": {\"type\": \"str\", \"coordinates\": [\"list of list with length 1\"]}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "1039", "title": "", "text": "category_name:Business, tool_name:Realty in US, api_name:properties/v2/list-similar-homes (Deprecated), api_description:List similar properties for sale\n* This endpoint is deprecating, the official have changed to use .../properties/v2/list.... endpoints to list similar properties., required_params: [{\"name\": \"property_id\", \"type\": \"STRING\", \"description\": \"The value of property&#95;id field returned in  .../properties/list-.... or  .../properties/v2/list-... endpoints.\"}], optional_params: [], return_schema: {\"data\": {\"home\": {\"related_homes\": {\"count\": \"int\", \"results\": [{\"property_id\": \"str\", \"list_price\": \"int\", \"href\": \"str\", \"flags\": {\"is_contingent\": \"NoneType\", \"is_new_construction\": \"NoneType\", \"is_pending\": \"NoneType\", \"is_foreclosure\": \"NoneType\", \"is_new_listing\": \"bool\"}, \"status\": \"str\", \"listing_id\": \"NoneType\", \"primary_photo\": {\"href\": \"NoneType\"}, \"description\": {\"baths\": \"int\", \"baths_full\": \"NoneType\", \"baths_half\": \"NoneType\", \"beds\": \"int\", \"sqft\": \"NoneType\"}, \"location\": {\"address\": {\"city\": \"str\", \"country\": \"str\", \"line\": \"str\"}}, \"_list_length\": 20}], \"impression_token\": {\"product\": \"str\", \"type\": \"str\", \"api_route\": \"str\", \"module_name\": \"str\", \"algo_name\": \"str\", \"algo_version\": \"str\", \"model_name\": \"str\", \"module_type\": \"str\", \"model_version\": \"str\", \"impression_id\": \"str\", \"recommendations_count\": \"int\", \"client_id\": \"str\"}}}}}", "metadata": {}}
{"_id": "1040", "title": "", "text": "category_name:Business, tool_name:Realty in US, api_name:schools/get-school-district, api_description:Get detailed information of a school district, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of districts -> id field returned in .../schools/list endpoint\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1041", "title": "", "text": "category_name:Mapping, tool_name:Walk Score, api_name:Walk Score, api_description:Get Walk Score, required_params: [{\"name\": \"lat\", \"type\": \"STRING\", \"description\": \"\\tThe latitude of the requested location.\"}, {\"name\": \"address\", \"type\": \"STRING\", \"description\": \"The URL encoded address.\"}, {\"name\": \"wsapikey\", \"type\": \"STRING\", \"description\": \"Your Walk Score API Key. https://www.walkscore.com/professional/api-sign-up.php\"}, {\"name\": \"lon\", \"type\": \"STRING\", \"description\": \"\\tThe longitude of the requested location.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1042", "title": "", "text": "category_name:Business, tool_name:Realty in US, api_name:mortgage/v2/check-rates, api_description:Check mortgage rates, required_params: [{\"name\": \"postal_code\", \"type\": \"STRING\", \"description\": \"The postal code\"}], optional_params: [], return_schema: {\"data\": {\"loan_analysis\": {\"__typename\": \"str\", \"market\": {\"__typename\": \"str\", \"mortgage_data\": {\"__typename\": \"str\", \"insurance_rate\": \"float\", \"property_tax_rate\": \"float\", \"average_rates\": [{\"__typename\": \"str\", \"loan_type\": {\"__typename\": \"str\", \"loan_id\": \"str\", \"term\": \"int\", \"display_name\": \"str\", \"is_va_loan\": \"NoneType\", \"is_fixed\": \"bool\"}, \"rate\": \"float\", \"_list_length\": 8}]}}}}}", "metadata": {}}
{"_id": "1043", "title": "", "text": "category_name:Finance, tool_name:Investing - Cryptocurrency Markets, api_name:coins/get-fullsize-chart, api_description:Get fullsize chart of specific cryptocurrency, required_params: [{\"name\": \"pair_ID\", \"type\": \"NUMBER\", \"description\": \"Value of pair&#95;id field returned in coins/list, coins/search, coins/list-pairs, etc...\"}], optional_params: [], return_schema: {\"pair_data\": {}, \"quotes_data\": {\"interval_node\": [{\"start_timestamp\": \"str\", \"open\": \"str\", \"close\": \"str\", \"min\": \"str\", \"max\": \"str\", \"volume\": \"str\", \"_list_length\": 165}]}}", "metadata": {}}
{"_id": "1044", "title": "", "text": "category_name:Media, tool_name:Giphy, api_name:STICKER Trending, api_description:Get the latest stickers trending on Giphy with this endpoint., required_params: [{\"name\": \"s\", \"type\": \"STRING\", \"description\": \"term or phrase to translate into a GIF\"}], optional_params: [], return_schema: {\"data\": \"empty list\", \"meta\": {\"status\": \"int\", \"msg\": \"str\", \"response_id\": \"str\"}}", "metadata": {}}
{"_id": "1045", "title": "", "text": "category_name:Weather, tool_name:History, api_name:hourlyWeather, api_description:This endpoint returns the historical weather on hourly level for a given day for a given location (latitude and longitude), required_params: [{\"name\": \"lat\", \"type\": \"STRING\", \"description\": \"The latitude in decimal format of the requested point\"}, {\"name\": \"parameters\", \"type\": \"STRING\", \"description\": \"Define the parameter, you wish to request. Allowed options are \\\\\\\"all\\\\\\\", \\\\\\\"air_quality\\\\\\\", \\\\\\\"anomaly\\\\\\\", \\\\\\\"astronomy\\\\\\\", \\\\\\\"weather\\\\\\\", \\\\\\\"signal\\\\\\\", \\\\\\\"pollen\\\\\\\"\"}, {\"name\": \"day\", \"type\": \"STRING\", \"description\": \"The requested day in the format \\\\\\\"YYYYmmdd\\\\\\\"\"}, {\"name\": \"lng\", \"type\": \"STRING\", \"description\": \"The longitude in decimal format of the requested point\"}], optional_params: [], return_schema: {\"astronomy\": {\"max_sunshine\": \"float\", \"sunrise\": \"str\", \"sunset\": \"str\"}, \"location\": {\"date\": \"str\", \"height\": \"int\", \"latitude\": \"float\", \"longitude\": \"float\"}, \"meta\": {\"additional_info\": \"NoneType\", \"errors\": \"NoneType\"}, \"weather\": [{\"air_pressure\": \"float\", \"air_temp_anomaly\": \"NoneType\", \"air_temp_long_time_avg\": \"NoneType\", \"air_temp_mean\": \"float\", \"cloud_cover\": \"float\", \"dew_point\": \"float\", \"evaporation_pressure\": \"float\", \"precipitation\": \"float\", \"precipitation_form\": \"int\", \"relative_humidity\": \"float\", \"snowfall\": \"float\", \"solar_radiation\": \"NoneType\", \"sunshine\": \"float\", \"time\": \"str\", \"weather_state\": \"NoneType\", \"wind_avg\": \"float\", \"wind_direction\": \"float\", \"wind_peak\": \"float\", \"windchill\": \"float\", \"_list_length\": 24}]}", "metadata": {}}
{"_id": "1046", "title": "", "text": "category_name:Weather, tool_name:Forecast, api_name:RapidApiGetObservationHistoryByCoordinates, api_description:Get an Observation object with historical information., required_params: [{\"name\": \"longitude\", \"type\": \"NUMBER\", \"description\": \"Longitude\"}, {\"name\": \"latitude\", \"type\": \"NUMBER\", \"description\": \"Latitude\"}], optional_params: [], return_schema: {\"id\": \"str\", \"name\": \"str\", \"type\": \"str\", \"distance\": \"int\", \"coordinates\": {\"latitude\": \"float\", \"longitude\": \"float\", \"elevation\": \"NoneType\"}, \"history\": [{\"summary\": \"NoneType\", \"details\": [{\"date\": \"str\", \"temperature\": {\"unit\": \"str\", \"avg\": \"float\", \"min\": \"NoneType\", \"max\": \"NoneType\"}, \"wind\": {\"unit\": \"str\", \"direction\": \"NoneType\", \"text\": \"NoneType\", \"avg\": \"float\", \"min\": \"NoneType\", \"max\": \"NoneType\", \"gusts\": {\"value\": \"NoneType\", \"text\": \"NoneType\"}, \"significationWind\": \"bool\"}, \"pressure\": \"NoneType\", \"_list_length\": 10}], \"_list_length\": 1}]}", "metadata": {}}
{"_id": "1047", "title": "", "text": "category_name:Weather, tool_name:WeatherAPI.com, api_name:Search/Autocomplete API, api_description:Search or Autocomplete API returns matching cities and towns., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Query parameter based on which data is sent back. It could be following:\\n\\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\\ncity name e.g.: q=Paris\\nUS zip e.g.: q=10001\\nUK postcode e.g: q=SW1\\nCanada postal code e.g: q=G2J\\nmetar:<metar code> e.g: q=metar:EGLL\\niata:<3 digit airport code> e.g: q=iata:DXB\\nauto:ip IP lookup e.g: q=auto:ip\\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1\"}], optional_params: [], return_schema: {\"error\": {\"code\": \"int\", \"message\": \"str\"}}", "metadata": {}}
{"_id": "1048", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Countries, api_description:Find countries, filtering by optional criteria. If no criteria are set, you will get back all known countries., required_params: [], optional_params: [], return_schema: {\"data\": [{\"code\": \"str\", \"currencyCodes\": [\"list of str with length 1\"], \"name\": \"str\", \"wikiDataId\": \"str\", \"_list_length\": 5}], \"links\": [{\"rel\": \"str\", \"href\": \"str\", \"_list_length\": 3}], \"metadata\": {\"currentOffset\": \"int\", \"totalCount\": \"int\"}}", "metadata": {}}
{"_id": "1049", "title": "", "text": "category_name:Travel, tool_name:webcams.travel, api_name:/webcams/list/webcam={webcamid}[,{webcamid}[,...]], api_description:This is a modifier. Returns a list of webcams according to the listed {webcamid}s. Multiple {webcamid}s must be separated by comma. Required: at least one {webcamid}., required_params: [{\"name\": \"webcamid\", \"type\": \"STRING\", \"description\": \"Comma separated list of webcamids that are in the initial list. If this modifier ist not applied, all available webcams will be in the initial list.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1050", "title": "", "text": "category_name:Sports, tool_name:Football Prediction, api_name:List available federations, api_description:Returns an array of all the available federations., required_params: [], optional_params: [], return_schema: {\"data\": [\"list of str with length 6\"]}", "metadata": {}}
{"_id": "1051", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Country Region Cities, api_description:Get the cities in the given region., required_params: [{\"name\": \"countryid\", \"type\": \"STRING\", \"description\": \"An ISO-3166 country code or WikiData id\"}, {\"name\": \"regioncode\", \"type\": \"STRING\", \"description\": \"An ISO-3166 or FIPS region code\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1052", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Place Located In, api_description:Get the details for the containing populated place (e.g., its county or other administrative division), including location coordinates, population, and elevation above sea-level  (if available). \n\nCurrently, this data is highly dependent on whether the Wikidata **locatedIn** relation is properly defined. If you see an issue, please propose a change to the corresponding Wikidata entry., required_params: [{\"name\": \"placeId\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1053", "title": "", "text": "category_name:Data, tool_name:Local Business Data, api_name:Search In Area, api_description:Search businesses in a specific geographic area defined by a center coordinate point and zoom level. To see it in action, make a query on Google Maps, wait for the results to show, move the map or change the zoom and click \"Search this area\" at the top., required_params: [{\"name\": \"lat\", \"type\": \"STRING\", \"description\": \"Latitude of the center coordinate point of the area to search in.\"}, {\"name\": \"zoom\", \"type\": \"STRING\", \"description\": \"Zoom level on which to make the search (the search area / viewport is determined by lat, lng and zoom on a 1000x1000 screen).\"}, {\"name\": \"query\", \"type\": \"STRING\", \"description\": \"Search query / keyword.\\n\\n**e.g.** `Bars and pubs`\\n**e.g.** `Plumbers`\"}, {\"name\": \"lng\", \"type\": \"STRING\", \"description\": \"Longitude of the center coordinate point of the area to search in.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1054", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Search, api_description:Search, required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Search query\"}, {\"name\": \"type\", \"type\": \"STRING\", \"description\": \"`multi` or one of these:\\n\\n- albums\\n- artists\\n- episodes\\n- genres\\n- playlists\\n- podcasts\\n- tracks\\n- users\"}], optional_params: [], return_schema: {\"albums\": {\"totalCount\": \"int\", \"items\": \"empty list\"}, \"artists\": {\"totalCount\": \"int\", \"items\": \"empty list\"}, \"episodes\": {\"totalCount\": \"int\", \"items\": \"empty list\"}, \"genres\": {\"totalCount\": \"int\", \"items\": \"empty list\"}, \"playlists\": {\"totalCount\": \"int\", \"items\": \"empty list\"}, \"podcasts\": {\"totalCount\": \"int\", \"items\": \"empty list\"}, \"topResults\": {\"items\": \"empty list\", \"featured\": \"empty list\"}, \"tracks\": {\"totalCount\": \"int\", \"items\": \"empty list\"}, \"users\": {\"totalCount\": \"int\", \"items\": \"empty list\"}}", "metadata": {}}
{"_id": "1055", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Get playlist, api_description:Get playlist, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Playlist ID\"}], optional_params: [], return_schema: {\"collaborative\": \"bool\", \"description\": \"str\", \"followers\": {\"total\": \"int\"}, \"images\": [{\"height\": \"NoneType\", \"url\": \"str\", \"width\": \"NoneType\", \"_list_length\": 1}], \"name\": \"str\", \"owner\": {\"display_name\": \"str\", \"id\": \"str\", \"uri\": \"str\"}, \"public\": \"bool\", \"tracks\": {\"items\": [{\"track\": {\"duration_ms\": \"int\", \"type\": \"str\"}, \"_list_length\": 75}], \"total\": \"int\"}, \"uri\": \"str\"}", "metadata": {}}
{"_id": "1056", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Auto complete, api_description:Gets airport and city ids for the air product related to words in passed string., required_params: [{\"name\": \"string\", \"type\": \"STRING\", \"description\": \"Search keyword. Airport or City being searched.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1057", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Express Contract, api_description:Provides the hotel inventory and corresponding rates for Express (cache) or Closed User Group (live) , required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1058", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Download airports, api_description:Downloads a list of airports with IATA codes for Flight search, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1059", "title": "", "text": "category_name:Sports, tool_name:Horse Racing, api_name:Race detail info, api_description:**Get racecard detailed info** and **Odds comparator**\nHorses, Jockeys, Trainers, Form, OR, Owner, Sire, Dam, Age, Weight and more information., required_params: [{\"name\": \"id_race\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"id_race\": \"str\", \"course\": \"str\", \"date\": \"str\", \"title\": \"str\", \"distance\": \"str\", \"age\": \"str\", \"going\": \"str\", \"finished\": \"str\", \"canceled\": \"str\", \"finish_time\": \"str\", \"prize\": \"str\", \"class\": \"str\", \"horses\": [{\"horse\": \"str\", \"id_horse\": \"str\", \"jockey\": \"str\", \"trainer\": \"str\", \"age\": \"str\", \"weight\": \"str\", \"number\": \"str\", \"last_ran_days_ago\": \"str\", \"non_runner\": \"str\", \"form\": \"str\", \"position\": \"str\", \"distance_beaten\": \"str\", \"owner\": \"str\", \"sire\": \"str\", \"dam\": \"str\", \"OR\": \"str\", \"sp\": \"str\", \"odds\": \"empty list\", \"_list_length\": 11}]}", "metadata": {}}
{"_id": "1060", "title": "", "text": "category_name:Sports, tool_name:Horse Racing, api_name:Query horses, api_description:Search horses by name. \nOnce you get \"*id_horse*\" from this query, you can get horses stats from \"**Horse stats**\" endpoint., required_params: [{\"name\": \"name\", \"type\": \"STRING\", \"description\": \"Minimum 3 characters\"}], optional_params: [], return_schema: {\"id_horse\": \"str\", \"horse\": \"str\"}", "metadata": {}}
{"_id": "1061", "title": "", "text": "category_name:Mapping, tool_name:Places, api_name:Autosuggest, api_description:Method returns suggestions for search term closest to the selected point optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format., required_params: [{\"name\": \"name\", \"type\": \"STRING\", \"description\": \"The query term on which to search.\"}, {\"name\": \"lon\", \"type\": \"NUMBER\", \"description\": \"Longitude of selected point\"}, {\"name\": \"radius\", \"type\": \"NUMBER\", \"description\": \"Maximum distance from selected point in meters\"}, {\"name\": \"lang\", \"type\": \"ENUM\", \"description\": \"Language code (2 characters, ISO639-1). The following values are available: en (english), ru (russian)\"}, {\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"Latitude of selected point\"}], optional_params: [], return_schema: {\"error\": \"str\"}", "metadata": {}}
{"_id": "1062", "title": "", "text": "category_name:Data, tool_name:Open Brewery DB, api_name:Autocomplete, api_description:, required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"Autocomplete a query\"}], optional_params: [], return_schema: {\"id\": \"str\", \"name\": \"str\"}", "metadata": {}}
{"_id": "1063", "title": "", "text": "category_name:Mapping, tool_name:Places, api_name:Places list by radius (Nearby Search) , api_description:Method returns objects closest to the selected point optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format., required_params: [{\"name\": \"lang\", \"type\": \"ENUM\", \"description\": \"Language code (2 characters, ISO639-1). The following values are available: en (english), ru (russian)\"}, {\"name\": \"radius\", \"type\": \"NUMBER\", \"description\": \"Maximum distance from selected point in meters\"}, {\"name\": \"lon\", \"type\": \"NUMBER\", \"description\": \"Longitude of selected point\"}, {\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"Latitude of selected point\"}], optional_params: [], return_schema: {\"error\": \"str\"}", "metadata": {}}
{"_id": "1064", "title": "", "text": "category_name:Sports, tool_name:Horse Racing, api_name:Racecards, api_description:Get races list., required_params: [], optional_params: [], return_schema: {\"id_race\": \"str\", \"course\": \"str\", \"date\": \"str\", \"title\": \"str\", \"distance\": \"str\", \"age\": \"str\", \"going\": \"str\", \"finished\": \"str\", \"canceled\": \"str\", \"finish_time\": \"str\", \"prize\": \"str\", \"class\": \"str\"}", "metadata": {}}
{"_id": "1065", "title": "", "text": "category_name:Medical, tool_name:23andMe, api_name:genomes, api_description:Returns the entire profile's genome as a packed string of base pairs \"AACTGA...\". This ~2MB request returns over a million SNP locations, so you must specify profile_id. If the profile has not yet unlocked certain SNPs, they'll be replaced with __. To know which SNP corresponds to which index in the string, see this key.  When our genotyping chip is upgraded, the packed string and corresponding key will grow, but the changes will be backwards-compatible additions., required_params: [{\"name\": \"profile_id\", \"type\": \"STRING\", \"description\": \"profile_id\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1066", "title": "", "text": "category_name:Movies, tool_name:Streaming Availability, api_name:Search Pro, api_description:Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country., required_params: [{\"name\": \"country\", \"type\": \"STRING\", \"description\": \"2 letter ISO 3166-1 alpha-2 country code of the country to search in. See the about page to check the supported countries.\"}, {\"name\": \"services\", \"type\": \"STRING\", \"description\": \"A comma separated list of up to 8 services to search in. See `/v2/services` endpoint to get the supported services and their ids/names.\\n\\nSyntax of the values supplied in the list can be as the followings:\\n\\n`<sevice_id>`: Searches in the entire catalog of that service, including (if applicable) rentable, buyable shows or shows available through addons i.e. `netflix`, `prime`, `apple`\\n\\n`<sevice_id>.<offer_type>`: Only returns the shows that are available in that service with the given offer type. Valid offer type values are `subscription`, `free`, `rent`, `buy` and `addon`  i.e. `peacock.free` only returns the shows on Peacock that are free to watch, `prime.subscription` only returns the shows on Prime Video that are available to watch with a Prime subscription. `hulu.addon` only returns the shows on Hulu that are available via an addon,  `prime.rent` only returns the shows on Prime Video that are rentable.\\n\\n`<sevice_id>.addon.<addon_id>`: Only returns the shows that are available in that service with the given addon. Check `/v2/services` endpoint to fetch the available addons for a service. Some sample values are: `hulu.addon.hbo`,  `prime.addon.hbomaxus`.\\n\\nIf a service supports both `free` and `subscription`, then results included under `subscription` will always include the `free` shows as well.\\n\\nWhen multiple values are passed as a comma separated list, any show that satisfies at least one of the values will be included in the result.\\n\\nSome sample list values:\\n\\n`prime.rent,prime.buy,apple.rent,apple.buy`: Returns all the buyable/rentable shows on Amazon Prime Video and Apple TV.\\n\\n`prime.addon,prime.subscription`: Returns all the shows on Amazon Prime Video that are available through either a Prime Video subscription or a Prime Video Channel subscription.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1067", "title": "", "text": "category_name:Finance, tool_name:Alpaca Trading, api_name:Get the account, api_description:Returns the account associated with the API key, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1068", "title": "", "text": "category_name:Finance, tool_name:Alpaca Trading, api_name:Get an order, api_description:etrieves a single of order for the given order_id., required_params: [{\"name\": \"order_id\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1069", "title": "", "text": "category_name:Finance, tool_name:Coinbase, api_name:Show supported currencies, api_description:Show currencies supported by Coinbase., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1070", "title": "", "text": "category_name:Transportation, tool_name:Car API, api_name:Exterior Colors, api_description:To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n[{\"field\": \"name\", \"op\": \"in\", \"val\": [\"red\", \"blue\"]}]\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, name, rgb, make_id, make_model_id, and make_model_trim_i, required_params: [], optional_params: [], return_schema: {\"exception\": \"str\", \"message\": \"str\", \"url\": \"str\", \"code\": \"int\"}", "metadata": {}}
{"_id": "1071", "title": "", "text": "category_name:Transportation, tool_name:Car API, api_name:Models, api_description:Search models by year, make, model, trim or make_id.\n\nTo include the models make in the description request with the query parameter as `verbose=yes`.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"make\", \"op\": \"in\", \"val\": [\"Ford\", \"Acura\"]}, {\"field\": \"year\", \"op\": \">=\", \"val\": 2010}]\n\nAllowed json operators are: =, !=, >, <, >=, <=, in, not in, like, not like, not null, and is null.\n\nAllowed json search fields are: year, make, model, make_id, created, and modified., required_params: [], optional_params: [], return_schema: {\"exception\": \"str\", \"message\": \"str\", \"url\": \"str\", \"code\": \"int\"}", "metadata": {}}
{"_id": "1072", "title": "", "text": "category_name:Transportation, tool_name:Car API, api_name:Vehicle Attributes, api_description:Returns all options for given attribute., required_params: [], optional_params: [], return_schema: {}", "metadata": {}}
{"_id": "1073", "title": "", "text": "category_name:Data, tool_name:Simple Salvage Vin Check, api_name:salvagecheck, api_description:Returns true if the VIN was in a salvage database in the past. False otherwise. Must be a valid 17 digit vin from North America., required_params: [{\"name\": \"vin\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1074", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:New Titles, api_description:Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title., required_params: [], optional_params: [], return_schema: {\"success\": \"bool\", \"statusCode\": \"int\", \"statusMessage\": \"str\"}", "metadata": {}}
{"_id": "1075", "title": "", "text": "category_name:Movies, tool_name:OTT details, api_name:Title Details, api_description:Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc., required_params: [{\"name\": \"imdbid\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"imageurl\": [\"list of str with length 1\"], \"genre\": [\"list of str with length 1\"], \"imdbid\": \"str\", \"title\": \"str\", \"runtime\": \"str\", \"imdbrating\": \"float\", \"released\": \"int\", \"synopsis\": \"str\", \"type\": \"str\", \"language\": [\"list of str with length 4\"], \"streamingAvailability\": {\"country\": {\"US\": [{\"url\": \"str\", \"platform\": \"str\", \"_list_length\": 9}]}}}", "metadata": {}}
{"_id": "1076", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:Title Cast & Crew, api_description:Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\\n\\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. \"}], optional_params: [], return_schema: {\"person_id\": \"int\", \"type\": \"str\", \"full_name\": \"str\", \"headshot_url\": \"str\", \"role\": \"str\", \"episode_count\": \"int\", \"order\": \"NoneType\"}", "metadata": {}}
{"_id": "1077", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:Networks, api_description:Return a listing of all TV networks that may be returned for a title in the /title endpoint., required_params: [], optional_params: [], return_schema: {\"id\": \"int\", \"name\": \"str\", \"origin_country\": \"str\", \"tmdb_id\": \"int\"}", "metadata": {}}
{"_id": "1078", "title": "", "text": "category_name:Education, tool_name:Helioviewer v1, api_name:getJPX, api_description:Generate and (optionally) download a custom JPX movie of the specified datasource.\n\n        Either `sourceId` must be specified, or the combination of `observatory`, `instrument`, `detector`, and `measurement`., required_params: [{\"name\": \"startTime\", \"type\": \"STRING\", \"description\": \"Date/Time for the beginning of the JPX movie data. ISO 8601 combined UTC date and time UTC format.\"}, {\"name\": \"endTime\", \"type\": \"STRING\", \"description\": \"Date/Time for the end of the JPX movie data.  ISO 8601 combined UTC date and time UTC format.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1079", "title": "", "text": "category_name:Education, tool_name:Helioviewer v1, api_name:shortenURL, api_description:Shorten a Helioviewer.org URL with the bit.ly URL shortening web service., required_params: [{\"name\": \"queryString\", \"type\": \"STRING\", \"description\": \"URL-encoded query string.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1080", "title": "", "text": "category_name:Education, tool_name:Helioviewer v1, api_name:checkYouTubeAuth, api_description:Check to see if Helioveiwer.org is authorized to interact with a user's YouTube account via the current browser session., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1081", "title": "", "text": "category_name:Travel, tool_name:British Airways Flight Info, api_name:Search today's departures by time, api_description:, required_params: [{\"name\": \"departurelocation-starttime-starttime-endtime-endtime\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"departureLocation\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"startTime\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"endTime\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1082", "title": "", "text": "category_name:Transportation, tool_name:TimeTable Lookup , api_name:airlines - Airports in a country an airline operates in, api_description:Return a list of airports in a country an airline operates in, required_params: [{\"name\": \"countryiatacode\", \"type\": \"string\", \"description\": \"Country IATA code\"}, {\"name\": \"airlineiatacode\", \"type\": \"string\", \"description\": \"Airline IATA code\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1083", "title": "", "text": "category_name:Weather, tool_name:Ambee Air Quality, api_name:By Coordinates, api_description:Get nearest places readings based around the given latitude and longitude, required_params: [{\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"Specifies latitude\"}, {\"name\": \"lng\", \"type\": \"NUMBER\", \"description\": \"Specifies longitude\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1084", "title": "", "text": "category_name:Weather, tool_name:Ambee Air Quality, api_name:By Postal Code, api_description:Check air quality for your postal code, required_params: [{\"name\": \"postalCode\", \"type\": \"NUMBER\", \"description\": \"Postal code to display the air quality for\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1085", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Download airports, api_description:Downloads a list of Airports, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1086", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:getGasPrice, api_description:Returns the current gas price in GWEI., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "1087", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:clearAddress, api_description:Sends all available ethereum funds of an address to a specified receiver address., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "1088", "title": "", "text": "category_name:Finance, tool_name:Trading View, api_name:ideas/detail, api_description:Get detailed ideal post, required_params: [{\"name\": \"uuid\", \"type\": \"STRING\", \"description\": \"The value of image_url field returned in .../ideas/list endpoint\"}], optional_params: [], return_schema: \"{\\\"id\\\": \\\"int\\\", \\\"uuid\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\", \\\"description_ast\\\": {\\\"type\\\": \\\"str\\\", \\\"children\\\": [{\\\"type\\\": \\\"str\\\", \\\"children\\\": [\\\"list of str with length 1\\\"], \\\"_list_length\\\": 4}]}, \\\"created_at\\\": \\\"str\\\", \\\"chart_url\\\": \\\"str\\\", \\\"created_timestamp\\\": \\\"float\\\", \\\"last_updated_timestamp\\\": \\\"NoneType\\\", \\\"access\\\": \\\"NoneType\\\", \\\"like_score\\\": \\\"int\\\", \\\"is_active\\\": \\\"bool\\\", \\\"is_visible\\\": \\\"bool\\\", \\\"is_education\\\": \\\"bool\\\", \\\"is_public\\\": \\\"bool\\\", \\\"interval\\\": \\\"str\\\", \\\"direction\\\": \\\"int\\\", \\\"user_flags\\\": {\\\"favored\\\": \\\"bool\\\", \\\"viewed\\\": \\\"bool\\\", \\\"voted\\\": \\\"bool\\\"}, \\\"views\\\": \\\"int\\\", \\\"symbol\\\": {\\\"resolved_symbol\\\": \\\"str\\\", \\\"pro_symbol\\\": \\\"str\\\", \\\"exchange\\\": \\\"str\\\", \\\"exchange_for_display\\\": \\\"str\\\", \\\"short_name\\\": \\\"str\\\", \\\"instrument_name\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\", \\\"short_description\\\": \\\"str\\\", \\\"local_description\\\": \\\"str\\\", \\\"language\\\": \\\"str\\\", \\\"country\\\": \\\"str\\\", \\\"provider_id\\\": \\\"str\\\", \\\"flag\\\": \\\"str\\\", \\\"has_fundamentals\\\": \\\"bool\\\", \\\"is_spread\\\": \\\"bool\\\", \\\"typespecs\\\": [\\\"list of str with length 1\\\"], \\\"root\\\": \\\"NoneType\\\", \\\"type\\\": \\\"str\\\", \\\"href\"", "metadata": {}}
{"_id": "1089", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get DigiByte Balance, api_description:This endpoint will return back the DigiByte balance of an address, required_params: [{\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1090", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:getBlock, api_description:Returns information of an ethereum block with or without transactions, required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "1091", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Aave Balance From Specific Network, api_description:This endpoint will return back the Aave balance of an address in a specific network., required_params: [{\"name\": \"network\", \"type\": \"string\", \"description\": \"network can take the value : \\n- eth\"}, {\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1092", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:Autocomplete Search, api_description:Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url., required_params: [{\"name\": \"search_value\", \"type\": \"STRING\", \"description\": \"The phrase to search for, can be a full title or person name, or a partial phrase. For example searching for \\\\\\\"The sha\\\\\\\" will find the movie \\\\\\\"The Shawshank Redemption\\\\\\\".\"}], optional_params: [], return_schema: {\"results\": [{\"name\": \"str\", \"relevance\": \"float\", \"type\": \"str\", \"id\": \"int\", \"year\": \"int\", \"result_type\": \"str\", \"tmdb_id\": \"int\", \"tmdb_type\": \"str\", \"image_url\": \"str\", \"_list_length\": 9}]}", "metadata": {}}
{"_id": "1093", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:Sources, api_description:Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc)., required_params: [], optional_params: [], return_schema: {\"id\": \"int\", \"name\": \"str\", \"type\": \"str\", \"logo_100px\": \"str\", \"ios_appstore_url\": \"str\", \"android_playstore_url\": \"str\", \"android_scheme\": \"str\", \"ios_scheme\": \"str\", \"regions\": [\"list of str with length 51\"]}", "metadata": {}}
{"_id": "1094", "title": "", "text": "category_name:Movies, tool_name:OTT details, api_name:New Arrivals, api_description:Get the latest arrivals from different platforms ., required_params: [{\"name\": \"region\", \"type\": \"STRING\", \"description\": \"Use 'IN' for India and 'US' for USA , * currently we support only US and Indian region.\"}], optional_params: [], return_schema: {\"page\": \"int\", \"results\": \"empty list\"}", "metadata": {}}
{"_id": "1095", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Search (round-trip), api_description:Returns a contract for a flight round trip search through the getFlightRoundTrip endpoint, required_params: [{\"name\": \"sid\", \"type\": \"STRING\", \"description\": \"Session ID. Random string\"}, {\"name\": \"adults\", \"type\": \"NUMBER\", \"description\": \"Number of adults\"}, {\"name\": \"departure_date\", \"type\": \"STRING\", \"description\": \"Departure date\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1096", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Search (results request), api_description:The getResultsRequest endpoint returns car availability based on the provided search criteria, required_params: [{\"name\": \"dropoff_time\", \"type\": \"STRING\", \"description\": \"Car Drop Off Time (HH:mm:ss)\"}, {\"name\": \"pickup_date\", \"type\": \"STRING\", \"description\": \"Car Pick Up Date (YYYY-MM-DD or MM/DD/YYYY)\"}, {\"name\": \"dropoff_date\", \"type\": \"STRING\", \"description\": \"Car Drop Off Date (YYYY-MM-DD or MM/DD/YYYY).\"}, {\"name\": \"pickup_time\", \"type\": \"STRING\", \"description\": \"Car Pick Up Time (HH:mm:ss)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1097", "title": "", "text": "category_name:Food, tool_name:Yummly, api_name:feeds/auto-complete, api_description:Get auto complete suggestions by name or ingredients, etc..., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Food name or ingredient\"}], optional_params: [], return_schema: {\"ingredients\": [\"list of str with length 14\"], \"searches\": [\"list of str with length 10\"]}", "metadata": {}}
{"_id": "1098", "title": "", "text": "category_name:Tools, tool_name:Famous  Quotes, api_name:List Categories, api_description:List all available categories, required_params: [], optional_params: [], return_schema: {}", "metadata": {}}
{"_id": "1099", "title": "", "text": "category_name:Entertainment, tool_name:TVMaze, api_name:/schedule, api_description:Get the TV schedule, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1100", "title": "", "text": "category_name:Movies, tool_name:Streaming Availability, api_name:Genres (FREE), api_description:Get the id to name mapping of supported genres., required_params: [], optional_params: [], return_schema: {\"result\": {\"1\": \"str\", \"10402\": \"str\", \"10749\": \"str\", \"10751\": \"str\", \"10752\": \"str\", \"10763\": \"str\", \"10764\": \"str\", \"10767\": \"str\", \"12\": \"str\", \"14\": \"str\", \"16\": \"str\", \"18\": \"str\", \"2\": \"str\", \"27\": \"str\", \"28\": \"str\", \"3\": \"str\", \"35\": \"str\", \"36\": \"str\", \"37\": \"str\", \"4\": \"str\", \"5\": \"str\", \"53\": \"str\", \"6\": \"str\", \"7\": \"str\", \"80\": \"str\", \"878\": \"str\", \"9648\": \"str\", \"99\": \"str\"}}", "metadata": {}}
{"_id": "1101", "title": "", "text": "category_name:Finance, tool_name:BB Finance, api_name:news/list, api_description:List news by category, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"One of the following is allowed markets|technology|view|pursuits|politics|green|citylab|businessweek|fixed-income|hyperdrive|cryptocurrencies|wealth|latest|personalFinance|quickTake|world|industries|stocks|currencies|brexit\"}], optional_params: [], return_schema: {\"title\": \"str\", \"modules\": [{\"id\": \"str\", \"title\": \"NoneType\", \"skipDedup\": \"bool\", \"type\": \"str\", \"tracking\": {\"id\": \"str\", \"title\": \"str\"}, \"stories\": [{\"id\": \"str\", \"type\": \"str\", \"internalID\": \"str\", \"title\": \"str\", \"summary\": \"str\", \"autoGeneratedSummary\": \"str\", \"abstract\": [\"list of str with length 2\"], \"published\": \"int\", \"updatedAt\": \"int\", \"wordCount\": \"int\", \"premium\": \"bool\", \"secondaryBrands\": [\"list of str with length 1\"], \"byline\": \"str\", \"shortURL\": \"str\", \"longURL\": \"str\", \"primaryCategory\": \"str\", \"primarySite\": \"str\", \"eyebrowSite\": \"str\", \"readings\": \"empty list\", \"image\": \"str\", \"thumbnailImage\": \"str\", \"card\": \"str\", \"contentTags\": [{\"id\": \"str\", \"type\": \"str\", \"_list_length\": 51}], \"meta\": {\"newsletterToutLabel\": \"NoneType\", \"newsletterSlug\": \"NoneType\"}, \"_list_length\": 1}], \"_list_length\": 21}]}", "metadata": {}}
{"_id": "1102", "title": "", "text": "category_name:Finance, tool_name:BB Finance, api_name:market/get-movers, api_description:Get latest information of movers in the market, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of id field returned in .../market/auto-complete endpoint.\"}], optional_params: [], return_schema: \"{\\\"active\\\": [{\\\"securityType\\\": \\\"str\\\", \\\"symbol\\\": \\\"str\\\", \\\"exchange\\\": \\\"str\\\", \\\"country\\\": \\\"str\\\", \\\"currency\\\": \\\"str\\\", \\\"resourceType\\\": \\\"str\\\", \\\"fundamentalDataCurrency\\\": \\\"str\\\", \\\"resourceSubtype\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"ticker\\\": \\\"str\\\", \\\"tickerName\\\": \\\"str\\\", \\\"template\\\": \\\"str\\\", \\\"tinyName\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"watchlist\\\": \\\"bool\\\", \\\"resourceId\\\": \\\"str\\\", \\\"last\\\": \\\"str\\\", \\\"netChange\\\": \\\"str\\\", \\\"lastPriceTime\\\": \\\"int\\\", \\\"pctChange1M\\\": \\\"str\\\", \\\"yearHigh\\\": \\\"str\\\", \\\"dayHigh\\\": \\\"str\\\", \\\"volume\\\": \\\"float\\\", \\\"yearLow\\\": \\\"str\\\", \\\"dayLow\\\": \\\"str\\\", \\\"pctChangeYTD\\\": \\\"str\\\", \\\"lastPriceAllSessions\\\": \\\"str\\\", \\\"pctChange\\\": \\\"str\\\", \\\"_list_length\\\": 10}], \\\"laggards\\\": [{\\\"securityType\\\": \\\"str\\\", \\\"symbol\\\": \\\"str\\\", \\\"exchange\\\": \\\"str\\\", \\\"country\\\": \\\"str\\\", \\\"currency\\\": \\\"str\\\", \\\"resourceType\\\": \\\"str\\\", \\\"fundamentalDataCurrency\\\": \\\"str\\\", \\\"resourceSubtype\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"ticker\\\": \\\"str\\\", \\\"tickerName\\\": \\\"str\\\", \\\"template\\\": \\\"str\\\", \\\"tinyName\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"watchlist\\\": \\\"bool\\\", \\\"resourceId\\\": \\\"str\\\", \\\"last\\\": \\\"str\\\", \\\"netChange\\\": \\\"str\\\", \\\"lastPriceTi\"", "metadata": {}}
{"_id": "1103", "title": "", "text": "category_name:Finance, tool_name:BB Finance, api_name:market/get-price-chart, api_description:Get related data to draw price chart, required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"One of the followings : d1|d3|ytd|m1|m3|m6|y1|y5\"}, {\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of id field returned in .../market/auto-complete endpoint.\"}], optional_params: [], return_schema: {\"result\": {\"INMEX:IND\": {\"historical\": \"bool\", \"ticksType\": \"str\", \"ticks\": [{\"time\": \"int\", \"close\": \"float\", \"_list_length\": 253}], \"low\": \"str\", \"high\": \"str\", \"first\": \"int\", \"last\": \"int\", \"security\": {\"ticker\": \"str\", \"open\": \"str\", \"prevClose\": \"str\"}, \"hasVolume\": \"bool\"}}}", "metadata": {}}
{"_id": "1104", "title": "", "text": "category_name:Finance, tool_name:BB Finance, api_name:market/get-compact, api_description:Get most informative fields about indices, commodities, currencies, rates, etc..., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The value of id field returned in .../market/auto-complete endpoint, separated by comma to query multiple stickers at once.\"}], optional_params: [], return_schema: \"{\\\"result\\\": {\\\"ADSMI:IND\\\": {\\\"securityType\\\": \\\"str\\\", \\\"symbol\\\": \\\"str\\\", \\\"country\\\": \\\"str\\\", \\\"currency\\\": \\\"str\\\", \\\"resourceType\\\": \\\"str\\\", \\\"fundamentalDataCurrency\\\": \\\"str\\\", \\\"resourceSubtype\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"ticker\\\": \\\"str\\\", \\\"tickerName\\\": \\\"str\\\", \\\"template\\\": \\\"str\\\", \\\"tinyName\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"watchlist\\\": \\\"bool\\\", \\\"resourceId\\\": \\\"str\\\", \\\"eqtIndex\\\": \\\"bool\\\", \\\"last\\\": \\\"str\\\", \\\"netChange\\\": \\\"str\\\", \\\"lastPriceTime\\\": \\\"int\\\", \\\"pctChange1M\\\": \\\"str\\\", \\\"yearHigh\\\": \\\"str\\\", \\\"dayHigh\\\": \\\"str\\\", \\\"volume\\\": \\\"int\\\", \\\"yearLow\\\": \\\"str\\\", \\\"dayLow\\\": \\\"str\\\", \\\"pctChangeYTD\\\": \\\"str\\\", \\\"pctChange\\\": \\\"str\\\", \\\"isOpen\\\": \\\"bool\\\"}, \\\"AEX:IND\\\": {\\\"securityType\\\": \\\"str\\\", \\\"symbol\\\": \\\"str\\\", \\\"country\\\": \\\"str\\\", \\\"currency\\\": \\\"str\\\", \\\"resourceType\\\": \\\"str\\\", \\\"fundamentalDataCurrency\\\": \\\"str\\\", \\\"resourceSubtype\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"ticker\\\": \\\"str\\\", \\\"tickerName\\\": \\\"str\\\", \\\"template\\\": \\\"str\\\", \\\"tinyName\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"watchlist\\\": \\\"bool\\\", \\\"resourceId\\\": \\\"str\\\", \\\"eqtIndex\\\": \\\"bool\\\", \\\"last\\\": \\\"str\\\", \\\"netChange\\\": \\\"str\\\", \\\"lastPriceTime\\\": \\\"int\\\", \\\"pctChange1\"", "metadata": {}}
{"_id": "1105", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:STOCH, api_description:Stochastic Oscillator(STOCH) is used to decide if the price trend is strong., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1106", "title": "", "text": "category_name:Finance, tool_name:BB Finance, api_name:market/get-cross-currencies, api_description:Get exchange rate between currencies, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The currency code, separated by comma to query multiple currencies at once\"}], optional_params: [], return_schema: \"{\\\"result\\\": {\\\"MXNJPY:cur\\\": {\\\"baseName\\\": \\\"str\\\", \\\"securityType\\\": \\\"str\\\", \\\"symbol\\\": \\\"str\\\", \\\"country\\\": \\\"str\\\", \\\"currency\\\": \\\"str\\\", \\\"resourceType\\\": \\\"str\\\", \\\"resourceSubtype\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"ticker\\\": \\\"str\\\", \\\"tickerName\\\": \\\"str\\\", \\\"template\\\": \\\"str\\\", \\\"tinyName\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"watchlist\\\": \\\"bool\\\", \\\"resourceId\\\": \\\"str\\\", \\\"last\\\": \\\"str\\\", \\\"netChange\\\": \\\"str\\\", \\\"lastPriceTime\\\": \\\"int\\\", \\\"yearHigh\\\": \\\"str\\\", \\\"dayHigh\\\": \\\"str\\\", \\\"yearLow\\\": \\\"str\\\", \\\"sourceCurrency\\\": \\\"str\\\", \\\"dayLow\\\": \\\"str\\\", \\\"pctChange\\\": \\\"str\\\"}, \\\"JPYMXN:cur\\\": {\\\"baseName\\\": \\\"str\\\", \\\"securityType\\\": \\\"str\\\", \\\"symbol\\\": \\\"str\\\", \\\"country\\\": \\\"str\\\", \\\"currency\\\": \\\"str\\\", \\\"resourceType\\\": \\\"str\\\", \\\"resourceSubtype\\\": \\\"str\\\", \\\"region\\\": \\\"str\\\", \\\"ticker\\\": \\\"str\\\", \\\"tickerName\\\": \\\"str\\\", \\\"template\\\": \\\"str\\\", \\\"tinyName\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"watchlist\\\": \\\"bool\\\", \\\"resourceId\\\": \\\"str\\\", \\\"last\\\": \\\"str\\\", \\\"netChange\\\": \\\"str\\\", \\\"lastPriceTime\\\": \\\"int\\\", \\\"yearHigh\\\": \\\"str\\\", \\\"dayHigh\\\": \\\"str\\\", \\\"yearLow\\\": \\\"str\\\", \\\"sourceCurrency\\\": \\\"str\\\", \\\"dayLow\\\": \\\"str\\\", \\\"pctChange\\\": \\\"str\\\"}, \\\"MXNGBP:cur\\\": \"", "metadata": {}}
{"_id": "1107", "title": "", "text": "category_name:eCommerce, tool_name:Forever21, api_name:products/v2/list, api_description:List products by category, required_params: [{\"name\": \"category\", \"type\": \"STRING\", \"description\": \"The value of Category field returned in .../categories/v2/list endpoint\"}], optional_params: [], return_schema: \"{\\\"categoryName\\\": \\\"str\\\", \\\"CatalogProducts\\\": [{\\\"BackorderedQuantity\\\": \\\"int\\\", \\\"BaseCatalogName\\\": \\\"NoneType\\\", \\\"Brand\\\": \\\"str\\\", \\\"BrandCode\\\": \\\"NoneType\\\", \\\"CatalogLangOId\\\": \\\"NoneType\\\", \\\"CatalogLangTimestamp\\\": \\\"NoneType\\\", \\\"CatalogName\\\": \\\"NoneType\\\", \\\"CatalogProductType\\\": \\\"NoneType\\\", \\\"CatalogRowNum\\\": \\\"int\\\", \\\"CategoryName\\\": \\\"str\\\", \\\"ClassType\\\": \\\"str\\\", \\\"ComingSoon\\\": \\\"bool\\\", \\\"CustomerNote\\\": \\\"NoneType\\\", \\\"DataInfomation\\\": \\\"NoneType\\\", \\\"DefinitionName\\\": \\\"NoneType\\\", \\\"Description\\\": \\\"str\\\", \\\"DescriptionOfDeal\\\": \\\"NoneType\\\", \\\"DisplayName\\\": \\\"str\\\", \\\"DynamicCategoryWhereClause\\\": \\\"NoneType\\\", \\\"ExpiryDate\\\": \\\"NoneType\\\", \\\"ExportReady\\\": \\\"NoneType\\\", \\\"FilterOption\\\": \\\"NoneType\\\", \\\"FinalSale\\\": \\\"bool\\\", \\\"FreeShippingDescription\\\": \\\"NoneType\\\", \\\"GiftCardPrice\\\": \\\"NoneType\\\", \\\"GiftCardType\\\": \\\"NoneType\\\", \\\"HasSizeCodeOfUS\\\": \\\"NoneType\\\", \\\"HideColorSwatch\\\": \\\"NoneType\\\", \\\"ImageFilename\\\": \\\"str\\\", \\\"Inserted\\\": \\\"NoneType\\\", \\\"IntroductionDate\\\": \\\"str\\\", \\\"InventoryCondition\\\": \\\"NoneType\\\", \\\"IsAvailableStudentDeal\\\": \\\"bool\\\", \\\"IsOOS\\\": \\\"NoneType\\\", \\\"IsRet\"", "metadata": {}}
{"_id": "1108", "title": "", "text": "category_name:eCommerce, tool_name:Forever21, api_name:products/list (Deprecated), api_description:List products by category, required_params: [{\"name\": \"page\", \"type\": \"STRING\", \"description\": \"The page number to display data\"}, {\"name\": \"pagesize\", \"type\": \"STRING\", \"description\": \"The records return in each page\"}, {\"name\": \"category\", \"type\": \"STRING\", \"description\": \"Look for values from /categories/list\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1109", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Time-Zone Time, api_description:Get the time-zone current time in ISO-6801 format: HHmmss.SSSZ, required_params: [{\"name\": \"zoneid\", \"type\": \"STRING\", \"description\": \"The time-zone id\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1110", "title": "", "text": "category_name:eCommerce, tool_name:Asos, api_name:products/v3/list-similarities, api_description:List similar products by product id, required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"The value of id field that returned in .../products/v2/list\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1111", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/performance/get-trailing-returns, api_description:Get trailing returns in the Performance  tab related to an ETF or FUND, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1112", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-trading-information, api_description:Get Trading Information in the Quote tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1113", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:AROON, api_description:Aroon Indicator(AROON) is used to identify if the price is trending. It can also spot the beginning of a new trend and its strength., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1114", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:MAMA, api_description:MESA Adaptive Moving Average(MAMA) adapts to price fluctuations based on the rate of change of the Hilbert Transform Discriminator. More about MAMA can be read [here](http://www.mesasoftware.com/papers/MAMA.pdf)., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1115", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/risk/get-risk-return-summary, api_description:Get summary of risk return in the Risk tab, required_params: [{\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}, {\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1116", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:LINEARREGSLOPE, api_description:Linear Regression Slope(LINEARREGSLOPE) calculates the slope for the linear regression trendline for each data point., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1117", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/get-histories, api_description:Get stock, market histories, required_params: [{\"name\": \"PerformanceId\", \"type\": \"STRING\", \"description\": \"Value of PerformanceId field from /market/auto-complete and /market/get-summary APIs\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1118", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Balance Sheet, api_description:Returns complete balance sheet of a company showing the summary of assets, liabilities, and shareholders’ equity.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1119", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:HT_DCPERIOD, api_description:Hilbert Transform Dominant Cycle Period(HT_DCPERIOD) is part of Hilbert Transforms concepts. You can read more about it in the Rocket Science for Traders book by John F. Ehlers., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1120", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:ROCP, api_description:Rate of change percentage(ROCP) calculates the rate of change in % between the current price and price n timeperiods ago. Formula: (price - prevPrice) / prevPrice., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1121", "title": "", "text": "category_name:Communication, tool_name:31Events - Send Native Calendar Invites, api_name:AccountList, api_description:, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1122", "title": "", "text": "category_name:Tools, tool_name:ViewDNS, api_name:Traceroute, api_description:Determines the series of servers that data traverses from the ViewDNS server to the specified domain name or IP address., required_params: [{\"name\": \"domain\", \"type\": \"STRING\", \"description\": \"the domain or IP address to perform a traceroute on\"}, {\"name\": \"output\", \"type\": \"STRING\", \"description\": \"the output format required ('xml' or 'json')\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1123", "title": "", "text": "category_name:Tools, tool_name:ViewDNS, api_name:MAC Address Lookup, api_description:This tool will display the name of the company that manufactured a specific network device based on its MAC Address., required_params: [{\"name\": \"mac\", \"type\": \"STRING\", \"description\": \"the MAC address to lookup\"}, {\"name\": \"output\", \"type\": \"STRING\", \"description\": \"the output format required ('xml' or 'json')\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1124", "title": "", "text": "category_name:Devices, tool_name:Geolocation Simulation For Mobile Apps, api_name:List Applications, api_description:List all your applications, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1125", "title": "", "text": "category_name:Devices, tool_name:Geolocation Simulation For Mobile Apps, api_name:View Layer, api_description:Enter layerID in route, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1126", "title": "", "text": "category_name:Devices, tool_name:Geolocation Simulation For Mobile Apps, api_name:View Application, api_description:Enter your applicationID in the route, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1127", "title": "", "text": "category_name:Mapping, tool_name:ca.boundaries.io, api_name:Query for City names by province/territory name, api_description:Query for City names by province/territory name, required_params: [{\"name\": \"province\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"names\": [\"list of str with length 424\"], \"province\": \"str\", \"count\": \"int\"}", "metadata": {}}
{"_id": "1128", "title": "", "text": "category_name:Mapping, tool_name:ca.boundaries.io, api_name:Query for All Province / Territory names, api_description:Query for All Province / Territory names, required_params: [], optional_params: [], return_schema: {\"names\": [\"list of str with length 13\"], \"count\": \"int\"}", "metadata": {}}
{"_id": "1129", "title": "", "text": "category_name:Mapping, tool_name:ca.boundaries.io, api_name:Query by FSA Code, api_description:Query by Postal FSA ( example T6H ), required_params: [{\"name\": \"postal-fsa\", \"type\": \"STRING\", \"description\": \"Query by value postal code FSA, example: \\\\\\\"A0A\\\\\\\"\"}], optional_params: [], return_schema: {\"type\": \"str\", \"features\": [{\"type\": \"str\", \"properties\": {\"postal-fsa\": \"str\", \"territory\": \"str\"}, \"geometry\": {\"type\": \"str\", \"coordinates\": [\"list of list with length 1\"]}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "1130", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Pop Songs Artists, api_description:Provide the Greatest of All Time Pop Songs Artists chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1131", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:South Korea Songs, api_description:Provide the South Korea Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "1132", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Iceland Songs, api_description:Provide the Iceland Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "1133", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Malaysia Songs, api_description:Provide the Malaysia Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "1134", "title": "", "text": "category_name:Education, tool_name:Learn to read and write Japanese kanji, api_name:Study list (Macquarie), api_description:The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required., required_params: [{\"name\": \"list\", \"type\": \"STRING\", \"description\": \"Kanji divided into chapters (12-22)\"}], optional_params: [], return_schema: {\"kanji\": {\"character\": \"str\", \"stroke\": \"int\"}, \"radical\": {\"character\": \"str\", \"stroke\": \"int\", \"order\": \"int\"}}", "metadata": {}}
{"_id": "1135", "title": "", "text": "category_name:Education, tool_name:Learn to read and write Japanese kanji, api_name:Radical Japanese name, api_description:The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required., required_params: [{\"name\": \"rjn\", \"type\": \"STRING\", \"description\": \"Hiragana or romaji\"}], optional_params: [], return_schema: {\"kanji\": {\"character\": \"str\", \"stroke\": \"int\"}, \"radical\": {\"character\": \"str\", \"stroke\": \"int\", \"order\": \"int\"}}", "metadata": {}}
{"_id": "1136", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Askfm, api_description:Check username on Ask.fm, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1137", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Minecraft, api_description:Check username on Minecraft, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1138", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Dribbble, api_description:Check username on dribble, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"username\": \"str\", \"available\": \"bool\"}", "metadata": {}}
{"_id": "1139", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Behence, api_description:Check username on Behence, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"success\": \"bool\", \"username\": \"str\", \"available\": \"bool\"}", "metadata": {}}
{"_id": "1140", "title": "", "text": "category_name:Social, tool_name:Whatsapp Scraper, api_name:Fetch business info (get free token), api_description:Free token needed, click [here](https://wa.me/34631428039?text=get-token) to get it. The endpoint will provide: `description`, `website`, `email`, `business hours`, `address` and `category`; if the number is a whatsapp for business account., required_params: [{\"name\": \"phone\", \"type\": \"NUMBER\", \"description\": \"The phone number must be written as a number (including countrycode); \\ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.\"}, {\"name\": \"token\", \"type\": \"STRING\", \"description\": \"To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1141", "title": "", "text": "category_name:Communication, tool_name:whin, api_name:create a group, api_description:This API will create a group, it will add you, and will promote you to Admin of the group. Check this [video](https://youtu.be/wD0DWoua0L4) to learn how to use it., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1142", "title": "", "text": "category_name:Finance, tool_name:Quandl, api_name:Get time-series data and metadata, api_description:This call returns data and metadata for a given time-series., required_params: [{\"name\": \"database_code\", \"type\": \"STRING\", \"description\": \"The code for the database this time-series belongs to\"}, {\"name\": \"return_format\", \"type\": \"STRING\", \"description\": \"json, xml or csv\"}, {\"name\": \"dataset_code\", \"type\": \"STRING\", \"description\": \"The code for this time-series\"}], optional_params: [], return_schema: {\"dataset\": {\"id\": \"int\", \"dataset_code\": \"str\", \"database_code\": \"str\", \"name\": \"str\", \"description\": \"str\", \"refreshed_at\": \"str\", \"newest_available_date\": \"str\", \"oldest_available_date\": \"str\", \"column_names\": [\"list of str with length 13\"], \"frequency\": \"str\", \"type\": \"str\", \"premium\": \"bool\", \"limit\": \"NoneType\", \"transform\": \"NoneType\", \"column_index\": \"NoneType\", \"start_date\": \"str\", \"end_date\": \"str\", \"data\": [\"list of list with length 1472\"], \"collapse\": \"NoneType\", \"order\": \"NoneType\", \"database_id\": \"int\"}}", "metadata": {}}
{"_id": "1143", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:market/get-commentaries, api_description:Get latest commentaries in the market, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1144", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-valuation, api_description:Mapped to Valuation  tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1145", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-analysis-data, api_description:Mapped to Analysis section in Quote tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1146", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/get-disclosure-flag, api_description:Get disclosure flag related to an ETF or FUND, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1147", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/portfolio/get-coupon-range, api_description:Get coupon range as displayed in the Portfolio tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1148", "title": "", "text": "category_name:Finance, tool_name:Fidelity Investments, api_name:market/get-orders, api_description:Get orders by Fidelity customers, required_params: [], optional_params: [], return_schema: {\"topTrade\": {\"tradeDetails\": [{\"symbol\": \"str\", \"sector\": \"str\", \"totalOrderQty\": \"int\", \"totalBuyOrderQty\": \"int\", \"buysPct\": \"float\", \"sellsPct\": \"float\", \"timestamp\": \"int\", \"todaysChgPct\": \"float\", \"_list_length\": 30}]}}", "metadata": {}}
{"_id": "1149", "title": "", "text": "category_name:Media, tool_name:Vimeo, api_name:GetAllCategories, api_description:, required_params: [{\"name\": \"format\", \"type\": \"STRING\", \"description\": \"json or xml or php\"}], optional_params: [], return_schema: {\"generated_in\": \"str\", \"stat\": \"str\", \"err\": {\"code\": \"str\", \"expl\": \"str\", \"msg\": \"str\"}}", "metadata": {}}
{"_id": "1150", "title": "", "text": "category_name:Media, tool_name:Vimeo, api_name:GetChannelVideos, api_description:Get a list of the videos in a channel., required_params: [{\"name\": \"format\", \"type\": \"STRING\", \"description\": \"json/xml/php\"}, {\"name\": \"channel_id\", \"type\": \"STRING\", \"description\": \"The numeric id of the channel or its url name.\"}, {\"name\": \"full_response\", \"type\": \"BOOLEAN\", \"description\": \"Set this parameter to get back the full video information\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1151", "title": "", "text": "category_name:Media, tool_name:Vimeo, api_name:GetCategoryInfo, api_description:, required_params: [{\"name\": \"category\", \"type\": \"STRING\", \"description\": \"The name of the category.\"}, {\"name\": \"format\", \"type\": \"STRING\", \"description\": \"json or xml or php\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1152", "title": "", "text": "category_name:Media, tool_name:Vimeo, api_name:GetChannelInfo, api_description:Get the information on a single channel., required_params: [{\"name\": \"format\", \"type\": \"STRING\", \"description\": \"json/xml/php\"}, {\"name\": \"channel_id\", \"type\": \"STRING\", \"description\": \"The numeric id of the channel or its url name.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1153", "title": "", "text": "category_name:Media, tool_name:Vimeo, api_name:GetVideosComment, api_description:Get a list of the comments on a video., required_params: [{\"name\": \"format\", \"type\": \"STRING\", \"description\": \"json/php/xml\"}, {\"name\": \"video_id\", \"type\": \"STRING\", \"description\": \"The ID of the video.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1154", "title": "", "text": "category_name:Finance, tool_name:Fidelity Investments, api_name:news/get-details, api_description:Get news details, required_params: [{\"name\": \"resId\", \"type\": \"STRING\", \"description\": \"The value of resId field returned in .../news/list-top endpoint, such as : 202003011902RTRSNEWSCOMBINED_KBN20O2GM-OUSBS_1\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1155", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:OBV, api_description:On Balance Volume(OBV) is a momentum indicator, which uses volume flow to forecast upcoming price changes., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1156", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/products/locations/{locationId}/types, api_description:Metadata about a Weather Office. Example /offices/EAX, required_params: [{\"name\": \"locationId\", \"type\": \"STRING\", \"description\": \"officeId: a weather office id (https://en.wikipedia.org/wiki/List_of_National_Weather_Service_Weather_Forecast_Offices)\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 1}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "1157", "title": "", "text": "category_name:Weather, tool_name:WeatherAPI.com, api_name:Time Zone API, api_description:Time Zone API method allows a user to get up to date time zone and local time information in json., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Query parameter based on which data is sent back. It could be following:\\n\\nLatitude and Longitude (Decimal degree) e.g: q=48.8567,2.3508\\ncity name e.g.: q=Paris\\nUS zip e.g.: q=10001\\nUK postcode e.g: q=SW1\\nCanada postal code e.g: q=G2J\\nmetar:<metar code> e.g: q=metar:EGLL\\niata:<3 digit airport code> e.g: q=iata:DXB\\nauto:ip IP lookup e.g: q=auto:ip\\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1\"}], optional_params: [], return_schema: {\"error\": {\"code\": \"int\", \"message\": \"str\"}}", "metadata": {}}
{"_id": "1158", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/products/locations, api_description:A list of locations with active products., required_params: [], optional_params: [], return_schema: \"{\\\"@context\\\": \\\"empty list\\\", \\\"locations\\\": {\\\"001\\\": \\\"NoneType\\\", \\\"01\\\": \\\"NoneType\\\", \\\"02\\\": \\\"NoneType\\\", \\\"03\\\": \\\"NoneType\\\", \\\"04\\\": \\\"NoneType\\\", \\\"0F2\\\": \\\"NoneType\\\", \\\"0J4\\\": \\\"NoneType\\\", \\\"11R\\\": \\\"NoneType\\\", \\\"12N\\\": \\\"NoneType\\\", \\\"1S3\\\": \\\"NoneType\\\", \\\"1V4\\\": \\\"NoneType\\\", \\\"1Y7\\\": \\\"NoneType\\\", \\\"1Y8\\\": \\\"NoneType\\\", \\\"20V\\\": \\\"NoneType\\\", \\\"2R9\\\": \\\"NoneType\\\", \\\"2WX\\\": \\\"NoneType\\\", \\\"30D\\\": \\\"NoneType\\\", \\\"33V\\\": \\\"NoneType\\\", \\\"38S\\\": \\\"NoneType\\\", \\\"3T5\\\": \\\"NoneType\\\", \\\"3U3\\\": \\\"NoneType\\\", \\\"40B\\\": \\\"NoneType\\\", \\\"4U6\\\": \\\"NoneType\\\", \\\"55N\\\": \\\"NoneType\\\", \\\"5C1\\\": \\\"NoneType\\\", \\\"5T9\\\": \\\"NoneType\\\", \\\"6P9\\\": \\\"NoneType\\\", \\\"6R6\\\": \\\"NoneType\\\", \\\"6S5\\\": \\\"NoneType\\\", \\\"6S8\\\": \\\"NoneType\\\", \\\"79J\\\": \\\"NoneType\\\", \\\"8D3\\\": \\\"NoneType\\\", \\\"90D\\\": \\\"NoneType\\\", \\\"90S\\\": \\\"NoneType\\\", \\\"9S2\\\": \\\"NoneType\\\", \\\"9S5\\\": \\\"NoneType\\\", \\\"9V9\\\": \\\"NoneType\\\", \\\"A0A\\\": \\\"NoneType\\\", \\\"A0B\\\": \\\"NoneType\\\", \\\"A0C\\\": \\\"NoneType\\\", \\\"A0D\\\": \\\"NoneType\\\", \\\"A0E\\\": \\\"NoneType\\\", \\\"A0F\\\": \\\"NoneType\\\", \\\"A0G\\\": \\\"NoneType\\\", \\\"A0H\\\": \\\"NoneType\\\", \\\"A0I\\\": \\\"NoneType\\\", \\\"A0J\\\": \\\"NoneType\\\", \\\"A0K\\\": \\\"NoneType\\\", \\\"A0L\\\": \\\"NoneType\\\", \\\"A0M\\\": \\\"NoneType\\\", \\\"AAF\\\": \\\"NoneT\"", "metadata": {}}
{"_id": "1159", "title": "", "text": "category_name:Data, tool_name:Global Address, api_name:Global Address, api_description:Validate, Standardize and Cleanse Addresses across the globe, required_params: [{\"name\": \"ctry\", \"type\": \"STRING\", \"description\": \"Country Code / Country Name\"}], optional_params: [], return_schema: \"{\\\"Version\\\": \\\"str\\\", \\\"TransmissionReference\\\": \\\"str\\\", \\\"TransmissionResults\\\": \\\"str\\\", \\\"TotalRecords\\\": \\\"str\\\", \\\"Records\\\": [{\\\"RecordID\\\": \\\"str\\\", \\\"Results\\\": \\\"str\\\", \\\"FormattedAddress\\\": \\\"str\\\", \\\"Organization\\\": \\\"str\\\", \\\"AddressLine1\\\": \\\"str\\\", \\\"AddressLine2\\\": \\\"str\\\", \\\"AddressLine3\\\": \\\"str\\\", \\\"AddressLine4\\\": \\\"str\\\", \\\"AddressLine5\\\": \\\"str\\\", \\\"AddressLine6\\\": \\\"str\\\", \\\"AddressLine7\\\": \\\"str\\\", \\\"AddressLine8\\\": \\\"str\\\", \\\"SubPremises\\\": \\\"str\\\", \\\"DoubleDependentLocality\\\": \\\"str\\\", \\\"DependentLocality\\\": \\\"str\\\", \\\"Locality\\\": \\\"str\\\", \\\"SubAdministrativeArea\\\": \\\"str\\\", \\\"AdministrativeArea\\\": \\\"str\\\", \\\"PostalCode\\\": \\\"str\\\", \\\"PostalCodeType\\\": \\\"str\\\", \\\"AddressType\\\": \\\"str\\\", \\\"AddressKey\\\": \\\"str\\\", \\\"SubNationalArea\\\": \\\"str\\\", \\\"CountryName\\\": \\\"str\\\", \\\"CountryISO3166_1_Alpha2\\\": \\\"str\\\", \\\"CountryISO3166_1_Alpha3\\\": \\\"str\\\", \\\"CountryISO3166_1_Numeric\\\": \\\"str\\\", \\\"CountrySubdivisionCode\\\": \\\"str\\\", \\\"Thoroughfare\\\": \\\"str\\\", \\\"ThoroughfarePreDirection\\\": \\\"str\\\", \\\"ThoroughfareLeadingType\\\": \\\"str\\\", \\\"ThoroughfareName\\\": \\\"str\\\", \\\"ThoroughfareTrailingType\\\": \\\"str\\\", \\\"ThoroughfarePostDire\"", "metadata": {}}
{"_id": "1160", "title": "", "text": "category_name:Logistics, tool_name:Air Cargo CO2 Track And Trace, api_name:PULL (track), api_description:By providing a valid AWB, you can get tracking information for the shipment., required_params: [{\"name\": \"awb\", \"type\": \"STRING\", \"description\": \"provide valid AWB number\"}], optional_params: [], return_schema: {\"awb\": \"str\", \"weight\": \"str\", \"pieces\": \"str\", \"origin\": \"str\", \"destination\": \"str\", \"events\": [{\"code\": \"str\", \"eventDate\": \"str\", \"eventLocation\": \"str\", \"eventLocationCoord\": \"str\", \"flight\": {\"number\": \"str\", \"origin\": \"str\", \"destination\": \"str\", \"originCoord\": \"str\", \"destinationCoord\": \"str\", \"scheduledDeparture\": \"str\", \"actualDeparture\": \"str\", \"scheduledArrival\": \"str\", \"actualArrival\": \"str\", \"carbonEmission\": \"str\", \"distance\": \"str\", \"duration\": \"str\"}, \"weight\": \"str\", \"pieces\": \"str\", \"isPlanned\": \"bool\", \"distance\": \"str\", \"origin\": \"str\", \"destination\": \"str\", \"time\": \"str\", \"flightNumber\": \"str\", \"scheduledDepartureDate\": \"str\", \"carbonEmission\": \"str\", \"originCoord\": \"str\", \"destinationCoord\": \"str\", \"_list_length\": 13}], \"status\": \"str\", \"originCoord\": \"str\", \"destinationCoord\": \"str\", \"carbonEmission\": \"str\", \"distance\": \"str\", \"time\": \"str\"}", "metadata": {}}
{"_id": "1161", "title": "", "text": "category_name:Gaming, tool_name:CheapShark - Game Deals, api_name:Game Lookup, api_description:Gets info for a specific game. Response includes a list of all deals associated with the game., required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"An existing gameID\"}], optional_params: [], return_schema: {\"info\": {\"title\": \"str\", \"steamAppID\": \"NoneType\", \"thumb\": \"str\"}, \"cheapestPriceEver\": {\"price\": \"str\", \"date\": \"int\"}, \"deals\": [{\"storeID\": \"str\", \"dealID\": \"str\", \"price\": \"str\", \"retailPrice\": \"str\", \"savings\": \"str\", \"_list_length\": 6}]}", "metadata": {}}
{"_id": "1162", "title": "", "text": "category_name:Entertainment, tool_name:Twitter video downloader mp4, api_name:https://mp3downy.com/twitter-video-downloader-API, api_description:New twitter video downloader https://mp3downy.com/twitter-video-downloader-API, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1163", "title": "", "text": "category_name:Weather, tool_name:Forecast, api_name:RapidApiGetForecastHourlyByCoordinates, api_description:Get forecast hourly information., required_params: [{\"name\": \"latitude\", \"type\": \"NUMBER\", \"description\": \"Latitude\"}, {\"name\": \"longitude\", \"type\": \"NUMBER\", \"description\": \"Longitude\"}], optional_params: [], return_schema: {\"items\": [{\"date\": \"str\", \"period\": \"int\", \"freshSnow\": \"float\", \"weather\": {\"state\": \"int\", \"text\": \"str\", \"icon\": \"str\"}, \"sunHours\": \"NoneType\", \"rainHours\": \"NoneType\", \"prec\": {\"sum\": \"int\", \"probability\": \"int\", \"sumAsRain\": \"NoneType\", \"class\": \"int\"}, \"temperature\": {\"avg\": \"int\"}, \"pressure\": \"int\", \"relativeHumidity\": \"int\", \"clouds\": {\"high\": \"int\", \"low\": \"int\", \"middle\": \"int\"}, \"wind\": {\"unit\": \"str\", \"direction\": \"str\", \"text\": \"str\", \"avg\": \"int\", \"min\": \"NoneType\", \"max\": \"NoneType\", \"gusts\": {\"value\": \"int\", \"text\": \"NoneType\"}, \"significationWind\": \"bool\"}, \"windchill\": {\"avg\": \"int\", \"min\": \"NoneType\", \"max\": \"NoneType\"}, \"snowLine\": {\"avg\": \"NoneType\", \"min\": \"NoneType\", \"max\": \"NoneType\", \"unit\": \"str\"}, \"isNight\": \"bool\", \"_list_length\": 302}], \"forecastDate\": \"str\", \"nextUpdate\": \"str\", \"source\": \"str\", \"point\": \"str\", \"fingerprint\": \"str\"}", "metadata": {}}
{"_id": "1164", "title": "", "text": "category_name:Media, tool_name:placekitten, api_name:Kitten, api_description:, required_params: [{\"name\": \"width\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"height\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1165", "title": "", "text": "category_name:Sports, tool_name:Football Prediction, api_name:Head To Head, api_description:Shows head to head stats and previous encounters for the home and away team of an upcoming match., required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"(use predictions endpoint to get list of IDs)\"}], optional_params: [], return_schema: \"{\\\"data\\\": {\\\"stats\\\": {\\\"overall\\\": {\\\"num_encounters\\\": \\\"int\\\", \\\"over_05\\\": \\\"int\\\", \\\"over_15\\\": \\\"int\\\", \\\"over_25\\\": \\\"int\\\", \\\"over_35\\\": \\\"int\\\", \\\"both_teams_scored\\\": \\\"int\\\", \\\"total_goals\\\": \\\"int\\\", \\\"avg_goals_per_match\\\": \\\"float\\\"}, \\\"home_team\\\": {\\\"team_name\\\": \\\"str\\\", \\\"goals_scored\\\": \\\"int\\\", \\\"goals_conceived\\\": \\\"int\\\", \\\"won\\\": \\\"int\\\", \\\"draw\\\": \\\"int\\\", \\\"lost\\\": \\\"int\\\", \\\"clean_sheet\\\": \\\"int\\\", \\\"first_half_win\\\": \\\"int\\\", \\\"first_half_draw\\\": \\\"int\\\", \\\"first_half_lost\\\": \\\"int\\\", \\\"avg_goals_scored\\\": \\\"float\\\", \\\"avg_goals_conceived\\\": \\\"float\\\", \\\"avg_bookie_win_chance\\\": \\\"float\\\", \\\"avg_bookie_draw_chance\\\": \\\"float\\\", \\\"avg_bookie_lose_chance\\\": \\\"float\\\"}, \\\"away_team\\\": {\\\"team_name\\\": \\\"str\\\", \\\"goals_scored\\\": \\\"int\\\", \\\"goals_conceived\\\": \\\"int\\\", \\\"won\\\": \\\"int\\\", \\\"draw\\\": \\\"int\\\", \\\"lost\\\": \\\"int\\\", \\\"clean_sheet\\\": \\\"int\\\", \\\"first_half_win\\\": \\\"int\\\", \\\"first_half_draw\\\": \\\"int\\\", \\\"first_half_lost\\\": \\\"int\\\", \\\"avg_goals_scored\\\": \\\"float\\\", \\\"avg_goals_conceived\\\": \\\"float\\\", \\\"avg_bookie_win_chance\\\": \\\"float\\\", \\\"avg_bookie_draw_chance\\\": \\\"float\\\", \\\"avg_bookie_lose_chance\\\": \\\"float\\\"}}, \\\"en\"", "metadata": {}}
{"_id": "1166", "title": "", "text": "category_name:Location, tool_name:Referential, api_name:Languages, api_description:List the world's languages translated into 20 languages, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1167", "title": "", "text": "category_name:Mapping, tool_name:Places, api_name:Places list by bounding box, api_description:Method returns all objects (or number of objects) in the given boundary box optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format., required_params: [{\"name\": \"lon_max\", \"type\": \"NUMBER\", \"description\": \"Maximum longitude\"}, {\"name\": \"lat_min\", \"type\": \"NUMBER\", \"description\": \"Minimum latitude\"}, {\"name\": \"lang\", \"type\": \"ENUM\", \"description\": \"Language code (2 characters, ISO639-1). The following values are available: en (english), ru (russian)\"}, {\"name\": \"lon_min\", \"type\": \"NUMBER\", \"description\": \"Minimum longitude\"}, {\"name\": \"lat_max\", \"type\": \"NUMBER\", \"description\": \"Maximum latitude\"}], optional_params: [], return_schema: {\"error\": \"str\"}", "metadata": {}}
{"_id": "1168", "title": "", "text": "category_name:Data, tool_name:IP Geolocation - IPWHOIS.io, api_name:JSON endpoint, api_description:Detailed information on our website: https://ipwhois.io/documentation, required_params: [], optional_params: [], return_schema: {\"ip\": \"str\", \"success\": \"bool\", \"type\": \"str\", \"continent\": \"str\", \"continent_code\": \"str\", \"country\": \"str\", \"country_code\": \"str\", \"country_flag\": \"str\", \"country_capital\": \"str\", \"country_phone\": \"str\", \"country_neighbours\": \"str\", \"region\": \"str\", \"city\": \"str\", \"latitude\": \"float\", \"longitude\": \"float\", \"asn\": \"str\", \"org\": \"str\", \"isp\": \"str\", \"timezone\": \"str\", \"timezone_name\": \"str\", \"timezone_dstOffset\": \"int\", \"timezone_gmtOffset\": \"int\", \"timezone_gmt\": \"str\", \"currency\": \"str\", \"currency_code\": \"str\", \"currency_symbol\": \"str\", \"currency_rates\": \"float\", \"currency_plural\": \"str\", \"completed_requests\": \"int\"}", "metadata": {}}
{"_id": "1169", "title": "", "text": "category_name:Weather, tool_name:climate data, api_name:List of all Countries, api_description:List of all Countries, required_params: [], optional_params: [], return_schema: {\"link\": \"str\", \"modified\": \"str\", \"description\": \"str\", \"generator\": \"str\", \"Countries\": [{\"COUNTRY\": \"str\", \"name\": \"str\", \"_list_length\": 278}]}", "metadata": {}}
{"_id": "1170", "title": "", "text": "category_name:Education, tool_name:Helioviewer v1, api_name:takeScreenshot, api_description:Generate a custom screenshot.\n\n        You must specify values for either `x1`, `y1`, `x2`, and `y2`\n        or `x0`, `y0`, `width` and `height`.\n\n        By default, the response is a JSON object containing a unique screenshot identifier (`id`) that can be used to with the `downloadScreenshot` API endpoint.\n\n        Set the `display` parameter to `true` to directly return the screenshot as binary PNG image data in the response.\n\n        Please note that each request causes the server to generate a screenshot from scratch and is resource intensive.  For performance reasons, you should cache the response if you simply intend to serve exactly the same screenshot to multiple users., required_params: [{\"name\": \"date\", \"type\": \"STRING\", \"description\": \"Desired date/time of the image. ISO 8601 combined UTC date and time UTC format.\"}, {\"name\": \"imageScale\", \"type\": \"NUMBER\", \"description\": \"Image scale in arcseconds per pixel.\"}, {\"name\": \"layers\", \"type\": \"STRING\", \"description\": \"Image datasource layer(s) to include in the screenshot.\"}, {\"name\": \"eventLabels\", \"type\": \"BOOLEAN\", \"description\": \"Optionally annotate each event marker with a text label.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1171", "title": "", "text": "category_name:Tools, tool_name:Domain Checker, api_name:DNS, api_description:Checks the domain DNS records, required_params: [{\"name\": \"domain\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"domain\": \"str\", \"valid\": \"bool\", \"A\": [\"list of str with length 2\"], \"AAAA\": [\"list of str with length 2\"], \"CNAME\": [\"list of str with length 1\"], \"NS\": [\"list of str with length 2\"], \"MX\": [\"list of str with length 5\"], \"TXT\": [\"list of str with length 19\"]}", "metadata": {}}
{"_id": "1172", "title": "", "text": "category_name:Tools, tool_name:Domain Checker, api_name:Whois, api_description:Checks the domain Whois Details, required_params: [{\"name\": \"domain\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"domain\": \"str\", \"sld\": \"str\", \"tld\": \"str\", \"valid\": \"bool\", \"available\": \"bool\", \"created_at\": \"str\", \"updated_at\": \"str\", \"expires_at\": \"str\", \"registrar\": \"str\", \"whois\": \"str\"}", "metadata": {}}
{"_id": "1173", "title": "", "text": "category_name:Database, tool_name:Domain Reputation, api_name:Domain Reputation, api_description:Evaluate reputation of a domain or IP (v1), required_params: [{\"name\": \"domainName\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"code\": \"int\", \"messages\": \"str\"}", "metadata": {}}
{"_id": "1174", "title": "", "text": "category_name:Travel, tool_name:British Airways Flight Info, api_name:Search arrivals by route, api_description:, required_params: [{\"name\": \"departurelocation-arrivallocation-arrivallocation-scheduledarrivaldate-scheduledarrivaldate\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"departureLocation\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"arrivalLocation\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"scheduledArrivalDate\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1175", "title": "", "text": "category_name:Transportation, tool_name:TimeTable Lookup , api_name:airports - Latitude and longitude for location in country, api_description:Returns the latitude and longitude for location in country, required_params: [{\"name\": \"location\", \"type\": \"string\", \"description\": \"A location in the country\"}, {\"name\": \"countryiatacode\", \"type\": \"string\", \"description\": \"Country IATA Code\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1176", "title": "", "text": "category_name:Travel, tool_name:Flightera Flight Data, api_name:airlineStatistics, api_description:Returns detailed airline statistics for airlines identified by the provided identifiers. In most cases the list should contain only one entry, unless the ident is ambiguous.\nIf searched by ident, only one airline is returned.\nOne of ident, iata, icao must be provided.\nStatistics are calculated overnight and represent the current day's data., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1177", "title": "", "text": "category_name:Transportation, tool_name:TimeTable Lookup , api_name:airlines - Airlines and the countries they operate in, api_description:Return a list of airlines and the countries they operate in, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1178", "title": "", "text": "category_name:Medical, tool_name:EndlessMedicalAPI, api_name:InitSession, api_description:Initializes API Session, required_params: [], optional_params: [], return_schema: {\"status\": \"str\", \"SessionID\": \"str\"}", "metadata": {}}
{"_id": "1179", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:sendEthereum, api_description:Sends ethereum from an address controlled by the account to a specified receiver address., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "1180", "title": "", "text": "category_name:Financial, tool_name:Cryptocurrency balance, api_name:Get Reserve Rights Balance From Specific Network, api_description:This endpoint will return back the Reserve Rights balance of an address in a specific network., required_params: [{\"name\": \"network\", \"type\": \"string\", \"description\": \"network can take the value : \\n- eth\"}, {\"name\": \"address\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1181", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:getToken, api_description:Returns information about a specific ERC20 token like name, symbol, decimal places and total supply., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "1182", "title": "", "text": "category_name:Movies, tool_name:OTT details, api_name:Search, api_description:This endpoint allows you to search for a movie or tvshow based on the given 'title '., required_params: [{\"name\": \"title\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1183", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:List Titles, api_description:Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans., required_params: [], optional_params: [], return_schema: {\"titles\": \"empty list\", \"page\": \"int\", \"total_results\": \"int\", \"total_pages\": \"int\"}", "metadata": {}}
{"_id": "1184", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Hotel reviews, api_description:This API returns a list of reviews, required_params: [{\"name\": \"hotel_id\", \"type\": \"STRING\", \"description\": \"The PPN Hotel ID identifying the desired property.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1185", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Hotel details, api_description:Provides information on the specified hotel, required_params: [{\"name\": \"hotel_id\", \"type\": \"STRING\", \"description\": \"The PPN Hotel ID identifying the desired property.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1186", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Top R&B/Hip-Hop Albums, api_description:Provide the Greatest of All Time Top R&B/Hip-Hop Albums chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1187", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Top New Artists, api_description:Provide the YEAR-END Top New Artists chart information\n\nIf `year` is not supplied, will default to last year., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1188", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Poland Songs, api_description:Provide the Poland Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "1189", "title": "", "text": "category_name:Entertainment, tool_name:Hearthstone, api_name:Card Search, api_description:Returns cards by partial name., required_params: [{\"name\": \"name\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1190", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Analyst Ratings - US Equities, api_description:This API endpoint returns complete information on ratings issued by analyst firms. Works only for US equities.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"code\": \"int\", \"message\": \"str\", \"status\": \"str\"}", "metadata": {}}
{"_id": "1191", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:EPS Trend, api_description:This API endpoint returns a breakdown of the estimated historical EPS changes at a given period.\n\nAvailability: Mega plan\nData weighting: 20 API credits per symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1192", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:MFs Family List, api_description:This API request returns a list of mutual funds families., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1193", "title": "", "text": "category_name:eCommerce, tool_name:Asos, api_name:products/v2/list, api_description:List products, search products with options and filters version 2, required_params: [{\"name\": \"store\", \"type\": \"STRING\", \"description\": \"Get value from store field from countries/list API\"}, {\"name\": \"offset\", \"type\": \"NUMBER\", \"description\": \"The offset to skip already viewed products\"}, {\"name\": \"categoryId\", \"type\": \"NUMBER\", \"description\": \"The value of categoryId field from categories/list API\"}, {\"name\": \"limit\", \"type\": \"NUMBER\", \"description\": \"The number of items per page\"}], optional_params: [], return_schema: \"{\\\"searchTerm\\\": \\\"str\\\", \\\"categoryName\\\": \\\"str\\\", \\\"itemCount\\\": \\\"int\\\", \\\"redirectUrl\\\": \\\"str\\\", \\\"products\\\": [{\\\"id\\\": \\\"int\\\", \\\"name\\\": \\\"str\\\", \\\"price\\\": {\\\"current\\\": {\\\"value\\\": \\\"float\\\", \\\"text\\\": \\\"str\\\"}, \\\"previous\\\": {\\\"value\\\": \\\"NoneType\\\", \\\"text\\\": \\\"str\\\"}, \\\"rrp\\\": {\\\"value\\\": \\\"float\\\", \\\"text\\\": \\\"str\\\"}, \\\"isMarkedDown\\\": \\\"bool\\\", \\\"isOutletPrice\\\": \\\"bool\\\", \\\"currency\\\": \\\"str\\\"}, \\\"colour\\\": \\\"str\\\", \\\"colourWayId\\\": \\\"int\\\", \\\"brandName\\\": \\\"str\\\", \\\"hasVariantColours\\\": \\\"bool\\\", \\\"hasMultiplePrices\\\": \\\"bool\\\", \\\"groupId\\\": \\\"NoneType\\\", \\\"productCode\\\": \\\"int\\\", \\\"productType\\\": \\\"str\\\", \\\"url\\\": \\\"str\\\", \\\"imageUrl\\\": \\\"str\\\", \\\"additionalImageUrls\\\": [\\\"list of str with length 3\\\"], \\\"videoUrl\\\": \\\"NoneType\\\", \\\"showVideo\\\": \\\"bool\\\", \\\"isSellingFast\\\": \\\"bool\\\", \\\"sponsoredCampaignId\\\": \\\"NoneType\\\", \\\"facetGroupings\\\": \\\"empty list\\\", \\\"advertisement\\\": \\\"NoneType\\\", \\\"_list_length\\\": 48}], \\\"facets\\\": [{\\\"id\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"facetValues\\\": [{\\\"count\\\": \\\"int\\\", \\\"id\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"isSelected\\\": \\\"bool\\\", \\\"_list_length\\\": 5}], \\\"displayStyle\\\": \\\"str\\\", \\\"facetType\\\": \\\"str\\\", \\\"hasSele\"", "metadata": {}}
{"_id": "1194", "title": "", "text": "category_name:eCommerce, tool_name:Asos, api_name:v2/auto-complete, api_description:Get auto complete suggestion by product name, required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Name of products\"}], optional_params: [], return_schema: {\"suggestionGroups\": [{\"indexName\": \"str\", \"indexTitle\": \"str\", \"suggestions\": [{\"searchTerm\": \"str\", \"numberOfResults\": \"int\", \"_list_length\": 10}], \"_list_length\": 1}]}", "metadata": {}}
{"_id": "1195", "title": "", "text": "category_name:eCommerce, tool_name:Forever21, api_name:categories/list (Deprecated), api_description:List all categories from F21, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1196", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/get-mini-chart-realtime-data, api_description:Get data to draw mini chat, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1197", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-profile, api_description:Mapped to Company Profile section in Quote  tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1198", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Insider Transactions, api_description:Returns trading information performed by insiders.\n\nAvailability: Ultra plan\nData weighting: 200 API credits per symbol, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1199", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-key-stats, api_description:Mapped to Key Ratios section in Quote tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1200", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:HT_SINE, api_description:Hilbert Transform SineWave(HT_SINE) is part of Hilbert Transforms concepts. You can read more about it in the Rocket Science for Traders book by John F. Ehlers., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1201", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:MA, api_description:Moving Average(MA) is used to smooth out price fluctuations and get rid of market noise., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1202", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Price Target, api_description:This API endpoint returns the analysts' projection of a security's future price.\n\nAvailability: Mega plan\nData weighting: 75 API credits per symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"code\": \"int\", \"message\": \"str\", \"status\": \"str\"}", "metadata": {}}
{"_id": "1203", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:STOCHF, api_description:Stochastic Fast(STOCHF) is more sensitive to price changes; therefore, it changes direction more quickly., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1204", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:WILLR, api_description:Williams %R(WILLR) calculates overbought and oversold levels. It can also be used to find entry and exit signals., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1205", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Logo, api_description:Returns logo of the company.\n\nAvailability: Basic plan\nData weighting: 1 API credit per symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1206", "title": "", "text": "category_name:Social, tool_name:Social Media Data TT, api_name:Video post metadata V2, api_description:Get single post metadata V2\n\nV2 - returns more data then older version of the endpoint, required_params: [{\"name\": \"video\", \"type\": \"STRING\", \"description\": \"Post url\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1207", "title": "", "text": "category_name:Social, tool_name:Social Media Data TT, api_name:Video post comments, api_description:Get video post comments., required_params: [{\"name\": \"video_id\", \"type\": \"STRING\", \"description\": \"Where to get vide id value?\\n\\nFor example in this video /@INFLUENCER/video/6818009093052189958 the id will be **6818009093052189958**\"}], optional_params: [], return_schema: {\"has_more\": \"bool\", \"max_cursor\": \"str\", \"comments\": \"empty list\"}", "metadata": {}}
{"_id": "1208", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Czech Republic Songs, api_description:Provide the Czech Republic Songs chart information, required_params: [{\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}], optional_params: [], return_schema: {\"notice\": \"str\"}", "metadata": {}}
{"_id": "1209", "title": "", "text": "category_name:Education, tool_name:Learn to read and write Japanese kanji, api_name:Radical position, api_description:The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required., required_params: [{\"name\": \"rpos\", \"type\": \"STRING\", \"description\": \"Hiragana or romaji\"}], optional_params: [], return_schema: {\"kanji\": {\"character\": \"str\", \"stroke\": \"int\"}, \"radical\": {\"character\": \"str\", \"stroke\": \"int\", \"order\": \"int\"}}", "metadata": {}}
{"_id": "1210", "title": "", "text": "category_name:Sports, tool_name:Fitness Calculator, api_name:activities, api_description:Find the met values for activities., required_params: [{\"name\": \"intensitylevel\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"status_code\": \"int\", \"request_result\": \"str\", \"data\": [{\"_id\": \"str\", \"id\": \"str\", \"activity\": \"str\", \"metValue\": \"str\", \"description\": \"str\", \"intensityLevel\": \"int\", \"_list_length\": 121}]}", "metadata": {}}
{"_id": "1211", "title": "", "text": "category_name:Sports, tool_name:Fitness Calculator, api_name:macros amounts, api_description:Find the amount of macro nutrients in four different categories which are balanced, low-fat, low-carbs and high-protein for a specific calorie burned. There are 6 inputs which are age, gender, height, weight, activity level and goal. \n\nFor activity level :\n    \n-     \"1\" : \"BMR\",\n-     \"2\" : \"Sedentary: little or no exercise\",\n-     \"3\" : \"Exercise 1-3 times/week\",\n-     \"4\" : \"Exercise 4-5 times/week\",\n-     \"5\" : \"Daily exercise or intense exercise 3-4 times/week\",\n-     \"6\" : \"Intense exercise 6-7 times/week\",\n-     \"7\" : \"Very intense exercise daily, or physical job\" \n\nFor goals : \n\n-      \"maintain\" : \"maintain weight\",\n-     \"mildlose\" : \"Mild weight loss\",\n-     \"weightlose\" : \"Weight loss\",\n-     \"extremelose\" : \"Extreme weight loss\",\n-     \"mildgain\" : \"Mild weight gain\",\n-     \"weightgain\" : \"Weight gain\",\n-     \"extremegain\" : \"Extreme weight gain\", required_params: [{\"name\": \"age\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"gender\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"weight\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"goal\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"height\", \"type\": \"NUMBER\", \"description\": \"\"}, {\"name\": \"activitylevel\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"status_code\": \"int\", \"request_result\": \"str\", \"data\": {\"calorie\": \"float\", \"balanced\": {\"protein\": \"float\", \"fat\": \"float\", \"carbs\": \"float\"}, \"lowfat\": {\"protein\": \"float\", \"fat\": \"float\", \"carbs\": \"float\"}, \"lowcarbs\": {\"protein\": \"float\", \"fat\": \"float\", \"carbs\": \"float\"}, \"highprotein\": {\"protein\": \"float\", \"fat\": \"float\", \"carbs\": \"float\"}}}", "metadata": {}}
{"_id": "1212", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Snapchat, api_description:Check username on Snapchat, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1213", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Linktree, api_description:Check username on Linktree, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1214", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:currency/get-exchange-rates, api_description:Get currency exchange rates between different countries, required_params: [{\"name\": \"base_currency\", \"type\": \"STRING\", \"description\": \"One of the followings : en|en-us|ar|bg|ca|cs|da|de|el|es|es-ar|et|fi|fr|he|hr|hu|id|is|it|ja|ko|lt|lv|ms|nl|no|pl|pt|pt-br|ro|ru|sk|sl|sr|sv|th|tl|tr|uk|vi|zh|zh-tw\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1215", "title": "", "text": "category_name:Location, tool_name:Referential, api_name:City by IP address (Geo IP), api_description:Find a city, state, country and continent by IP address. For some results, the closest result within 10 miles will be provided., required_params: [{\"name\": \"ip\", \"type\": \"STRING\", \"description\": \"ip4 pr ip6 formatted IP address\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1216", "title": "", "text": "category_name:Location, tool_name:Referential, api_name:Continent by id, api_description:Lookup a continent by id, required_params: [{\"name\": \"code\", \"type\": \"string\", \"description\": \"Two letter iso continent code. Lookup /v1/continent.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1217", "title": "", "text": "category_name:eCommerce, tool_name:Magic AliExpress, api_name:/api/category/{categoryId}/products, api_description:This resource represents the product list; you can filter by\n - attributes\n - minimum price\n - brand \n - ship to country\n - ship from country\n - max sale price \n<br> **For information, One first request, you must not indicate the attr & brands, you retrieve this informations in the Product Object.**, required_params: [{\"name\": \"categoryId\", \"type\": \"NUMBER\", \"description\": \"The Aliexpress product ID\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1218", "title": "", "text": "category_name:eCommerce, tool_name:Magic AliExpress, api_name:/api/bestSales/product/{productID}/pricesHistory, api_description:This resource returns the historic of prices, required_params: [{\"name\": \"productID\", \"type\": \"NUMBER\", \"description\": \"The Aliexpress product ID\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1219", "title": "", "text": "category_name:Finance, tool_name:Fidelity Investments, api_name:quotes/get-details, api_description:Get quote information, required_params: [{\"name\": \"symbols\", \"type\": \"STRING\", \"description\": \"Separated by comma to query multiple symbols \"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1220", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-news, api_description:Get news in the News tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1221", "title": "", "text": "category_name:Media, tool_name:Vimeo, api_name:GetAllChannels, api_description:Get a list of all public channels., required_params: [{\"name\": \"format\", \"type\": \"STRING\", \"description\": \"json/xml/php\"}, {\"name\": \"per_page\", \"type\": \"STRING\", \"description\": \"Number of items to show on each page. Max 50.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1222", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/sustainability/get-esg-risk, api_description:Get ESG risk in the Sustainability tab, required_params: [{\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}, {\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1223", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/sustainability/get-product-involvement, api_description:Get product involvement in the Sustainability tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1224", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:ROCR100, api_description:Rate of change ratio 100 scale(ROCR100) calculates the ratio with 100 scale between the current price and price n timeperiods ago. Formula: (price / prevPrice) * 100., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1225", "title": "", "text": "category_name:Finance, tool_name:Fidelity Investments, api_name:v3/auto-complete, api_description:Auto suggestion by input name or quote, required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Symbol or company name\"}], optional_params: [], return_schema: {\"quotes\": {\"count\": \"int\", \"suggestions\": [{\"symbol\": \"str\", \"cusip\": \"str\", \"desc\": \"str\", \"type\": \"str\", \"subType\": \"str\", \"exchange\": \"str\", \"nc\": \"bool\", \"url\": \"str\", \"_list_length\": 6}]}}", "metadata": {}}
{"_id": "1226", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Earnings, api_description:This API call returns earnings data for a given company, including EPS estimate and EPS actual. Earnings are available for complete company history.\n\nAvailability: Pro plan\nData weighting: 20 API credits per symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1227", "title": "", "text": "category_name:Mapping, tool_name:MapToolkit, api_name:Planet Vector Tiles, api_description:Global planet vector tiles., required_params: [{\"name\": \"y\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"x\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"z\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1228", "title": "", "text": "category_name:Weather, tool_name:National Weather Service, api_name:/stations/{stationId}/observations/{recordId}, api_description:Data for a specific observation.  NOTE! See note in /stations/{stationId}/observations for important details on observation data.  Example: /stations/KMKC/observations/2017-01-04T18:54:00+00:00, required_params: [{\"name\": \"stationId\", \"type\": \"STRING\", \"description\": \"stationsId: Station id\"}, {\"name\": \"recordId\", \"type\": \"STRING\", \"description\": \"recordId, Record Id (ISO8601DateTime)\"}], optional_params: [], return_schema: {\"correlationId\": \"str\", \"parameterErrors\": [{\"parameter\": \"str\", \"message\": \"str\", \"_list_length\": 3}], \"title\": \"str\", \"type\": \"str\", \"status\": \"int\", \"detail\": \"str\", \"instance\": \"str\"}", "metadata": {}}
{"_id": "1229", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:filters/list, api_description:A list of filter options to pass in categories_filter field. Pass params and values are as same as .../properties/list API, required_params: [{\"name\": \"room_qty\", \"type\": \"NUMBER\", \"description\": \"The number of rooms\"}, {\"name\": \"departure_date\", \"type\": \"STRING\", \"description\": \"The check-out date \"}, {\"name\": \"dest_ids\", \"type\": \"NUMBER\", \"description\": \"Value of dest_id or city_ufi field from locations/auto-complete API (Don't pass this if you use latlong as search_type)\"}, {\"name\": \"guest_qty\", \"type\": \"STRING\", \"description\": \"The number of adults\"}, {\"name\": \"arrival_date\", \"type\": \"STRING\", \"description\": \"The check-in date at hotel\"}, {\"name\": \"search_type\", \"type\": \"STRING\", \"description\": \"Value of dest_type returned by locations/auto-complete API\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1230", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:reviews/list, api_description:List reviews of stayed guests, required_params: [{\"name\": \"hotel_ids\", \"type\": \"NUMBER\", \"description\": \"The value of hotel_id field from properties/list API\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1231", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Time-Zones, api_description:Get all known time-zones., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1232", "title": "", "text": "category_name:Finance, tool_name:Investing - Cryptocurrency Markets, api_name:coins/get-markets, api_description:Get market information of specific cryptocurrency in specified currency, required_params: [{\"name\": \"cur2\", \"type\": \"NUMBER\", \"description\": \"The value of edition&#95;currency&#95;id returned in .../get-meta-data endpoint\"}, {\"name\": \"pair_ID\", \"type\": \"NUMBER\", \"description\": \"Value of pair&#95;id field returned in coins/list, coins/search, coins/list-pairs, etc...\"}], optional_params: [], return_schema: \"{\\\"data\\\": [{\\\"screen_ID\\\": \\\"str\\\", \\\"screen_data\\\": {\\\"crypto_data\\\": {\\\"crypto_id\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"symbol\\\": \\\"str\\\", \\\"currency_ID\\\": \\\"str\\\", \\\"sml_id\\\": \\\"str\\\", \\\"related_pair_ID\\\": \\\"str\\\", \\\"related_indices\\\": \\\"str\\\", \\\"price_usd\\\": \\\"str\\\", \\\"price_btc\\\": \\\"str\\\", \\\"24h_volume_usd\\\": \\\"str\\\", \\\"market_cap_usd\\\": \\\"str\\\", \\\"total_volume\\\": \\\"str\\\", \\\"change_percent\\\": \\\"str\\\", \\\"percent_change_7d\\\": \\\"str\\\", \\\"available_supply\\\": \\\"str\\\", \\\"max_supply\\\": \\\"str\\\", \\\"is_active\\\": \\\"str\\\", \\\"last_updated\\\": \\\"str\\\", \\\"inactivity_date\\\": \\\"NoneType\\\", \\\"related_pairs\\\": \\\"str\\\", \\\"cmc_rank\\\": \\\"str\\\", \\\"name_trans\\\": \\\"str\\\", \\\"currencies_order\\\": \\\"int\\\"}, \\\"additional_currencies\\\": [{\\\"cur_id\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"short_name\\\": \\\"str\\\", \\\"fullname\\\": \\\"str\\\", \\\"country_id\\\": \\\"str\\\", \\\"is_default\\\": \\\"bool\\\", \\\"_list_length\\\": 32}], \\\"market_pair_list\\\": [{\\\"pair_ID\\\": \\\"int\\\", \\\"pair_name\\\": \\\"str\\\", \\\"exchange_name\\\": \\\"str\\\", \\\"last\\\": \\\"str\\\", \\\"change_val\\\": \\\"str\\\", \\\"change_precent\\\": \\\"str\\\", \\\"pair_change_percent\\\": \\\"str\\\", \\\"color\\\": \\\"str\\\", \\\"pair_change_color\\\": \\\"str\\\", \\\"last_timestamp\\\": \\\"str\\\", \\\"volum\"", "metadata": {}}
{"_id": "1233", "title": "", "text": "category_name:Finance, tool_name:Investing - Cryptocurrency Markets, api_name:coins/get-analysis, api_description:Get analysis opinion from expert for specific cryptocurrency, required_params: [{\"name\": \"pair_ID\", \"type\": \"NUMBER\", \"description\": \"Value of pair&#95;id field returned in coins/list, coins/search, coins/list-pairs, etc...\"}], optional_params: [], return_schema: {\"data\": [{\"screen_ID\": \"str\", \"screen_data\": {\"ob\": \"str\", \"next_page\": \"int\", \"analysis\": [{\"hash\": \"str\", \"article_title\": \"str\", \"article_ID\": \"int\", \"article_masterid\": \"int\", \"article_time\": \"int\", \"article_is_video\": \"str\", \"article_author\": \"str\", \"article_author_ID\": \"int\", \"author_num_articles\": \"str\", \"article_data\": \"str\", \"article_href\": \"str\", \"itemType\": \"str\", \"itemCategoryTags\": \"int\", \"related_image\": \"str\", \"comments_cnt\": \"int\", \"is_partial\": \"str\", \"body_len\": \"int\", \"_list_length\": 10}]}, \"screen_layout\": \"str\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "1234", "title": "", "text": "category_name:Finance, tool_name:Investing - Cryptocurrency Markets, api_name:get-meta-data, api_description:Get init meta data, required_params: [{\"name\": \"locale_info\", \"type\": \"STRING\", \"description\": \"The language code\"}], optional_params: [], return_schema: {\"countries\": [{\"ci\": \"str\", \"cc\": \"str\", \"cname\": \"str\", \"country_name_translated\": \"str\", \"country_international_phone_code\": \"str\", \"is_default_economic_cal_country\": \"bool\", \"is_economic_cal_country\": \"bool\", \"is_default_earn_cal_country\": \"bool\", \"is_earn_cal_country\": \"bool\", \"flag_image_32x32\": \"str\", \"flag_image_32x32_flat\": \"str\", \"_list_length\": 222}], \"countries_popular\": \"str\", \"ipo_countries\": [\"list of int with length 102\"], \"default_ipo_countries\": [\"list of int with length 3\"], \"countries_market\": \"str\", \"market_default_country\": {\"flag_image_32x32\": \"str\", \"flag_image_32x32_flat\": \"str\", \"country_ID\": \"int\", \"flag\": \"str\"}, \"edition_currency_id\": \"int\", \"edition_currency_short_name\": \"str\", \"all_langs\": [{\"iso_639_lang_code\": \"str\", \"lang_dir\": \"str\", \"lang_ID\": \"int\", \"lang_foreign\": \"str\", \"ci\": \"str\", \"is_currency_onright\": \"bool\", \"_list_length\": 38}]}", "metadata": {}}
{"_id": "1235", "title": "", "text": "category_name:Weather, tool_name:Forecast, api_name:RapidApiGetObservationHistoryByStationId, api_description:Get an History object with historical information., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Station ID\"}], optional_params: [], return_schema: {\"error\": {\"code\": \"int\", \"message\": \"str\", \"request_id\": \"str\", \"details\": \"str\"}}", "metadata": {}}
{"_id": "1236", "title": "", "text": "category_name:Weather, tool_name:AI Weather by Meteosource, api_name:alerts, api_description:**Severe weather alerts** for the USA, Europe, and Canada. **Define your location** using GPS coordinates or `place_id` from `Location` endpoints., required_params: [], optional_params: [], return_schema: {\"lat\": \"str\", \"lon\": \"str\", \"elevation\": \"int\", \"timezone\": \"str\", \"alerts\": {\"data\": \"empty list\"}}", "metadata": {}}
{"_id": "1237", "title": "", "text": "category_name:Weather, tool_name:AI Weather by Meteosource, api_name:hourly, api_description:**Hourly weather** forecast for the next 5 days. **Global** data are based on our **AI technology**, which uses many different models. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`., required_params: [], optional_params: [], return_schema: {\"lat\": \"str\", \"lon\": \"str\", \"elevation\": \"int\", \"timezone\": \"str\", \"units\": \"str\", \"hourly\": {\"data\": [{\"date\": \"str\", \"weather\": \"str\", \"icon\": \"int\", \"summary\": \"str\", \"temperature\": \"float\", \"feels_like\": \"float\", \"wind_chill\": \"float\", \"dew_point\": \"float\", \"wind\": {\"speed\": \"float\", \"gusts\": \"float\", \"dir\": \"str\", \"angle\": \"int\"}, \"cloud_cover\": \"int\", \"pressure\": \"float\", \"precipitation\": {\"total\": \"float\", \"type\": \"str\"}, \"probability\": {\"precipitation\": \"int\", \"storm\": \"float\", \"freeze\": \"float\"}, \"ozone\": \"float\", \"uv_index\": \"float\", \"humidity\": \"int\", \"visibility\": \"float\", \"_list_length\": 120}]}}", "metadata": {}}
{"_id": "1238", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Locales, api_description:Get all known locales., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1239", "title": "", "text": "category_name:Sports, tool_name:Football Prediction, api_name:Prediction Details, api_description:Grab all available predictions for a match id, required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"data\": [{\"id\": \"int\", \"start_date\": \"str\", \"federation\": \"str\", \"season\": \"str\", \"competition_cluster\": \"str\", \"competition_name\": \"str\", \"home_team\": \"str\", \"away_team\": \"str\", \"result\": \"str\", \"is_expired\": \"bool\", \"last_update_at\": \"str\", \"available_markets\": [\"list of str with length 1\"], \"prediction_per_market\": {\"classic\": {\"status\": \"str\", \"prediction\": \"str\", \"probabilities\": {}, \"odds\": {\"1\": \"float\", \"X\": \"float\", \"2\": \"float\", \"1X\": \"float\", \"X2\": \"float\", \"12\": \"float\"}}}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "1240", "title": "", "text": "category_name:Data, tool_name:JSearch, api_name:Job Details, api_description:Get all job details, including additional application options / links, employer reviews and estimated salaries for similar jobs., required_params: [{\"name\": \"job_id\", \"type\": \"STRING\", \"description\": \"Job Id of the job for which to get details. Batching of up to 20 Job Ids is supported by separating multiple Job Ids by comma (,).\\n\\nNote that each Job Id in a batch request is counted as a request for quota calculation.\"}], optional_params: [], return_schema: {\"status\": \"str\", \"request_id\": \"str\", \"parameters\": {\"job_id\": \"str\", \"extended_publisher_details\": \"bool\"}, \"data\": \"empty list\"}", "metadata": {}}
{"_id": "1241", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Artist discovered on, api_description:Artist discovered on playlists (max 50), required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Artist ID\"}], optional_params: [], return_schema: {\"data\": {\"artist\": {\"id\": \"str\", \"uri\": \"str\", \"profile\": {\"name\": \"str\"}, \"relatedContent\": {\"discoveredOn\": {\"totalCount\": \"int\", \"items\": [{\"uri\": \"str\", \"id\": \"str\", \"owner\": {\"name\": \"str\"}, \"name\": \"str\", \"description\": \"str\", \"images\": {\"totalCount\": \"int\", \"items\": [{\"sources\": [{\"url\": \"str\", \"width\": \"NoneType\", \"height\": \"NoneType\", \"_list_length\": 1}], \"_list_length\": 1}]}, \"_list_length\": 50}]}}}}, \"extensions\": \"empty list\"}", "metadata": {}}
{"_id": "1242", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Album metadata, api_description:Get album metadata, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Album ID\"}], optional_params: [], return_schema: \"{\\\"data\\\": {\\\"album\\\": {\\\"uri\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"artists\\\": {\\\"totalCount\\\": \\\"int\\\", \\\"items\\\": [{\\\"uri\\\": \\\"str\\\", \\\"profile\\\": {\\\"name\\\": \\\"str\\\"}, \\\"visuals\\\": {\\\"avatarImage\\\": {\\\"sources\\\": [{\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"int\\\", \\\"height\\\": \\\"int\\\", \\\"_list_length\\\": 3}]}}, \\\"sharingInfo\\\": {\\\"shareUrl\\\": \\\"str\\\"}, \\\"_list_length\\\": 1}]}, \\\"coverArt\\\": {\\\"extractedColors\\\": {\\\"colorRaw\\\": {\\\"hex\\\": \\\"str\\\"}}, \\\"sources\\\": [{\\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"int\\\", \\\"height\\\": \\\"int\\\", \\\"_list_length\\\": 3}]}, \\\"discs\\\": {\\\"totalCount\\\": \\\"int\\\", \\\"items\\\": [{\\\"number\\\": \\\"int\\\", \\\"tracks\\\": {\\\"totalCount\\\": \\\"int\\\"}, \\\"_list_length\\\": 1}]}, \\\"tracks\\\": {\\\"totalCount\\\": \\\"int\\\", \\\"items\\\": [{\\\"track\\\": {\\\"playability\\\": {\\\"playable\\\": \\\"bool\\\", \\\"reason\\\": \\\"str\\\"}, \\\"duration\\\": {\\\"totalMilliseconds\\\": \\\"int\\\"}}, \\\"_list_length\\\": 10}]}, \\\"releases\\\": {\\\"totalCount\\\": \\\"int\\\", \\\"items\\\": \\\"empty list\\\"}, \\\"type\\\": \\\"str\\\", \\\"date\\\": {\\\"isoString\\\": \\\"str\\\", \\\"precision\\\": \\\"str\\\"}, \\\"playability\\\": {\\\"playable\\\": \\\"bool\\\", \\\"reason\\\": \\\"str\\\"}, \\\"label\\\": \\\"str\\\", \\\"copyright\\\": {\\\"totalCount\\\": \\\"int\\\", \\\"items\\\": [{\\\"type\\\": \\\"str\\\", \\\"text\\\": \\\"st\"", "metadata": {}}
{"_id": "1243", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Download locations, api_description:Downloads a list of Locations, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1244", "title": "", "text": "category_name:Medical, tool_name:23andMe, api_name:publish_get by  link, api_description:, required_params: [{\"name\": \"profile_id\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"feature_id\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"link_id\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1245", "title": "", "text": "category_name:Finance, tool_name:Alpaca Trading, api_name:Get the clock, api_description:Returns the market clock, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1246", "title": "", "text": "category_name:Transportation, tool_name:Car API, api_name:Makes, api_description:Search makes by name and year., required_params: [], optional_params: [], return_schema: {\"exception\": \"str\", \"message\": \"str\", \"url\": \"str\", \"code\": \"int\"}", "metadata": {}}
{"_id": "1247", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:Title Details, api_description:Get the details for a specific title, using the Watchmode universal ID., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\\n\\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. \"}], optional_params: [], return_schema: {\"id\": \"int\", \"title\": \"str\", \"original_title\": \"str\", \"plot_overview\": \"str\", \"type\": \"str\", \"runtime_minutes\": \"NoneType\", \"year\": \"int\", \"end_year\": \"int\", \"release_date\": \"str\", \"imdb_id\": \"str\", \"tmdb_id\": \"int\", \"tmdb_type\": \"str\", \"genres\": [\"list of int with length 3\"], \"genre_names\": [\"list of str with length 3\"], \"user_rating\": \"float\", \"critic_score\": \"int\", \"us_rating\": \"str\", \"poster\": \"str\", \"backdrop\": \"str\", \"original_language\": \"str\", \"english_title\": \"str\", \"similar_titles\": [\"list of int with length 25\"], \"networks\": [\"list of int with length 1\"], \"network_names\": [\"list of str with length 1\"], \"relevance_percentile\": \"float\", \"trailer\": \"str\", \"trailer_thumbnail\": \"str\"}", "metadata": {}}
{"_id": "1248", "title": "", "text": "category_name:Education, tool_name:Helioviewer v1, api_name:queueMovie, api_description:Create a custom movie by submitting a request to the movie generation queue.  The response returned will provide you with a unique Movie ID that can be used to check on the status of your movie (via `getMovieStatus`) and to download your movie (via `downloadMovie`)., required_params: [{\"name\": \"startTime\", \"type\": \"STRING\", \"description\": \"Desired date and time of the first frame of the movie. ISO 8601 combined UTC date and time UTC format.\"}, {\"name\": \"endTime\", \"type\": \"STRING\", \"description\": \"Desired date and time of the final frame of the movie. ISO 8601 combined UTC date and time UTC format.\"}, {\"name\": \"layers\", \"type\": \"STRING\", \"description\": \"Image datasource layer(s) to include in the movie.\"}, {\"name\": \"events\", \"type\": \"STRING\", \"description\": \"List feature/event types and FRMs to use to annoate the movie.  Use the empty string to indicate that no feature/event annotations should be shown.\"}, {\"name\": \"eventsLabels\", \"type\": \"BOOLEAN\", \"description\": \"Optionally annotate each event marker with a text label.\"}, {\"name\": \"imageScale\", \"type\": \"NUMBER\", \"description\": \"Image scale in arcseconds per pixel.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1249", "title": "", "text": "category_name:Education, tool_name:Helioviewer v1, api_name:getYouTubeAuth, api_description:Request authorization from the user via a Google / YouTube authorization flow to permit Helioviewer to upload videos on behalf of the user., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Unique movie identifier (provided by the response to a `queueMovie` request).\"}, {\"name\": \"title\", \"type\": \"STRING\", \"description\": \"Movie title.\"}, {\"name\": \"description\", \"type\": \"STRING\", \"description\": \"Move description.\"}, {\"name\": \"tags\", \"type\": \"STRING\", \"description\": \"Movie keyword tags (comma separated).\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1250", "title": "", "text": "category_name:Travel, tool_name:Flightera Flight Data, api_name:flightStatistics, api_description:Returns statistics for a flight number with one entry per route flown. Statistics are updated daily.\nThe query can be filtered by route.\nStatistics are always as of today, please contact us if you require historical statistics., required_params: [{\"name\": \"flnr\", \"type\": \"STRING\", \"description\": \"The flight number to request\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1251", "title": "", "text": "category_name:Transportation, tool_name:TimeTable Lookup , api_name:codes - Meal Codes, api_description:Return a list of meal code used by the airlines, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1252", "title": "", "text": "category_name:Transportation, tool_name:TimeTable Lookup , api_name:airports - Metro IATA codes, api_description:Returns a list of metro IATA codes, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1253", "title": "", "text": "category_name:Transportation, tool_name:TimeTable Lookup , api_name:airports - Airports in a country, api_description:Returns a list of airports in a country, required_params: [{\"name\": \"countryiatacode\", \"type\": \"string\", \"description\": \"Country IATA code\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1254", "title": "", "text": "category_name:Travel, tool_name:Flightera Flight Data, api_name:airportMetar, api_description:Returns the most recent METAR for an airport specified by the given ident.\nIncludes a parsed version of the METAR., required_params: [{\"name\": \"ident\", \"type\": \"STRING\", \"description\": \"The ident of the airport (e.g. as returned by /airport/search)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1255", "title": "", "text": "category_name:Data, tool_name:Dicolink, api_name:Get Definitions, api_description:Get definition of a word, required_params: [{\"name\": \"mot\", \"type\": \"string\", \"description\": \"Set the word you want to search\"}], optional_params: [], return_schema: {\"id\": \"str\", \"nature\": \"str\", \"source\": \"str\", \"attributionText\": \"str\", \"attributionUrl\": \"str\", \"mot\": \"str\", \"definition\": \"str\", \"dicolinkUrl\": \"str\"}", "metadata": {}}
{"_id": "1256", "title": "", "text": "category_name:Data, tool_name:Dicolink, api_name:Get Random Word, api_description:Get random word, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1257", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Search (departures, one way), api_description:Returns a set of flights for departure (one way flight search or return/ multi-city flight search) through the getFlightDepartures endpoint, required_params: [{\"name\": \"adults\", \"type\": \"NUMBER\", \"description\": \"Number of adults\"}, {\"name\": \"sid\", \"type\": \"STRING\", \"description\": \"Session ID. Random string\"}, {\"name\": \"departure_date\", \"type\": \"STRING\", \"description\": \"Departure date\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1258", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Belgium Songs, api_description:Provide the Belgium Songs chart information, required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"date format(YYYY-MM-DD)\"}, {\"name\": \"range\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1259", "title": "", "text": "category_name:Science, tool_name:Daily atmosphere  carbon dioxide concentration, api_name:Carbon dioxide endpoint, api_description:The response will be an object with no CORS resources enabled., required_params: [], optional_params: [], return_schema: {\"co2\": [{\"year\": \"str\", \"month\": \"str\", \"day\": \"str\", \"cycle\": \"str\", \"trend\": \"str\", \"_list_length\": 3799}]}", "metadata": {}}
{"_id": "1260", "title": "", "text": "category_name:Movies, tool_name:Streaming Availability, api_name:Services (FREE), api_description:Get the list of supported services and details about them, required_params: [], optional_params: [], return_schema: \"{\\\"result\\\": {\\\"all4\\\": {\\\"id\\\": \\\"str\\\", \\\"countries\\\": {\\\"gb\\\": {\\\"supportedStreamingTypes\\\": {\\\"addon\\\": \\\"bool\\\", \\\"buy\\\": \\\"bool\\\", \\\"free\\\": \\\"bool\\\", \\\"rent\\\": \\\"bool\\\", \\\"subscription\\\": \\\"bool\\\"}, \\\"addOns\\\": {}}, \\\"ie\\\": {\\\"supportedStreamingTypes\\\": {\\\"addon\\\": \\\"bool\\\", \\\"buy\\\": \\\"bool\\\", \\\"free\\\": \\\"bool\\\", \\\"rent\\\": \\\"bool\\\", \\\"subscription\\\": \\\"bool\\\"}, \\\"addOns\\\": {}}}}, \\\"apple\\\": {\\\"id\\\": \\\"str\\\", \\\"countries\\\": {\\\"ae\\\": {\\\"supportedStreamingTypes\\\": {\\\"addon\\\": \\\"bool\\\", \\\"buy\\\": \\\"bool\\\", \\\"free\\\": \\\"bool\\\", \\\"rent\\\": \\\"bool\\\", \\\"subscription\\\": \\\"bool\\\"}, \\\"addOns\\\": {\\\"tvs.sbd.1000234\\\": {\\\"id\\\": \\\"str\\\", \\\"displayName\\\": \\\"str\\\", \\\"homePage\\\": \\\"str\\\", \\\"themeColorCode\\\": \\\"str\\\", \\\"image\\\": \\\"str\\\"}, \\\"tvs.sbd.1000358\\\": {\\\"id\\\": \\\"str\\\", \\\"displayName\\\": \\\"str\\\", \\\"homePage\\\": \\\"str\\\", \\\"themeColorCode\\\": \\\"str\\\", \\\"image\\\": \\\"str\\\"}, \\\"tvs.sbd.3000\\\": {\\\"id\\\": \\\"str\\\", \\\"displayName\\\": \\\"str\\\", \\\"homePage\\\": \\\"str\\\", \\\"themeColorCode\\\": \\\"str\\\", \\\"image\\\": \\\"str\\\"}}}, \\\"ar\\\": {\\\"supportedStreamingTypes\\\": {\\\"addon\\\": \\\"bool\\\", \\\"buy\\\": \\\"bool\\\", \\\"free\\\": \\\"bool\\\", \\\"rent\\\": \\\"bool\\\", \\\"subscription\\\": \\\"bool\\\"}, \\\"addOns\\\": {\\\"tvs.sbd.1000212\\\":\"", "metadata": {}}
{"_id": "1261", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Market Movers - Forex, api_description:Get the list of the top gaining or losing forex today.\n\nTop gainers are ordered by the highest rate of price increase since the previous day's close. Top losers are ordered by the highest percentage of price decrease since the last day.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1262", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:T3MA, api_description:Triple Exponential Moving Average(T3MA) makes better smoothing of moving average than the classical TEMA indicator by extending the lookback period and applying other enhanced parameters., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1263", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:CCI, api_description:Commodity Channel Index(CCI) is a universal indicator that can help to identify new trends and assess current critical conditions., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1264", "title": "", "text": "category_name:Finance, tool_name:BB Finance, api_name:stock/get-financials, api_description:Get financial information of stocks, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"The id of stickers, use market/auto-complete API to get correct values\"}], optional_params: [], return_schema: {\"result\": [{\"name\": \"str\", \"securityID\": \"str\", \"timeBasedSheets\": [{\"name\": \"str\", \"columnHeadings\": [\"list of str with length 4\"], \"chartData\": [{\"name\": \"str\", \"chartType\": \"str\", \"isPercentage\": \"bool\", \"values\": [\"list of float with length 4\"], \"_list_length\": 3}], \"_list_length\": 2}], \"_list_length\": 3}]}", "metadata": {}}
{"_id": "1265", "title": "", "text": "category_name:Finance, tool_name:BB Finance, api_name:stories/detail, api_description:Get full story information, required_params: [{\"name\": \"internalID\", \"type\": \"STRING\", \"description\": \"Get suitable value from .../stories/list or .../news/list or .../news/list-by-region endpoints\"}], optional_params: [], return_schema: \"{\\\"id\\\": \\\"str\\\", \\\"title\\\": \\\"str\\\", \\\"summary\\\": \\\"str\\\", \\\"secondaryBrands\\\": [\\\"list of str with length 1\\\"], \\\"internalID\\\": \\\"str\\\", \\\"byline\\\": \\\"str\\\", \\\"archived\\\": \\\"bool\\\", \\\"longURL\\\": \\\"str\\\", \\\"shortURL\\\": \\\"str\\\", \\\"authoredRegion\\\": \\\"str\\\", \\\"primarySite\\\": \\\"str\\\", \\\"brand\\\": \\\"str\\\", \\\"primaryCategory\\\": \\\"str\\\", \\\"attributor\\\": \\\"str\\\", \\\"published\\\": \\\"int\\\", \\\"updatedAt\\\": \\\"int\\\", \\\"resourceType\\\": \\\"str\\\", \\\"resourceId\\\": \\\"str\\\", \\\"wordCount\\\": \\\"int\\\", \\\"premium\\\": \\\"bool\\\", \\\"readings\\\": [{\\\"url\\\": \\\"str\\\", \\\"voice\\\": \\\"str\\\", \\\"durationMs\\\": \\\"int\\\", \\\"_list_length\\\": 1}], \\\"type\\\": \\\"str\\\", \\\"card\\\": \\\"str\\\", \\\"abstract\\\": [\\\"list of str with length 2\\\"], \\\"adParams\\\": {\\\"dfpTarget\\\": {\\\"ni\\\": \\\"str\\\", \\\"kwl\\\": \\\"str\\\", \\\"sites\\\": \\\"str\\\", \\\"url\\\": \\\"str\\\"}}, \\\"ledeImage\\\": {\\\"imageURLs\\\": {\\\"default\\\": \\\"str\\\", \\\"large\\\": \\\"str\\\"}, \\\"caption\\\": \\\"str\\\", \\\"credit\\\": \\\"str\\\"}, \\\"securityIDs\\\": [\\\"list of str with length 1\\\"], \\\"topics\\\": [{\\\"id\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"referringId\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"components\\\": [{\\\"role\\\": \\\"str\\\", \\\"parts\\\": [{\\\"role\\\": \\\"str\\\", \\\"parts\\\": [{\\\"role\\\": \\\"str\\\", \\\"text\\\": \\\"str\\\", \\\"se\"", "metadata": {}}
{"_id": "1266", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:MEDPRICE, api_description:Median Price(MEDPRICE)., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1267", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:TRIMA, api_description:Triangular Moving Average(TRIMA) smooths out price fluctuations, but places more weight on the prices in middle of the time period., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1268", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:news/get-details, api_description:Get news details, required_params: [{\"name\": \"sourceId\", \"type\": \"STRING\", \"description\": \"Value of sourceId returned in .../news/list endpoint\"}, {\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Value of id returned in .../news/list endpoint\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1269", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-security-info, api_description:Mapped to Quote section in Quote tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1270", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:ROCR, api_description:Rate of change ratio(ROCR) calculates the ratio between the current price and price n timeperiods ago. Formula: (price / prevPrice)., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1271", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:ICHIMOKU, api_description:Ichimoku Kinkō Hyō(ICHIMOKU) is a group of technical indicators that shows trend direction, momentum, and support & resistance levels. Overall it tends to improve the accuracy of forecasts., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1272", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:market/v2/auto-complete, api_description:Get auto suggestion by word or phase, required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"Any thing you are familiar with, stock, index, organization, etc...\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1273", "title": "", "text": "category_name:Communication, tool_name:31Events - Send Native Calendar Invites, api_name:EventList, api_description:, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1274", "title": "", "text": "category_name:Devices, tool_name:Geolocation Simulation For Mobile Apps, api_name:List All Simulations, api_description:, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1275", "title": "", "text": "category_name:Devices, tool_name:Geolocation Simulation For Mobile Apps, api_name:View User's Profile, api_description:View Profile (Enter your user-id in route), required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1276", "title": "", "text": "category_name:Devices, tool_name:Geolocation Simulation For Mobile Apps, api_name:Simulations By Application Id, api_description:Enter applicationID in route, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1277", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:.us, api_description:Check if .us domain is registered, required_params: [{\"name\": \"name\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1278", "title": "", "text": "category_name:eCommerce, tool_name:Magic AliExpress, api_name:/api/product/{productID}/feedbacks, api_description:This ressource displays the feedbacks for one product, required_params: [{\"name\": \"productID\", \"type\": \"NUMBER\", \"description\": \"The Aliexpress product ID\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1279", "title": "", "text": "category_name:Tools, tool_name:Bulk Whatsapp Validator, api_name:Is a business? (free), api_description:You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nRequests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not., required_params: [{\"name\": \"phone\", \"type\": \"NUMBER\", \"description\": \"The phone number must be written as a number (including countrycode); \\ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.\"}, {\"name\": \"token\", \"type\": \"STRING\", \"description\": \"To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1280", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-realtime-data, api_description:Get detail information of stock, market, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1281", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-mini-chart-realtime-data, api_description:Used to draw chart in Quote tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1282", "title": "", "text": "category_name:Media, tool_name:Vimeo, api_name:GetRelatedTags, api_description:Get a list of related tags for a category., required_params: [{\"name\": \"category\", \"type\": \"STRING\", \"description\": \"The Name of category\"}, {\"name\": \"format\", \"type\": \"STRING\", \"description\": \"json or xml or php\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1283", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/get-realtime-data, api_description:Get realtime data related to an ETF or FUND, required_params: [{\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}, {\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1284", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:EPS Revisions, api_description:This API endpoint returns analysts’ revisions of a company's future quarterly and annual earnings per share (EPS) over the last week and month.\n\nAvailability: Mega plan\nData weighting: 20 API credits per symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"code\": \"int\", \"message\": \"str\", \"status\": \"str\"}", "metadata": {}}
{"_id": "1285", "title": "", "text": "category_name:Location, tool_name:NAVITIME Geocoding, api_name:address, api_description:Return address information such as a postal code or latitude/longitude from free keyword of request parameters., required_params: [], optional_params: [], return_schema: {\"status_code\": \"int\", \"message\": \"str\", \"details\": {\"code\": \"str\", \"kana_row\": \"str\", \"level_from\": \"str\", \"level_to\": \"str\", \"word\": \"str\"}}", "metadata": {}}
{"_id": "1286", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Admin Divisions, api_description:Find administrative divisions, filtering by optional criteria. If no criteria are set, you will get back all known divisions with a population of at least 1000, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1287", "title": "", "text": "category_name:Finance, tool_name:Investing - Cryptocurrency Markets, api_name:get-ico-calendar, api_description:Get ICO calendar, required_params: [], optional_params: [], return_schema: {\"data\": [{\"screen_ID\": \"str\", \"screen_data\": {\"icoData\": {\"tabname\": \"str\", \"categories\": [{\"category_id\": \"str\", \"category_name\": \"str\", \"_list_length\": 13}]}}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "1288", "title": "", "text": "category_name:Finance, tool_name:Investing - Cryptocurrency Markets, api_name:coins/list, api_description:List all available cryptocurrencies, required_params: [{\"name\": \"edition_currency_id\", \"type\": \"NUMBER\", \"description\": \"The value of edition&#95;currency&#95;id returned in .../get-meta-data endpoint\"}], optional_params: [], return_schema: \"{\\\"data\\\": [{\\\"screen_ID\\\": \\\"str\\\", \\\"screen_data\\\": {\\\"next_page\\\": \\\"int\\\", \\\"crypto_data\\\": [{\\\"id\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"country_id\\\": \\\"str\\\", \\\"pair_id\\\": \\\"int\\\", \\\"currency_symbol\\\": \\\"str\\\", \\\"inst_price_usd\\\": \\\"str\\\", \\\"pair_change_arrow\\\": \\\"str\\\", \\\"change_percent_1d\\\": \\\"str\\\", \\\"pair_change_percent_numeric\\\": \\\"str\\\", \\\"change_percent_1d_color\\\": \\\"str\\\", \\\"change_percent_7d\\\": \\\"str\\\", \\\"percent_change_7d_plain\\\": \\\"str\\\", \\\"change_percent_7d_color\\\": \\\"str\\\", \\\"cross_rates_name\\\": \\\"str\\\", \\\"inst_price_btc\\\": \\\"str\\\", \\\"inst_market_cap\\\": \\\"str\\\", \\\"inst_market_cap_plain\\\": \\\"str\\\", \\\"volume_24h_usd\\\": \\\"str\\\", \\\"volume_24h_usd_plain\\\": \\\"str\\\", \\\"total_volume_plain\\\": \\\"str\\\", \\\"total_volume\\\": \\\"str\\\", \\\"flag_url\\\": \\\"str\\\", \\\"logo_url\\\": \\\"str\\\", \\\"circulating_supply\\\": \\\"str\\\", \\\"circulating_supply_plain\\\": \\\"str\\\", \\\"_list_length\\\": 50}], \\\"convertionRates\\\": \\\"empty list\\\", \\\"majorCurrencies\\\": [{\\\"currency_ID\\\": \\\"int\\\", \\\"currency_short_name\\\": \\\"str\\\", \\\"major\\\": \\\"str\\\", \\\"currency_symbol\\\": \\\"str\\\", \\\"is_crypto\\\": \\\"str\\\", \\\"fullname\\\": \\\"str\\\", \\\"country_id\\\": \\\"str\\\", \\\"_list_length\\\": 10}], \\\"r\"", "metadata": {}}
{"_id": "1289", "title": "", "text": "category_name:Weather, tool_name:WeatherAPI.com, api_name:IP Lookup API, api_description:IP Lookup API method allows a user to get up to date information for an IP address in json., required_params: [{\"name\": \"q\", \"type\": \"STRING\", \"description\": \"e.g: q=auto:ip\\n\\nIP address (IPv4 and IPv6 supported) e.g: q=100.0.0.1\"}], optional_params: [], return_schema: {\"error\": {\"code\": \"int\", \"message\": \"str\"}}", "metadata": {}}
{"_id": "1290", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Artist appears on, api_description:Get artist appears on albums (max 50), required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Artist ID\"}], optional_params: [], return_schema: {\"data\": {\"artist\": {\"id\": \"str\", \"uri\": \"str\", \"profile\": {\"name\": \"str\"}, \"relatedContent\": {\"appearsOn\": {\"totalCount\": \"int\", \"items\": [{\"releases\": {\"totalCount\": \"int\", \"items\": [{\"uri\": \"str\", \"id\": \"str\", \"name\": \"str\", \"artists\": {\"items\": [{\"uri\": \"str\", \"profile\": {\"name\": \"str\"}, \"_list_length\": 1}]}, \"coverArt\": {\"sources\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 3}]}, \"sharingInfo\": {\"shareId\": \"str\", \"shareUrl\": \"str\"}, \"_list_length\": 1}]}, \"_list_length\": 50}]}}}}, \"extensions\": \"empty list\"}", "metadata": {}}
{"_id": "1291", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Artist singles, api_description:Get artist singles, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Artist ID\"}], optional_params: [], return_schema: {\"data\": {\"artist\": {\"discography\": {\"singles\": {\"totalCount\": \"int\", \"items\": [{\"releases\": {\"items\": [{\"id\": \"str\", \"uri\": \"str\", \"name\": \"str\", \"type\": \"str\", \"date\": {\"year\": \"int\", \"isoString\": \"str\"}, \"coverArt\": {\"sources\": [{\"url\": \"str\", \"width\": \"int\", \"height\": \"int\", \"_list_length\": 3}]}, \"playability\": {\"playable\": \"bool\", \"reason\": \"str\"}, \"sharingInfo\": {\"shareId\": \"str\", \"shareUrl\": \"str\"}, \"tracks\": {\"totalCount\": \"int\"}, \"_list_length\": 1}]}, \"_list_length\": 20}]}}}}, \"extensions\": \"empty list\"}", "metadata": {}}
{"_id": "1292", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Playlist tracks, api_description:Get playlist tracks, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Playlist ID\"}], optional_params: [], return_schema: \"{\\\"items\\\": [{\\\"added_at\\\": \\\"str\\\", \\\"added_by\\\": {\\\"external_urls\\\": {\\\"spotify\\\": \\\"str\\\"}, \\\"id\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\"}, \\\"is_local\\\": \\\"bool\\\", \\\"primary_color\\\": \\\"NoneType\\\", \\\"sharing_info\\\": {\\\"share_id\\\": \\\"str\\\", \\\"share_url\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\"}, \\\"track\\\": {\\\"album\\\": {\\\"album_type\\\": \\\"str\\\", \\\"artists\\\": [{\\\"external_urls\\\": {\\\"spotify\\\": \\\"str\\\"}, \\\"id\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\", \\\"_list_length\\\": 2}], \\\"external_urls\\\": {\\\"spotify\\\": \\\"str\\\"}, \\\"id\\\": \\\"str\\\", \\\"images\\\": [{\\\"height\\\": \\\"int\\\", \\\"url\\\": \\\"str\\\", \\\"width\\\": \\\"int\\\", \\\"_list_length\\\": 3}], \\\"is_playable\\\": \\\"bool\\\", \\\"name\\\": \\\"str\\\", \\\"release_date\\\": \\\"str\\\", \\\"release_date_precision\\\": \\\"str\\\", \\\"total_tracks\\\": \\\"int\\\", \\\"type\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\"}, \\\"artists\\\": [{\\\"external_urls\\\": {\\\"spotify\\\": \\\"str\\\"}, \\\"id\\\": \\\"str\\\", \\\"name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"uri\\\": \\\"str\\\", \\\"_list_length\\\": 2}], \\\"disc_number\\\": \\\"int\\\", \\\"duration_ms\\\": \\\"int\\\", \\\"episode\\\": \\\"bool\\\", \\\"explicit\\\": \\\"bool\\\", \\\"external_ids\\\": {\\\"isrc\\\": \\\"str\\\"}, \\\"external_urls\\\": {\\\"spotify\\\": \\\"str\\\"}, \\\"id\\\": \\\"str\\\", \\\"is_local\\\": \\\"boo\"", "metadata": {}}
{"_id": "1293", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Album tracks, api_description:Get album tracks, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Album ID\"}], optional_params: [], return_schema: {\"data\": {\"album\": {\"playability\": {\"playable\": \"bool\"}, \"tracks\": {\"totalCount\": \"int\", \"items\": [{\"uid\": \"str\", \"track\": {\"saved\": \"bool\", \"uri\": \"str\", \"name\": \"str\", \"playcount\": \"str\", \"discNumber\": \"int\", \"trackNumber\": \"int\", \"contentRating\": {\"label\": \"str\"}, \"relinkingInformation\": \"NoneType\", \"duration\": {\"totalMilliseconds\": \"int\"}, \"playability\": {\"playable\": \"bool\"}, \"artists\": {\"items\": [{\"uri\": \"str\", \"profile\": {\"name\": \"str\"}, \"_list_length\": 1}]}}, \"_list_length\": 10}]}}}, \"extensions\": \"empty list\"}", "metadata": {}}
{"_id": "1294", "title": "", "text": "category_name:Medical, tool_name:23andMe, api_name:haplogroups, api_description:For the user's profile, gets maternal and paternal haplogroups, as well as terminal SNPs. Maternal terminal SNPs include the rsid and rCRS reference position, while the paternal ones include the rsid and ISOGG SNP.  Note: if the profile belongs to a female, the paternal (y) haplogroup and terminal SNP information will be null., required_params: [{\"name\": \"profile_id\", \"type\": \"STRING\", \"description\": \"profile_id\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1295", "title": "", "text": "category_name:Medical, tool_name:23andMe, api_name:drug_responses, api_description:Our analysis of how each profile responds to these drugs (starred reports). status is reduced, typical, or increased for a person, not_applicable if the drug is not applicable to them (e.g., the oral contraceptives report is for women only), or null if they're not analyzed at any of the markers., required_params: [{\"name\": \"profile_id\", \"type\": \"STRING\", \"description\": \"profile_id\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1296", "title": "", "text": "category_name:Medical, tool_name:23andMe, api_name:neanderthal, api_description:Estimated genome-wide proportion of Neanderthal ancestry for the user's profile. Most users have between 0.01 and 0.04 Neanderthal ancestry -- read a full explanation of the science. proportion is -1 for un-genotyped (or as-of-yet uncomputed) profiles., required_params: [{\"name\": \"profile_id\", \"type\": \"STRING\", \"description\": \"profile_id\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1297", "title": "", "text": "category_name:Transportation, tool_name:Car API, api_name:Engines, api_description:To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"horsepower_hp\", \"op\": \">=\", \"val\": 100}, {\"field\": \"horsepower_hp\", \"op\": \"<=\", \"val\": 300}]`\n\nSee /api/vehicle-attributes for a complete list of vehicle attributes.\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, fuel_type, engine_type, transmission, drive_type, cam_type, valve_timing, valves, horsepower_hp, size, cylinders, make_id, make_model_id, and make_model_trim_id., required_params: [], optional_params: [], return_schema: {\"exception\": \"str\", \"message\": \"str\", \"url\": \"str\", \"code\": \"int\"}", "metadata": {}}
{"_id": "1298", "title": "", "text": "category_name:Finance, tool_name:Alpaca Trading, api_name:Get open positions, api_description:Retrieves a list of the account's open positions., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1299", "title": "", "text": "category_name:Finance, tool_name:Coinbase, api_name:List recent buys and sells, api_description:List a user's recent buys and sells, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1300", "title": "", "text": "category_name:Finance, tool_name:Coinbase, api_name:List recent transactions, api_description:List a user's recent transactions., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1301", "title": "", "text": "category_name:Travel, tool_name:Hotels, api_name:reviews/v2/list (Deprecated), api_description:Get all reviews of specific property, required_params: [{\"name\": \"hotelId\", \"type\": \"STRING\", \"description\": \"The value of id field that received from \\u2026/properties/list endpoint\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1302", "title": "", "text": "category_name:Movies, tool_name:OTT details, api_name:OTT Providers, api_description:Get  information on OTT platforms we suuport ., required_params: [{\"name\": \"region\", \"type\": \"STRING\", \"description\": \"currently only USA and India region is supported enter param 'US' for USA and 'IN' for India.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1303", "title": "", "text": "category_name:Education, tool_name:Helioviewer v1, api_name:getJP2Image, api_description:Download a JP2 image for the specified datasource that is the closest match in time to the `date` requested.\n\n        Either `sourceId` must be specified, or the combination of `observatory`, `instrument`, `detector`, and `measurement`., required_params: [{\"name\": \"date\", \"type\": \"STRING\", \"description\": \"Desired date/time of the JP2 image. ISO 8601 combined UTC date and time UTC format.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1304", "title": "", "text": "category_name:Weather, tool_name:Ambee Air Quality, api_name:By City, api_description:Get the latest air quality data for your city, required_params: [{\"name\": \"city\", \"type\": \"STRING\", \"description\": \"The name of the city for which you want the air quality\"}, {\"name\": \"limit\", \"type\": \"NUMBER\", \"description\": \"The number of rows to be returned\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1305", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Seat Map, api_description:Gets the seat map of all flights in a contract bundle through the getFlightSeatMap endpoint, required_params: [{\"name\": \"ppn_bundle\", \"type\": \"STRING\", \"description\": \"The ppn_bundle for the seat map. Can be retrieved from the ppn_seat_bundle of FlightContract, or FlightLookUp.\"}, {\"name\": \"sid\", \"type\": \"STRING\", \"description\": \"Session ID. Random string ex.: j10k11l12m13n14\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1306", "title": "", "text": "category_name:Food, tool_name:Yummly, api_name:reviews/list, api_description:List reviews, feedback from other users, required_params: [{\"name\": \"offset\", \"type\": \"NUMBER\", \"description\": \"The offset of items to be ignored in response for paging\"}, {\"name\": \"globalId\", \"type\": \"STRING\", \"description\": \"The value of globalId field returned in feeds/list and feeds/search API\"}, {\"name\": \"limit\", \"type\": \"NUMBER\", \"description\": \"Number of items returned per response\"}], optional_params: [], return_schema: \"{\\\"averageRating\\\": \\\"float\\\", \\\"totalReviewCount\\\": \\\"int\\\", \\\"reviewImages\\\": [{\\\"isDisabled\\\": \\\"bool\\\", \\\"commentId\\\": \\\"str\\\", \\\"originalImageUrl\\\": \\\"str\\\", \\\"resizableImageUrl\\\": \\\"str\\\", \\\"globalID\\\": \\\"str\\\", \\\"id\\\": \\\"str\\\", \\\"user\\\": {\\\"profileUrl\\\": \\\"str\\\", \\\"profileName\\\": \\\"str\\\", \\\"displayName\\\": \\\"str\\\", \\\"firstName\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"pictureUrl\\\": \\\"NoneType\\\", \\\"id\\\": \\\"str\\\", \\\"lastName\\\": \\\"str\\\", \\\"userName\\\": \\\"str\\\"}, \\\"_list_length\\\": 5}], \\\"reviews\\\": [{\\\"isDisabled\\\": \\\"bool\\\", \\\"flagCount\\\": \\\"int\\\", \\\"locale\\\": \\\"str\\\", \\\"images\\\": \\\"empty list\\\", \\\"createTime\\\": \\\"str\\\", \\\"commentType\\\": \\\"str\\\", \\\"thisUserActions\\\": \\\"NoneType\\\", \\\"id\\\": \\\"str\\\", \\\"globalID\\\": \\\"str\\\", \\\"helpfulCount\\\": \\\"int\\\", \\\"profiles\\\": [{\\\"profileUrl\\\": \\\"str\\\", \\\"profileName\\\": \\\"str\\\", \\\"displayName\\\": \\\"str\\\", \\\"firstName\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"pictureUrl\\\": \\\"NoneType\\\", \\\"id\\\": \\\"str\\\", \\\"lastName\\\": \\\"str\\\", \\\"userName\\\": \\\"str\\\", \\\"_list_length\\\": 1}], \\\"user\\\": {\\\"profileUrl\\\": \\\"str\\\", \\\"profileName\\\": \\\"str\\\", \\\"displayName\\\": \\\"str\\\", \\\"firstName\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"pictureUrl\\\": \\\"NoneType\\\", \\\"id\\\": \\\"str\\\", \\\"lastN\"", "metadata": {}}
{"_id": "1307", "title": "", "text": "category_name:Finance, tool_name:Coinbase, api_name:Show transaction details, api_description:Show details for an individual transaction., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1308", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:HT_TRENDMODE, api_description:Hilbert Transform Trend vs. Cycle Mode(HT_TRENDMODE) is part of Hilbert Transforms concepts. You can read more about it in the Rocket Science for Traders book by John F. Ehlers., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1309", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/portfolio/get-asset-allocation, api_description:Get asset allocation as displayed in the Portfolio tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1310", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-risk-rating-breakdown, api_description:Get risk rating breakdown in the Sustainability tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1311", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:MINUS_DI, api_description:Minus Directional Indicator(MINUS_DI) is a component of the Average Directional Index(ADX), and it measures the existence of downtrend., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1312", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Profile, api_description:Returns general information about the company.\n\nAvailability: Pro plan\nData weighting: 10 API credits per symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1313", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/people/get-proxy-voting-shareholder, api_description:Get proxy voting shareholder as displayed in the People tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1314", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:APO, api_description:Absolute Price Oscillator(APO) calculates the difference between two price moving averages., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1315", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/price/get-cost-illustration, api_description:Get cost illustration as displayed in the Price tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1316", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Dividends, api_description:Returns the amount of dividends paid out for the last 10+ years.\n\nAvailability: Pro plan\nData weighting: 20 API credits per symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1317", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Risk, api_description:This API request returns core metrics to measure the risk of investing in a mutual fund.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Symbol ticker of mutual fund\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1318", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Sustainability, api_description:This API request returns brief information on mutual fund sustainability and ESG.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Symbol ticker of mutual fund\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1319", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:ADX, api_description:Average Directional Index(ADX) is used to decide if the price trend is strong., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1320", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Market Movers, api_description:Get the list of the top gaining or losing mutual funds today.\n\nTop gainers are ordered by the highest rate of price increase since the previous day's close. Top losers are ordered by the highest percentage of price decrease since the last day.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1321", "title": "", "text": "category_name:Mapping, tool_name:ca.boundaries.io, api_name:Query for Hexagon by H3Index, api_description:Create a h3 hexagon with any h3Index value in the world., required_params: [{\"name\": \"h3Index\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"timestamp\": \"str\", \"status\": \"int\", \"error\": \"str\", \"message\": \"str\", \"path\": \"str\"}", "metadata": {}}
{"_id": "1322", "title": "", "text": "category_name:Mapping, tool_name:ca.boundaries.io, api_name:Query for City Boundary by City name, api_description:Query for City Boundary by City name, required_params: [{\"name\": \"name\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"type\": \"str\", \"features\": [{\"type\": \"str\", \"properties\": {\"province\": [\"list of str with length 1\"], \"city\": [\"list of str with length 1\"]}, \"geometry\": {\"type\": \"str\", \"geometries\": [{\"type\": \"str\", \"coordinates\": [\"list of list with length 10\"], \"_list_length\": 1}]}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "1323", "title": "", "text": "category_name:Mapping, tool_name:ca.boundaries.io, api_name:Query for LDU boundary, api_description:Query by a LDU Postal Code, required_params: [{\"name\": \"postal-ldu\", \"type\": \"STRING\", \"description\": \"Query by LDU code.\"}], optional_params: [], return_schema: {\"type\": \"str\", \"features\": [{\"type\": \"str\", \"properties\": {\"country\": \"str\", \"province\": \"str\", \"city\": \"str\", \"postal-fsa\": \"str\", \"postal-ldu-within-count\": \"int\", \"h3-index\": \"str\", \"h3-resolution\": \"int\", \"postal-ldu\": \"str\", \"postal-ldu-within\": \"str\"}, \"geometry\": {\"type\": \"str\", \"coordinates\": [\"list of list with length 1\"]}, \"_list_length\": 1}]}", "metadata": {}}
{"_id": "1324", "title": "", "text": "category_name:Education, tool_name:Learn to read and write Japanese kanji, api_name:Basic Search, api_description:A kanji character, Onyomi reading (katakana), Kunyomi reading (hiragana) or a kanji's simplified English meaning., required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"N.B. With Basic Search, Onyomi and Kunyomi values must be in katakana or hiragana.\"}], optional_params: [], return_schema: {\"kanji\": {\"character\": \"str\", \"stroke\": \"int\"}, \"radical\": {\"character\": \"str\", \"stroke\": \"int\", \"order\": \"int\"}}", "metadata": {}}
{"_id": "1325", "title": "", "text": "category_name:Education, tool_name:Learn to read and write Japanese kanji, api_name:Study list (AP exam), api_description:The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required., required_params: [{\"name\": \"list\", \"type\": \"STRING\", \"description\": \"Kanji divided into chapters (1-20) by Kanji alive\"}], optional_params: [], return_schema: {\"kanji\": {\"character\": \"str\", \"stroke\": \"int\"}, \"radical\": {\"character\": \"str\", \"stroke\": \"int\", \"order\": \"int\"}}", "metadata": {}}
{"_id": "1326", "title": "", "text": "category_name:Education, tool_name:Learn to read and write Japanese kanji, api_name:Kanji character, api_description:The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required., required_params: [{\"name\": \"kanji\", \"type\": \"STRING\", \"description\": \"Kanji character\"}], optional_params: [], return_schema: {\"kanji\": {\"character\": \"str\", \"stroke\": \"int\"}, \"radical\": {\"character\": \"str\", \"stroke\": \"int\", \"order\": \"int\"}}", "metadata": {}}
{"_id": "1327", "title": "", "text": "category_name:Sports, tool_name:Fitness Calculator, api_name:Ideal weight, api_description:Find four different ideal weight scores according to four different well-known equations which are Hamwi, Devine, Miller, Robinson.  There are two parameters which are age and height(cm) values., required_params: [{\"name\": \"gender\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"height\", \"type\": \"NUMBER\", \"description\": \"\"}], optional_params: [], return_schema: {\"status_code\": \"int\", \"request_result\": \"str\", \"data\": {\"Hamwi\": \"float\", \"Devine\": \"float\", \"Miller\": \"float\", \"Robinson\": \"float\"}}", "metadata": {}}
{"_id": "1328", "title": "", "text": "category_name:Sports, tool_name:Fitness Calculator, api_name:Food Names And Ids, api_description:Find food table ids for a sub-table in the food database., required_params: [], optional_params: [], return_schema: {\"status_code\": \"int\", \"request_result\": \"str\", \"data\": [{\"_id\": \"str\", \"dataType\": \"str\", \"subDataType\": \"str\", \"id\": \"str\", \"foodType\": \"str\", \"_list_length\": 17}]}", "metadata": {}}
{"_id": "1329", "title": "", "text": "category_name:Sports, tool_name:Fitness Calculator, api_name:Sub_Table Names, api_description:Find sub-table names of a table name in the food database., required_params: [{\"name\": \"tablename\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"status_code\": \"int\", \"request_result\": \"str\", \"data\": [{\"_id\": \"str\", \"dataType\": \"str\", \"id\": \"str\", \"subDataType\": \"str\", \"foodCount\": \"int\", \"_list_length\": 1}]}", "metadata": {}}
{"_id": "1330", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:review-filters/list, api_description:List supported options metadata for filtering reviews, required_params: [{\"name\": \"hotel_id\", \"type\": \"NUMBER\", \"description\": \"The value of hotel_id field from properties/list API\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1331", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:properties/get-policies, api_description:Get policies of property by id, required_params: [{\"name\": \"hotel_ids\", \"type\": \"NUMBER\", \"description\": \"The value of hotel_id field from properties/list API\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1332", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/risk/get-market-volatility-measures, api_description:Get market volatility measures in the Risk tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1333", "title": "", "text": "category_name:Finance, tool_name:Quandl, api_name:Get filtered time-series data, api_description:You can slice, transform and otherwise customize your time-series dataset prior to download by appending various optional parameters to your query.  Get monthly % changes in Facebook's closing price for the year 2014:, required_params: [{\"name\": \"dataset_code\", \"type\": \"STRING\", \"description\": \"The code for this time-series\"}, {\"name\": \"return_format\", \"type\": \"STRING\", \"description\": \"json, xml or csv\"}, {\"name\": \"database_code\", \"type\": \"STRING\", \"description\": \"The code for the database this time-series belongs to\"}], optional_params: [], return_schema: {\"dataset\": {\"id\": \"int\", \"dataset_code\": \"str\", \"database_code\": \"str\", \"name\": \"str\", \"description\": \"str\", \"refreshed_at\": \"str\", \"newest_available_date\": \"str\", \"oldest_available_date\": \"str\", \"column_names\": [\"list of str with length 2\"], \"frequency\": \"str\", \"type\": \"str\", \"premium\": \"bool\", \"limit\": \"int\", \"transform\": \"str\", \"column_index\": \"int\", \"start_date\": \"str\", \"end_date\": \"str\", \"data\": [\"list of list with length 11\"], \"collapse\": \"str\", \"order\": \"str\", \"database_id\": \"int\"}}", "metadata": {}}
{"_id": "1334", "title": "", "text": "category_name:Finance, tool_name:Fidelity Investments, api_name:quotes/get-mashup, api_description:Get additional information for specific quote, market, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Only one symbol is allowed\"}], optional_params: [], return_schema: \"{\\\"mashup\\\": {\\\"financialMetric\\\": {\\\"financialMetricDetails\\\": {\\\"financialMetricDetail\\\": [{\\\"secDetail\\\": {\\\"requested\\\": \\\"str\\\", \\\"classification\\\": \\\"str\\\", \\\"classificationType\\\": \\\"str\\\", \\\"symbol\\\": \\\"str\\\", \\\"CUSIP\\\": \\\"str\\\"}, \\\"currentRatioTTM\\\": \\\"float\\\", \\\"debtToTotCapTTM\\\": \\\"float\\\", \\\"intCoverageMRQ\\\": \\\"float\\\", \\\"longTermDebtToEquityTTM\\\": \\\"float\\\", \\\"_list_length\\\": 1}]}}, \\\"marketSentiment\\\": {\\\"sentimentDetails\\\": [{\\\"symbol\\\": \\\"str\\\", \\\"shortTermDirection\\\": \\\"str\\\", \\\"shortTermScore\\\": \\\"int\\\", \\\"intermediateTermDirection\\\": \\\"str\\\", \\\"intermediateTermScore\\\": \\\"int\\\", \\\"longTermDirection\\\": \\\"str\\\", \\\"longTermScore\\\": \\\"int\\\", \\\"addlInfoLink\\\": \\\"str\\\", \\\"timestamp\\\": \\\"int\\\", \\\"_list_length\\\": 1}]}, \\\"valuation\\\": {\\\"valuationDetails\\\": {\\\"valuationDetail\\\": [{\\\"secDetail\\\": {\\\"requested\\\": \\\"str\\\", \\\"classification\\\": \\\"str\\\", \\\"classificationType\\\": \\\"str\\\", \\\"symbol\\\": \\\"str\\\", \\\"CUSIP\\\": \\\"str\\\"}, \\\"equityDetail\\\": {\\\"priceToBookTTM\\\": \\\"float\\\", \\\"priceToSalesTTM\\\": \\\"float\\\"}, \\\"_list_length\\\": 1}]}}, \\\"analystOpinion\\\": {\\\"analystOpinionDetails\\\": {\\\"analystOpinionDetail\\\": [{\\\"secDet\"", "metadata": {}}
{"_id": "1335", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Revenue Estimate, api_description:This API endpoint returns analysts' estimate for a company's future quarterly and annual sales (total revenue).\n\nAvailability: Mega plan\nData weighting: 20 API credits per symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1336", "title": "", "text": "category_name:Mapping, tool_name:MapToolkit, api_name:Planet & Contour Vectortiles, api_description:Global Vectortiles combined with Contourlines., required_params: [{\"name\": \"y\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"z\", \"type\": \"string\", \"description\": \"\"}, {\"name\": \"x\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1337", "title": "", "text": "category_name:Data, tool_name:KVStore, api_name:Get items, api_description:Get <key,value> pairs ordered by DESC creation time, required_params: [{\"name\": \"collection\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1338", "title": "", "text": "category_name:Data, tool_name:KVStore, api_name:Get storage info, api_description:Show the user's storage status and information, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1339", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Country Region Divisions, api_description:Get the administrative divisions in the given region., required_params: [{\"name\": \"regioncode\", \"type\": \"STRING\", \"description\": \"An ISO-3166 or FIPS region code\"}, {\"name\": \"countryid\", \"type\": \"STRING\", \"description\": \"An ISO-3166 country code or WikiData id\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1340", "title": "", "text": "category_name:Weather, tool_name:AI Weather by Meteosource, api_name:current, api_description:**Current weather** conditions based on weather stations around the world.  Updated every 10 minutes. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`., required_params: [], optional_params: [], return_schema: {\"lat\": \"str\", \"lon\": \"str\", \"elevation\": \"int\", \"timezone\": \"str\", \"units\": \"str\", \"current\": {\"icon\": \"str\", \"icon_num\": \"int\", \"summary\": \"str\", \"temperature\": \"float\", \"feels_like\": \"float\", \"wind_chill\": \"float\", \"dew_point\": \"float\", \"wind\": {\"speed\": \"float\", \"gusts\": \"float\", \"angle\": \"int\", \"dir\": \"str\"}, \"precipitation\": {\"total\": \"float\", \"type\": \"str\"}, \"cloud_cover\": \"int\", \"ozone\": \"float\", \"pressure\": \"float\", \"uv_index\": \"float\", \"humidity\": \"int\", \"visibility\": \"float\"}}", "metadata": {}}
{"_id": "1341", "title": "", "text": "category_name:Weather, tool_name:Forecast, api_name:RapidApiGetForecastSummaryByCoordinates, api_description:Get Forecast summary information., required_params: [{\"name\": \"longitude\", \"type\": \"NUMBER\", \"description\": \"Longitude\"}, {\"name\": \"latitude\", \"type\": \"NUMBER\", \"description\": \"Latitude\"}], optional_params: [], return_schema: \"{\\\"items\\\": [{\\\"date\\\": \\\"str\\\", \\\"dateWithTimezone\\\": \\\"str\\\", \\\"freshSnow\\\": \\\"NoneType\\\", \\\"snowHeight\\\": \\\"NoneType\\\", \\\"weather\\\": {\\\"state\\\": \\\"int\\\", \\\"text\\\": \\\"str\\\", \\\"icon\\\": \\\"str\\\"}, \\\"prec\\\": {\\\"sum\\\": \\\"int\\\", \\\"probability\\\": \\\"int\\\", \\\"sumAsRain\\\": \\\"NoneType\\\", \\\"class\\\": \\\"int\\\"}, \\\"sunHours\\\": \\\"int\\\", \\\"rainHours\\\": \\\"NoneType\\\", \\\"temperature\\\": {\\\"min\\\": \\\"int\\\", \\\"max\\\": \\\"int\\\", \\\"avg\\\": \\\"NoneType\\\"}, \\\"wind\\\": {\\\"unit\\\": \\\"str\\\", \\\"direction\\\": \\\"str\\\", \\\"text\\\": \\\"str\\\", \\\"avg\\\": \\\"NoneType\\\", \\\"min\\\": \\\"int\\\", \\\"max\\\": \\\"int\\\", \\\"gusts\\\": {\\\"value\\\": \\\"int\\\", \\\"text\\\": \\\"NoneType\\\"}, \\\"significationWind\\\": \\\"bool\\\"}, \\\"windchill\\\": {\\\"min\\\": \\\"int\\\", \\\"max\\\": \\\"int\\\", \\\"avg\\\": \\\"NoneType\\\"}, \\\"snowLine\\\": {\\\"avg\\\": \\\"NoneType\\\", \\\"min\\\": \\\"NoneType\\\", \\\"max\\\": \\\"NoneType\\\", \\\"unit\\\": \\\"str\\\"}, \\\"astronomy\\\": {\\\"dawn\\\": \\\"str\\\", \\\"sunrise\\\": \\\"str\\\", \\\"suntransit\\\": \\\"str\\\", \\\"sunset\\\": \\\"str\\\", \\\"dusk\\\": \\\"str\\\", \\\"moonrise\\\": \\\"str\\\", \\\"moontransit\\\": \\\"str\\\", \\\"moonset\\\": \\\"str\\\", \\\"moonphase\\\": \\\"int\\\", \\\"moonzodiac\\\": \\\"int\\\"}, \\\"_list_length\\\": 14}], \\\"forecastDate\\\": \\\"str\\\", \\\"nextUpdate\\\": \\\"str\\\", \\\"source\\\": \\\"str\\\", \\\"point\\\": \\\"str\\\", \\\"fingerpri\"", "metadata": {}}
{"_id": "1342", "title": "", "text": "category_name:Weather, tool_name:Forecast, api_name:GetStatus, api_description:Check if the API is running., required_params: [], optional_params: [], return_schema: {\"status\": \"str\", \"date\": \"str\"}", "metadata": {}}
{"_id": "1343", "title": "", "text": "category_name:Sports, tool_name:Football Prediction, api_name:Away Team League Stats, api_description:Shows the league table and stats for the away team of an upcoming match., required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"(use predictions endpoint to get list of IDs)\"}], optional_params: [], return_schema: {\"data\": \"empty list\", \"errors\": {\"id\": \"str\"}}", "metadata": {}}
{"_id": "1344", "title": "", "text": "category_name:Data, tool_name:Local Business Data, api_name:Autocomplete, api_description:Returns place/address, business and query predictions for text-based geographic queries., required_params: [{\"name\": \"query\", \"type\": \"STRING\", \"description\": \"Free-text geographic query.\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1345", "title": "", "text": "category_name:Finance, tool_name:Coinbase, api_name:List recurring payments, api_description:List your recurring payments, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1346", "title": "", "text": "category_name:Education, tool_name:Helioviewer v1, api_name:uploadMovieToYouTube, api_description:Share an existing user-generated movie to YouTube., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Unique movie identifier (provided by the response to a `queueMovie` request).\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1347", "title": "", "text": "category_name:Travel, tool_name:Flightera Flight Data, api_name:flightSearch, api_description:Returns a list of flights for a given flight number. Minimum and/or maximum date can optionally be specified to limit the search. Results are ordered by departure date ascending. The next departure time is returned for pagination.\nWill return a 400 if the date range requested is outside the subscription level, required_params: [{\"name\": \"flnr\", \"type\": \"STRING\", \"description\": \"The flight number to request\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1348", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:importAddress, api_description:Returns all ethereum addresses created with an account., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "1349", "title": "", "text": "category_name:Movies, tool_name:OTT details, api_name:Params, api_description:Get array of values that can be used as params in Advanced Search ., required_params: [{\"name\": \"param\", \"type\": \"STRING\", \"description\": \"input 'genre' or 'language' to get array of genre or languages that can be used as filter in advanced search .\"}], optional_params: [], return_schema: {}", "metadata": {}}
{"_id": "1350", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Search (results v), api_description:The getResultsRequest endpoint returns car availability based on the provided search criteria, required_params: [{\"name\": \"dropoff_time\", \"type\": \"STRING\", \"description\": \"Car Drop Off Time (HH:mm:ss)\"}, {\"name\": \"pickup_time\", \"type\": \"STRING\", \"description\": \"Car Pick Up Time (HH:mm:ss)\"}, {\"name\": \"dropoff_date\", \"type\": \"STRING\", \"description\": \"Car Drop Off Date (YYYY-MM-DD or MM/DD/YYYY).\"}, {\"name\": \"pickup_date\", \"type\": \"STRING\", \"description\": \"Car Pick Up Date (YYYY-MM-DD or MM/DD/YYYY)\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1351", "title": "", "text": "category_name:Music, tool_name:Billboard-API, api_name:Billboard 200 Albums (Greatest of All Time), api_description:Provide the Greatest of All Time Billboard 200 Albums chart information, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1352", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Quote, api_description:Quote endpoint is an efficient method to retrieve the latest quote of the selected instrument., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Supports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"symbol\": \"str\", \"name\": \"str\", \"exchange\": \"str\", \"mic_code\": \"str\", \"currency\": \"str\", \"datetime\": \"str\", \"timestamp\": \"int\", \"open\": \"str\", \"high\": \"str\", \"low\": \"str\", \"close\": \"str\", \"volume\": \"str\", \"previous_close\": \"str\", \"change\": \"str\", \"percent_change\": \"str\", \"average_volume\": \"str\", \"is_market_open\": \"bool\", \"fifty_two_week\": {\"low\": \"str\", \"high\": \"str\", \"low_change\": \"str\", \"high_change\": \"str\", \"low_change_percent\": \"str\", \"high_change_percent\": \"str\", \"range\": \"str\"}}", "metadata": {}}
{"_id": "1353", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:SQRT, api_description:Square Root(SQRT) transforms input data with square root., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1354", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:LINEARREGINTERCEPT, api_description:Linear Regression Intercept(LINEARREGINTERCEPT) calculates the intercept for the linear regression trendline for each data point., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1355", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:ULTOSC, api_description:Ultimate Oscillator(ULTOSC) takes into account three different time periods to enhance the quality of overbought and oversold signals., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1356", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:MOM, api_description:Momentum(MOM) compares the current price with the previous price N timeperiods ago., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1357", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-competitors, api_description:Mapped to Competitors section in Quote tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1358", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/portfolio/get-credit-quality, api_description:Get credit quality as displayed in the Portfolio tab, required_params: [{\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}, {\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1359", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:{type}/parent/get-lowest-rated-investments, api_description:Get lowest rated investments as displayed in the Parent tab, required_params: [{\"name\": \"securityId\", \"type\": \"STRING\", \"description\": \"The value of securityId field returned in .../market/v2/get-returns\"}, {\"name\": \"type\", \"type\": \"string\", \"description\": \"One of the following values : etf|fund\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1360", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Ratings, api_description:This API request returns ratings of a mutual fund.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Symbol ticker of mutual fund\"}], optional_params: [], return_schema: {\"mutual_fund\": {\"ratings\": {\"performance_rating\": \"int\", \"risk_rating\": \"int\", \"return_rating\": \"int\"}}, \"status\": \"str\"}", "metadata": {}}
{"_id": "1361", "title": "", "text": "category_name:Tools, tool_name:ViewDNS, api_name:Chinese Firewall Test, api_description:Checks whether a site is blocked by the Great Firewall of China. This test checks across a number of servers from various locations in mainland China to determine if access to the site provided is possible from behind the Great Firewall of China.   This test checks for symptoms of DNS poisoning, one of the more common methods used by the Chinese government to block access to websites., required_params: [{\"name\": \"domain\", \"type\": \"STRING\", \"description\": \"the domain name to test\"}, {\"name\": \"output\", \"type\": \"STRING\", \"description\": \"the output format required ('xml' or 'json')\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1362", "title": "", "text": "category_name:Tools, tool_name:ViewDNS, api_name:DNS Propagation Checker, api_description:Check whether recent changes to DNS entries have propagated to DNS servers all over the world. Useful in troubleshooting DNS issues that appear to be isolated to one geographic region. Provides a status report on DNS propagation globally., required_params: [{\"name\": \"domain\", \"type\": \"STRING\", \"description\": \"the domain name to test\"}, {\"name\": \"output\", \"type\": \"STRING\", \"description\": \"the output format required ('xml' or 'json')\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1363", "title": "", "text": "category_name:Social, tool_name:Check Username, api_name:Vimeo, api_description:Check username on vimeo, required_params: [{\"name\": \"username\", \"type\": \"string\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1364", "title": "", "text": "category_name:Data, tool_name:GeoDB Cities, api_name:Country Region Details, api_description:Get the details of a specific country region, including number of cities., required_params: [{\"name\": \"regioncode\", \"type\": \"STRING\", \"description\": \"An ISO-3166 or FIPS region code\"}, {\"name\": \"countryid\", \"type\": \"STRING\", \"description\": \"An ISO-3166 country code or WikiData id\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1365", "title": "", "text": "category_name:Communication, tool_name:whin, api_name:websocket checker, api_description:Whin-receive (thick-client) websockets checker. \nThis endpoint is **ONLY** used to authorize websocket connections to the backend by thick clients. The Response is a token needed to complete handshaking., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1366", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:stock/v2/get-executive, api_description:Mapped to Executive tab, required_params: [{\"name\": \"performanceId\", \"type\": \"STRING\", \"description\": \"Value of performanceId field from .../auto-complete or /get-summary or .../get-movers endpoints\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1367", "title": "", "text": "category_name:Finance, tool_name:Morning Star, api_name:articles/get-details, api_description:Get articles details, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Value of id returned in .../articles/list endpoint\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1368", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:MAXINDEX, api_description:Index of highest value over period(MAXINDEX)., required_params: [{\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}, {\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1369", "title": "", "text": "category_name:Food, tool_name:Tasty, api_name:recipes/get-more-info, api_description:Get  more information of recipe if available, such as : ingredients, nutrition info, preparation, etc... This endpoint returns 404 status code, it means there is no more information to obtain.\n* .../recipes/list already returns ingredients, nutrition info, preparation, etc..., required_params: [{\"name\": \"id\", \"type\": \"NUMBER\", \"description\": \"The id value of any recipe returned in recipes/list API\"}], optional_params: [], return_schema: \"{\\\"brand\\\": \\\"NoneType\\\", \\\"instructions\\\": [{\\\"position\\\": \\\"int\\\", \\\"start_time\\\": \\\"int\\\", \\\"end_time\\\": \\\"int\\\", \\\"temperature\\\": \\\"NoneType\\\", \\\"appliance\\\": \\\"NoneType\\\", \\\"id\\\": \\\"int\\\", \\\"display_text\\\": \\\"str\\\", \\\"_list_length\\\": 7}], \\\"tags\\\": [{\\\"id\\\": \\\"int\\\", \\\"name\\\": \\\"str\\\", \\\"display_name\\\": \\\"str\\\", \\\"type\\\": \\\"str\\\", \\\"root_tag_type\\\": \\\"str\\\", \\\"_list_length\\\": 6}], \\\"cook_time_minutes\\\": \\\"NoneType\\\", \\\"keywords\\\": \\\"str\\\", \\\"language\\\": \\\"str\\\", \\\"servings_noun_singular\\\": \\\"str\\\", \\\"thumbnail_url\\\": \\\"str\\\", \\\"canonical_id\\\": \\\"str\\\", \\\"servings_noun_plural\\\": \\\"str\\\", \\\"updated_at\\\": \\\"int\\\", \\\"original_video_url\\\": \\\"NoneType\\\", \\\"country\\\": \\\"str\\\", \\\"draft_status\\\": \\\"str\\\", \\\"is_one_top\\\": \\\"bool\\\", \\\"name\\\": \\\"str\\\", \\\"seo_path\\\": \\\"NoneType\\\", \\\"price\\\": {\\\"consumption_portion\\\": \\\"int\\\", \\\"updated_at\\\": \\\"str\\\", \\\"total\\\": \\\"int\\\", \\\"portion\\\": \\\"int\\\", \\\"consumption_total\\\": \\\"int\\\"}, \\\"promotion\\\": \\\"str\\\", \\\"slug\\\": \\\"str\\\", \\\"total_time_minutes\\\": \\\"NoneType\\\", \\\"aspect_ratio\\\": \\\"str\\\", \\\"buzz_id\\\": \\\"NoneType\\\", \\\"id\\\": \\\"int\\\", \\\"is_shoppable\\\": \\\"bool\\\", \\\"num_servings\\\": \\\"int\\\", \\\"credits\\\": [{\\\"type\\\": \\\"str\\\", \\\"name\"", "metadata": {}}
{"_id": "1370", "title": "", "text": "category_name:Entertainment, tool_name:Humor-Jokes-and-Memes, api_name:Create Joke, api_description:Create a joke using a large language model., required_params: [{\"name\": \"topics\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"status\": \"str\", \"joke\": \"str\"}", "metadata": {}}
{"_id": "1371", "title": "", "text": "category_name:Finance, tool_name:Investing - Cryptocurrency Markets, api_name:coins/get-technical, api_description:Get technical information of specific cryptocurrency, required_params: [{\"name\": \"pair_ID\", \"type\": \"NUMBER\", \"description\": \"Value of pair&#95;id field returned in coins/list, coins/search, coins/list-pairs, etc...\"}], optional_params: [], return_schema: \"{\\\"data\\\": [{\\\"screen_ID\\\": \\\"str\\\", \\\"screen_data\\\": {\\\"pair_updatetime\\\": \\\"int\\\", \\\"technical_data\\\": [{\\\"timeframe\\\": \\\"str\\\", \\\"pair_ID\\\": \\\"str\\\", \\\"main_summary\\\": {\\\"text\\\": \\\"str\\\", \\\"text_color\\\": \\\"str\\\", \\\"bg_color\\\": \\\"str\\\"}, \\\"ma_summary\\\": {\\\"ma_buy\\\": \\\"str\\\", \\\"ma_sell\\\": \\\"str\\\", \\\"ma_text\\\": \\\"str\\\", \\\"ma_text_color\\\": \\\"str\\\", \\\"ma_bg_color\\\": \\\"str\\\"}, \\\"ti_summary\\\": {\\\"ti_buy\\\": \\\"str\\\", \\\"ti_sell\\\": \\\"str\\\", \\\"ti_neutral\\\": \\\"str\\\", \\\"ti_text\\\": \\\"str\\\", \\\"ti_text_color\\\": \\\"str\\\", \\\"ti_bg_color\\\": \\\"str\\\"}, \\\"pivot_points\\\": [{\\\"text\\\": \\\"str\\\", \\\"value_class\\\": \\\"str\\\", \\\"color_class_text\\\": \\\"str\\\", \\\"color_class_bg\\\": \\\"str\\\", \\\"value_class_color_text\\\": \\\"str\\\", \\\"value_fib\\\": \\\"str\\\", \\\"color_fib_text\\\": \\\"str\\\", \\\"color_fib_bg\\\": \\\"str\\\", \\\"value_fib_color_text\\\": \\\"str\\\", \\\"_list_length\\\": 7}], \\\"ti\\\": [{\\\"text\\\": \\\"str\\\", \\\"value\\\": \\\"str\\\", \\\"action\\\": \\\"str\\\", \\\"action_color_text\\\": \\\"str\\\", \\\"action_color_bg\\\": \\\"str\\\", \\\"value_color_text\\\": \\\"str\\\", \\\"_list_length\\\": 12}], \\\"ma\\\": [{\\\"text\\\": \\\"str\\\", \\\"simple\\\": \\\"str\\\", \\\"simple_action\\\": \\\"str\\\", \\\"simple_text_color\\\": \\\"str\\\", \\\"simple_text_bg\\\": \\\"str\\\", \\\"exponent\"", "metadata": {}}
{"_id": "1372", "title": "", "text": "category_name:Other, tool_name:Darko Androcec Example, api_name:Versions, api_description:Lists summary information about each Salesforce version currently available, including the version, label, and a link to each version's root., required_params: [], optional_params: [], return_schema: {\"label\": \"str\", \"url\": \"str\", \"version\": \"str\"}", "metadata": {}}
{"_id": "1373", "title": "", "text": "category_name:Finance, tool_name:Direct Debit Managed Service, api_name:Rapidata Services, api_description:Direct Debit Managed Service API, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1374", "title": "", "text": "category_name:Media, tool_name:Giphy, api_name:Random, api_description:Returns a random GIF, limited by tag. Excluding the tag parameter will return a random GIF from the Giphy catalog., required_params: [{\"name\": \"tag\", \"type\": \"STRING\", \"description\": \"the GIF tag to limit randomness by\"}], optional_params: [], return_schema: {\"data\": \"empty list\", \"meta\": {\"status\": \"int\", \"msg\": \"str\", \"response_id\": \"str\"}}", "metadata": {}}
{"_id": "1375", "title": "", "text": "category_name:Media, tool_name:Giphy, api_name:STICKER Translate, api_description:Using the same alogirithm as the GIF translate endpoint, the sticker translate endpoint turns words into stickers., required_params: [{\"name\": \"s\", \"type\": \"STRING\", \"description\": \"term or phrase to translate into a gif\"}], optional_params: [], return_schema: {\"data\": \"empty list\", \"meta\": {\"status\": \"int\", \"msg\": \"str\", \"response_id\": \"str\"}}", "metadata": {}}
{"_id": "1376", "title": "", "text": "category_name:Weather, tool_name:AI Weather by Meteosource, api_name:find_places, api_description:**Search places by name** to get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information** (country, region, elevation, timezone, etc.) for a given location.\n\nThe response can contain multiple places, sorted by relevance. You can then identify the one you want by coordinates, country, region, or type.\n\nUnlike the *find_places_prefix* endpoint, complete words are required here. You can search for cities, mountains, lakes, countries, etc., required_params: [{\"name\": \"text\", \"type\": \"STRING\", \"description\": \"Place name to search for\"}], optional_params: [], return_schema: {\"name\": \"str\", \"place_id\": \"str\", \"adm_area1\": \"str\", \"adm_area2\": \"str\", \"country\": \"str\", \"lat\": \"str\", \"lon\": \"str\", \"timezone\": \"str\", \"type\": \"str\"}", "metadata": {}}
{"_id": "1377", "title": "", "text": "category_name:Location, tool_name:Referential, api_name:Countries, api_description:List or search countries of the world in different languages.. Get iso a2, a3 country code and localized country name, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1378", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Artist featuring, api_description:Artist featuring, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Artist ID\"}], optional_params: [], return_schema: {\"data\": {\"artist\": {\"id\": \"str\", \"uri\": \"str\", \"profile\": {\"name\": \"str\"}, \"relatedContent\": {\"featuring\": {\"totalCount\": \"int\", \"items\": [{\"uri\": \"str\", \"id\": \"str\", \"owner\": {\"name\": \"str\"}, \"name\": \"str\", \"description\": \"str\", \"images\": {\"totalCount\": \"int\", \"items\": [{\"sources\": [{\"url\": \"str\", \"width\": \"NoneType\", \"height\": \"NoneType\", \"_list_length\": 1}], \"_list_length\": 1}]}, \"_list_length\": 8}]}}}}, \"extensions\": \"empty list\"}", "metadata": {}}
{"_id": "1379", "title": "", "text": "category_name:Music, tool_name:Spotify, api_name:Track credits, api_description:Get track credits, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"Track ID\"}], optional_params: [], return_schema: {\"trackUri\": \"str\", \"trackTitle\": \"str\", \"roleCredits\": [{\"roleTitle\": \"str\", \"artists\": [{\"uri\": \"str\", \"name\": \"str\", \"imageUri\": \"str\", \"subroles\": [\"list of str with length 1\"], \"weight\": \"float\", \"_list_length\": 3}], \"_list_length\": 3}], \"extendedCredits\": \"empty list\", \"sourceNames\": [\"list of str with length 1\"]}", "metadata": {}}
{"_id": "1380", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Download companies, api_description:Downloads a list of companies, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1381", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Search hotels, api_description:Get available hotels by the filter. Indicate the `location_id` -> use `Search locations`, check-in and check-out date, required_params: [{\"name\": \"date_checkout\", \"type\": \"STRING\", \"description\": \"Checkout date\"}, {\"name\": \"sort_order\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"location_id\", \"type\": \"STRING\", \"description\": \"Location id, use `Search locations` api point\"}, {\"name\": \"date_checkin\", \"type\": \"STRING\", \"description\": \"Checkin date\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1382", "title": "", "text": "category_name:Medical, tool_name:23andMe, api_name:carriers, api_description:Our analysis of whether or not each profile is a carrier for these diseases (starred reports). The person has 0, 1, or 2 mutations, or null if they're not analyzed at any of the markers. Normally, with one mutation, the person is considered a \"carrier\" and can pass the mutation to children; with two, the person is likely to be affected by the disease., required_params: [{\"name\": \"profile_id\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1383", "title": "", "text": "category_name:Tools, tool_name:ViewDNS, api_name:Iran Firewall Test, api_description:Test if any website is accessible using the Internet in Iran in real-time., required_params: [{\"name\": \"siteurl\", \"type\": \"STRING\", \"description\": \"the URL to test\"}, {\"name\": \"output\", \"type\": \"STRING\", \"description\": \"the output format required ('xml' or 'json')\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1384", "title": "", "text": "category_name:Finance, tool_name:Coinbase, api_name:Show individual subscription, api_description:Show an individual customer subscription, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1385", "title": "", "text": "category_name:Finance, tool_name:Coinbase, api_name:Show individual recurring payment, api_description:Show an individual recurring payment, required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1386", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:Title Seasons, api_description:Return all of the seasons for a TV show or mini-series., required_params: [{\"name\": \"id\", \"type\": \"STRING\", \"description\": \"This ID can be the Watchmode ID of the title (returned by other endpoints such as the list-titles endpoint), or found in the mapping file: https://api.watchmode.com/datasets/title_id_map.csv.\\n\\nYou can also pass an IMDB ID here instead, or a TMDB type and TMDB ID combination. For example, the TMDB combination for The Shawshank Redemption is movie-278 and for Breaking Bad is tv-1396. \"}], optional_params: [], return_schema: {\"id\": \"int\", \"poster_url\": \"str\", \"name\": \"str\", \"overview\": \"NoneType\", \"number\": \"NoneType\", \"air_date\": \"str\", \"episode_count\": \"NoneType\"}", "metadata": {}}
{"_id": "1387", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:Streaming Release Dates, api_description:Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service., required_params: [], optional_params: [], return_schema: {\"success\": \"bool\", \"statusCode\": \"int\", \"statusMessage\": \"str\"}", "metadata": {}}
{"_id": "1388", "title": "", "text": "category_name:Travel, tool_name:Flightera Flight Data, api_name:airlineInfo, api_description:Returns detailed airline information for airlines identified by the provided identifiers. In most cases the list should contain only one entry.\nHowever, due to the nature of the data, it is possible that multiple entries are returned.\nIf searched by ident, only one airline is returned.\nOne of ident, iata, icao, name must be provided., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1389", "title": "", "text": "category_name:Travel, tool_name:Flightera Flight Data, api_name:airlineSearch, api_description:Returns a list of airlines for a given country, identifiers or name search pattern. Multiple arguments can be specified to limit the search.\nEither one of the arguments must be specified., required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1390", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Search cars locations, api_description:Search locations by name, required_params: [{\"name\": \"name\", \"type\": \"STRING\", \"description\": \"Name\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1391", "title": "", "text": "category_name:Finance, tool_name:Trading View, api_name:ideas/get-view-count, api_description:Get view count related to an ideal post, required_params: [{\"name\": \"uuid\", \"type\": \"STRING\", \"description\": \"The value of image_url field returned in .../ideas/list endpoint\"}], optional_params: [], return_schema: {\"view_count\": \"int\"}", "metadata": {}}
{"_id": "1392", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:Titles with Changed Details, api_description:Get a listing of titles that have had a change to their basic details (overview, cast, genres, ratings, etc) within the date range., required_params: [], optional_params: [], return_schema: {\"success\": \"bool\", \"statusCode\": \"int\", \"statusMessage\": \"str\"}", "metadata": {}}
{"_id": "1393", "title": "", "text": "category_name:Entertainment, tool_name:SongMeanings, api_name:users.password.reset, api_description:Allows for a user to reset their password. When initiated, method will send the user an email with a link to click. The link will bring the user to desktop SongMeanings where the user will complete the password reset., required_params: [{\"name\": \"sm_emai\", \"type\": \"STRING\", \"description\": \"The user\\u2019s email address on the account to be reset.\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1394", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Market Movers - Stocks, api_description:Get the list of the top gaining or losing stocks today.\n\nTop gainers are ordered by the highest rate of price increase since the previous day's close. Top losers are ordered by the highest percentage of price decrease since the last day.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1395", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Market Movers - ETFs, api_description:Get the list of the top gaining or losing ETFs today.\n\nTop gainers are ordered by the highest rate of price increase since the previous day's close. Top losers are ordered by the highest percentage of price decrease since the last day.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol, required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1396", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:All data, api_description:This API request returns a complete breakdown of a mutual fund, including summary, performance, risk, ratings, composition, purchase_info, and sustainability.\n\nAvailability: Mega plan\nData weighting: 1000 API credits per symbol, required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Symbol ticker of mutual fund\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1397", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Currency Conversion, api_description:This API call returns real-time exchange rate and converted amount for currency pair. Works with forex and cryptocurrency., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"\"}, {\"name\": \"amount\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1398", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:MFs List, api_description:This API request returns a list of mutual funds available at Twelve Data. Sorting is in descending order by total assets value. The list is updated daily.\n\nWith Basic, Pro, and Ultra plans, only 50 records will be in response. Mega and Custom plans can access complete data on over 200,000 Mutual Funds., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1399", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:Stocks List, api_description:This API call returns an array of symbols available at Twelve Data API. This list is updated daily., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1400", "title": "", "text": "category_name:Social, tool_name:Instagram Data, api_name:Hashtag Info, api_description:Get hashtag metadata, top post, total posts and etc, required_params: [{\"name\": \"hashtag\", \"type\": \"STRING\", \"description\": \"Instagram hashtag\\n\\nValues accepted:\\n - summer\"}], optional_params: [], return_schema: \"{\\\"count\\\": \\\"int\\\", \\\"data\\\": {\\\"id\\\": \\\"int\\\", \\\"name\\\": \\\"str\\\", \\\"media_count\\\": \\\"int\\\", \\\"follow_status\\\": \\\"int\\\", \\\"following\\\": \\\"int\\\", \\\"allow_following\\\": \\\"int\\\", \\\"allow_muting_story\\\": \\\"bool\\\", \\\"profile_pic_url\\\": \\\"str\\\", \\\"non_violating\\\": \\\"int\\\", \\\"related_tags\\\": \\\"NoneType\\\", \\\"subtitle\\\": \\\"str\\\", \\\"social_context\\\": \\\"str\\\", \\\"social_context_profile_links\\\": \\\"empty list\\\", \\\"social_context_facepile_users\\\": \\\"empty list\\\", \\\"follow_button_text\\\": \\\"NoneType\\\", \\\"show_follow_drop_down\\\": \\\"bool\\\", \\\"formatted_media_count\\\": \\\"str\\\", \\\"challenge_id\\\": \\\"NoneType\\\", \\\"is_trending\\\": \\\"bool\\\", \\\"destination_info\\\": \\\"NoneType\\\", \\\"description\\\": \\\"NoneType\\\", \\\"debug_info\\\": \\\"NoneType\\\", \\\"fresh_topic_metadata\\\": \\\"NoneType\\\", \\\"promo_banner\\\": \\\"NoneType\\\", \\\"top\\\": {\\\"sections\\\": [{\\\"layout_type\\\": \\\"str\\\", \\\"layout_content\\\": {\\\"medias\\\": [{\\\"media\\\": {\\\"taken_at\\\": \\\"int\\\", \\\"pk\\\": \\\"int\\\", \\\"id\\\": \\\"str\\\", \\\"device_timestamp\\\": \\\"int\\\", \\\"media_type\\\": \\\"int\\\", \\\"code\\\": \\\"str\\\", \\\"client_cache_key\\\": \\\"str\\\", \\\"filter_type\\\": \\\"int\\\", \\\"caption\\\": {\\\"pk\\\": \\\"str\\\", \\\"user_id\\\": \\\"int\\\", \\\"text\\\": \\\"str\\\", \\\"type\\\": \\\"i\"", "metadata": {}}
{"_id": "1401", "title": "", "text": "category_name:Social, tool_name:Instagram Data, api_name:Post comments V2, api_description:Get post comments V2 - more accurate data\n\n**NOTE:** Profile should be public(not private), required_params: [{\"name\": \"post\", \"type\": \"STRING\", \"description\": \"Post example url:\\n- https://www.instagram.com/p/CAVeEm1gDh2/\"}], optional_params: [], return_schema: \"{\\\"comment_likes_enabled\\\": \\\"bool\\\", \\\"comments\\\": [{\\\"pk\\\": \\\"str\\\", \\\"user_id\\\": \\\"int\\\", \\\"text\\\": \\\"str\\\", \\\"type\\\": \\\"int\\\", \\\"created_at\\\": \\\"int\\\", \\\"created_at_utc\\\": \\\"int\\\", \\\"content_type\\\": \\\"str\\\", \\\"status\\\": \\\"str\\\", \\\"bit_flags\\\": \\\"int\\\", \\\"did_report_as_spam\\\": \\\"bool\\\", \\\"share_enabled\\\": \\\"bool\\\", \\\"user\\\": {\\\"pk\\\": \\\"int\\\", \\\"pk_id\\\": \\\"str\\\", \\\"username\\\": \\\"str\\\", \\\"full_name\\\": \\\"str\\\", \\\"is_private\\\": \\\"bool\\\", \\\"is_mentionable\\\": \\\"bool\\\", \\\"is_verified\\\": \\\"bool\\\", \\\"profile_pic_url\\\": \\\"str\\\", \\\"fbid_v2\\\": \\\"str\\\", \\\"latest_reel_media\\\": \\\"int\\\", \\\"latest_besties_reel_media\\\": \\\"int\\\"}, \\\"is_covered\\\": \\\"bool\\\", \\\"is_ranked_comment\\\": \\\"bool\\\", \\\"has_liked_comment\\\": \\\"bool\\\", \\\"comment_like_count\\\": \\\"int\\\", \\\"child_comment_count\\\": \\\"int\\\", \\\"preview_child_comments\\\": \\\"empty list\\\", \\\"other_preview_users\\\": \\\"empty list\\\", \\\"inline_composer_display_condition\\\": \\\"str\\\", \\\"has_translation\\\": \\\"bool\\\", \\\"private_reply_status\\\": \\\"int\\\", \\\"_list_length\\\": 9}], \\\"comment_count\\\": \\\"int\\\", \\\"caption\\\": {\\\"pk\\\": \\\"str\\\", \\\"user_id\\\": \\\"int\\\", \\\"text\\\": \\\"str\\\", \\\"type\\\": \\\"int\\\", \\\"created_at\\\": \\\"int\\\", \\\"created_at_utc\\\"\"", "metadata": {}}
{"_id": "1402", "title": "", "text": "category_name:Social, tool_name:Social Media Data TT, api_name:User metadata (information), api_description:Get user metadata. Number of followers, followings , avatar url, description and more, required_params: [{\"name\": \"username\", \"type\": \"STRING\", \"description\": \"The influencer username. For example: **amazon**\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1403", "title": "", "text": "category_name:Social, tool_name:Social Media Data TT, api_name:Music metadata, api_description:Get music metadata\n\nBasic metadata: number of posts,  direct url to the song(MP3) and etc, required_params: [{\"name\": \"music\", \"type\": \"STRING\", \"description\": \"Music url\"}], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1404", "title": "", "text": "category_name:Social, tool_name:Social Media Data TT, api_name:Trending feed (Video posts), api_description:Get current trending feed. \n\n- Due to nature of this endpoint the **max_cursor** is not required. Each request can return different data by default\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more., required_params: [], optional_params: [], return_schema: {\"message\": \"str\"}", "metadata": {}}
{"_id": "1405", "title": "", "text": "category_name:Sports, tool_name:Fitness Calculator, api_name:Food Info, api_description:Find the food info for a food id from the food database., required_params: [{\"name\": \"foodid\", \"type\": \"STRING\", \"description\": \"\"}], optional_params: [], return_schema: \"{\\\"status_code\\\": \\\"int\\\", \\\"request_result\\\": \\\"str\\\", \\\"data\\\": {\\\"foodid\\\": \\\"str\\\", \\\"description\\\": \\\"str\\\", \\\"portion\\\": \\\"float\\\", \\\"portionUnit\\\": \\\"str\\\", \\\"foodNutrients\\\": {\\\"Protein\\\": {\\\"unitname\\\": \\\"str\\\", \\\"value\\\": \\\"float\\\"}, \\\"Fat\\\": {\\\"Fatty acids, total saturated\\\": {\\\"unitname\\\": \\\"str\\\", \\\"value\\\": \\\"float\\\"}, \\\"Total lipid (fat)\\\": {\\\"unitname\\\": \\\"str\\\", \\\"value\\\": \\\"float\\\"}, \\\"Fatty acids, total monounsaturated\\\": {\\\"unitname\\\": \\\"str\\\", \\\"value\\\": \\\"float\\\"}, \\\"Fatty acids, total polyunsaturated\\\": {\\\"unitname\\\": \\\"str\\\", \\\"value\\\": \\\"float\\\"}}, \\\"Carbonhydrate\\\": {\\\"unitname\\\": \\\"str\\\", \\\"value\\\": \\\"float\\\"}, \\\"Energy\\\": {\\\"unitname\\\": \\\"str\\\", \\\"value\\\": \\\"int\\\"}, \\\"Water\\\": {\\\"unitname\\\": \\\"str\\\", \\\"value\\\": \\\"int\\\"}, \\\"Micronutrients\\\": {\\\"Vitamin E (alpha-tocopherol)\\\": {\\\"unitname\\\": \\\"str\\\", \\\"value\\\": \\\"float\\\"}, \\\"Carotene, beta\\\": {\\\"unitname\\\": \\\"str\\\", \\\"value\\\": \\\"int\\\"}, \\\"Vitamin K (phylloquinone)\\\": {\\\"unitname\\\": \\\"str\\\", \\\"value\\\": \\\"float\\\"}, \\\"Vitamin D3 (cholecalciferol)\\\": {\\\"unitname\\\": \\\"str\\\", \\\"value\\\": \\\"float\\\"}, \\\"Vitamin A, IU\\\": {\\\"unitname\\\": \\\"str\\\", \\\"value\\\": \\\"int\\\"}, \\\"Retinol\\\": {\\\"\"", "metadata": {}}
{"_id": "1406", "title": "", "text": "category_name:Travel, tool_name:Booking, api_name:properties/detail, api_description:Get brief information of a property, required_params: [{\"name\": \"rec_room_qty\", \"type\": \"NUMBER\", \"description\": \"The number of rooms\"}, {\"name\": \"search_id\", \"type\": \"STRING\", \"description\": \"The value returned in properties/list API having response contains the selected hotel\"}, {\"name\": \"departure_date\", \"type\": \"STRING\", \"description\": \"The check-out date \"}, {\"name\": \"hotel_id\", \"type\": \"STRING\", \"description\": \"The value of hotel_id field from properties/list API\"}, {\"name\": \"rec_guest_qty\", \"type\": \"NUMBER\", \"description\": \"The number of adults separated by comma, and how you arrange them in rooms\"}, {\"name\": \"arrival_date\", \"type\": \"STRING\", \"description\": \"The check-in date at hotel\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1407", "title": "", "text": "category_name:Media, tool_name:Vimeo, api_name:GetRelatedChannels, api_description:, required_params: [{\"name\": \"category\", \"type\": \"STRING\", \"description\": \"Category name\"}, {\"name\": \"format\", \"type\": \"STRING\", \"description\": \"json or xml or php\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1408", "title": "", "text": "category_name:Finance, tool_name:Twelve Data, api_name:LN, api_description:Natural Logarithm to the base of constant e(LN) transforms all data points with natural logarithm., required_params: [{\"name\": \"symbol\", \"type\": \"STRING\", \"description\": \"Instrument symbol, can be any equity, index, ETF, forex or cryptocurrency\\nE.g. `AAPL`, `EUR/USD`, `ETH/BTC`, ...\"}, {\"name\": \"interval\", \"type\": \"STRING\", \"description\": \"Interval between two consecutive points in time series\\nSupports: `1min`, `5min`, `15min`, `30min`, `45min`, `1h`, `2h`, `4h`, `1day`, `1week`, `1month`\"}], optional_params: [], return_schema: {\"meta\": {\"symbol\": \"str\", \"interval\": \"str\", \"currency\": \"str\", \"exchange_timezone\": \"str\", \"exchange\": \"str\", \"mic_code\": \"str\", \"type\": \"str\", \"indicator\": {\"name\": \"str\", \"series_type\": \"str\"}}, \"values\": [{\"datetime\": \"str\", \"ln\": \"str\", \"_list_length\": 30}], \"status\": \"str\"}", "metadata": {}}
{"_id": "1409", "title": "", "text": "category_name:Media, tool_name:Giphy, api_name:Translate, api_description:This is prototype endpoint for using Giphy as a translation engine for a GIF dialect. The translate API draws on search, but uses the Giphy \"special sauce\" to handle translating from one vocabulary to another. In this case, words and phrases to GIFs. Use a plus or url encode for phrases., required_params: [{\"name\": \"s\", \"type\": \"STRING\", \"description\": \"term or phrase to translate into a GIF\"}], optional_params: [], return_schema: {\"data\": \"empty list\", \"meta\": {\"status\": \"int\", \"msg\": \"str\", \"response_id\": \"str\"}}", "metadata": {}}
{"_id": "1410", "title": "", "text": "category_name:Weather, tool_name:AI Weather by Meteosource, api_name:historical_weather, api_description:Receive **historical weather** data for a **given day** in the past **8 years**. Define your location using GPS coordinates or `place_id` from `Location endpoints`., required_params: [{\"name\": \"date\", \"type\": \"DATE (YYYY-MM-DD)\", \"description\": \"The UTC day of the data in the past in `YYYY-MM-DD` format.\"}], optional_params: [], return_schema: {\"lat\": \"str\", \"lon\": \"str\", \"elevation\": \"int\", \"timezone\": \"str\", \"units\": \"str\", \"data\": [{\"date\": \"str\", \"weather\": \"str\", \"icon\": \"int\", \"temperature\": \"float\", \"feels_like\": \"float\", \"wind_chill\": \"float\", \"dew_point\": \"float\", \"wind\": {\"speed\": \"float\", \"gusts\": \"float\", \"angle\": \"int\", \"dir\": \"str\"}, \"cloud_cover\": \"int\", \"pressure\": \"float\", \"precipitation\": {\"total\": \"float\", \"type\": \"str\"}, \"ozone\": \"int\", \"humidity\": \"float\", \"_list_length\": 24}]}", "metadata": {}}
{"_id": "1411", "title": "", "text": "category_name:Weather, tool_name:AI Weather by Meteosource, api_name:daily, api_description:**Daily weather** forecast for the next 21 days. **Global** data are based on our **AI technology**, which uses many different models. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`., required_params: [], optional_params: [], return_schema: {\"lat\": \"str\", \"lon\": \"str\", \"elevation\": \"int\", \"units\": \"str\", \"daily\": {\"data\": [{\"day\": \"str\", \"weather\": \"str\", \"icon\": \"int\", \"summary\": \"str\", \"predictability\": \"int\", \"temperature\": \"float\", \"temperature_min\": \"float\", \"temperature_max\": \"float\", \"feels_like\": \"float\", \"feels_like_min\": \"float\", \"feels_like_max\": \"float\", \"wind_chill\": \"float\", \"wind_chill_min\": \"float\", \"wind_chill_max\": \"float\", \"dew_point\": \"float\", \"dew_point_min\": \"float\", \"dew_point_max\": \"float\", \"wind\": {\"speed\": \"float\", \"gusts\": \"float\", \"dir\": \"str\", \"angle\": \"int\"}, \"cloud_cover\": \"int\", \"pressure\": \"float\", \"precipitation\": {\"total\": \"float\", \"type\": \"str\"}, \"probability\": {\"precipitation\": \"int\", \"storm\": \"float\", \"freeze\": \"float\"}, \"ozone\": \"float\", \"humidity\": \"int\", \"visibility\": \"float\", \"_list_length\": 21}]}}", "metadata": {}}
{"_id": "1412", "title": "", "text": "category_name:Weather, tool_name:AI Weather by Meteosource, api_name:minutely, api_description:**Minute-by-minute** precipitation forecast for the next 60 minutes. Updated in **real-time** based on our **AI nowcasting models**. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`., required_params: [], optional_params: [], return_schema: {\"lat\": \"str\", \"lon\": \"str\", \"elevation\": \"int\", \"timezone\": \"str\", \"units\": \"str\", \"minutely\": {\"summary\": \"str\", \"data\": [{\"date\": \"str\", \"precipitation\": \"float\", \"_list_length\": 60}]}}", "metadata": {}}
{"_id": "1413", "title": "", "text": "category_name:Travel, tool_name:Flightera Flight Data, api_name:aircraftSearch, api_description:A list of plane registrations for a given search criteria.\nCan search by airline ident, country, model\nIf multiple arguments are provided, they will be chained as AND\nReturns only currently active aircraft, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1414", "title": "", "text": "category_name:Weather, tool_name:Ambee Air Quality, api_name:Weather, api_description:Get weather data for any place based on coordinates, required_params: [{\"name\": \"lat\", \"type\": \"NUMBER\", \"description\": \"Latitude of the coordinate to get the weather\"}, {\"name\": \"lng\", \"type\": \"NUMBER\", \"description\": \"Longitude of the coordinate to find the weather\"}], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1415", "title": "", "text": "category_name:Travel, tool_name:Priceline com Provider, api_name:Download amenities, api_description:Downloads a list of Amenities, required_params: [], optional_params: [], return_schema: \"\"", "metadata": {}}
{"_id": "1416", "title": "", "text": "category_name:Finance, tool_name:Chaingateway.io, api_name:deleteAddress, api_description:Deletes an existing ethereum address. Be careful when using this function., required_params: [], optional_params: [], return_schema: {\"ok\": \"bool\", \"description\": \"str\"}", "metadata": {}}
{"_id": "1417", "title": "", "text": "category_name:Finance, tool_name:Trading View, api_name:auto-complete (Deprecated), api_description:Get suggestion by term or phrase, required_params: [{\"name\": \"text\", \"type\": \"STRING\", \"description\": \"Any term or phrase that you are familiar with\"}], optional_params: [], return_schema: {\"symbol\": \"str\", \"description\": \"str\", \"type\": \"str\", \"exchange\": \"str\", \"currency_code\": \"str\", \"provider_id\": \"str\", \"country\": \"str\"}", "metadata": {}}
{"_id": "1418", "title": "", "text": "category_name:Entertainment, tool_name:Watchmode, api_name:Search, api_description:Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/, required_params: [{\"name\": \"search_field\", \"type\": \"STRING\", \"description\": \"The field for us to search in, either a 3rd party ID or \\\\\\\\\\\\\\\"name\\\\\\\\\\\\\\\" which will search for a movie/show title or a person's name depending on the type(s) set. Must be one of the following options:\\nimdb_id, tmdb_person_id, tmdb_movie_id, tmdb_tv_id, name.\"}, {\"name\": \"search_value\", \"type\": \"STRING\", \"description\": \"The value we should search for. For example, if you set search_field to imdb_id, this would be the IMDB title/person ID, eg. tt0944947.\"}], optional_params: [], return_schema: {\"title_results\": [{\"resultType\": \"str\", \"id\": \"int\", \"name\": \"str\", \"type\": \"str\", \"year\": \"int\", \"imdb_id\": \"str\", \"tmdb_id\": \"int\", \"tmdb_type\": \"str\", \"_list_length\": 3}], \"people_results\": \"empty list\"}", "metadata": {}}
